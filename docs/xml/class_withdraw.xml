<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_withdraw" kind="class" language="C++" prot="public">
    <compoundname>Withdraw</compoundname>
    <includes refid="_withdraw_8h" local="no">Withdraw.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_withdraw_1a1f78639642ec1f5958c9a10ba918486d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Withdraw::ALLOW_ONE_SIDE_BENEFIT_WITHDRAW</definition>
        <argsstring></argsstring>
        <name>ALLOW_ONE_SIDE_BENEFIT_WITHDRAW</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="42" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a5d472446383b1ab9fe73caf8b0922699" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Withdraw::PROPERTY_SHOW_SCALE</definition>
        <argsstring></argsstring>
        <name>PROPERTY_SHOW_SCALE</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If only one side can benefit from second side. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="43" column="7" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a44a30346125e5b69aa963da7ffc12a33" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_board" kindref="compound">Board</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Board&gt; Withdraw::gameboard_</definition>
        <argsstring></argsstring>
        <name>gameboard_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scale factor for property sprite display. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="44" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aca8273f35695ce6e49319d57371678fe" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int Withdraw::FONT_SIZE</definition>
        <argsstring></argsstring>
        <name>FONT_SIZE</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to monopoly gameboard object ,source for data about fields. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="45" column="20" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ab44410dd3350b8b8949a39c08cfb3911" prot="private" static="no" mutable="no">
        <type>sf::Font</type>
        <definition>sf::Font Withdraw::font_</definition>
        <argsstring></argsstring>
        <name>font_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Font size for rendering text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="46" column="10" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ad163e641a488281abab32842c85b2fde" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Button&gt; &gt; Withdraw::buttons_</definition>
        <argsstring></argsstring>
        <name>buttons_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Font used for rendering text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="47" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0ccc2bb41b0a4ec04dfa4e9c1da00c9f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; Withdraw::texts_</definition>
        <argsstring></argsstring>
        <name>texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of buttons used in the withdrawal process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="48" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a88d5f54145cb05fcbff249c615cbaefa" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::choose_player_text_</definition>
        <argsstring></argsstring>
        <name>choose_player_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of text objects used in the withdrawal process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="52" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a4122670df068bdce985a21a71d1f7e08" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::CHOOSE_PLAYER_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>CHOOSE_PLAYER_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(980,
		200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of text objects used in the withdrawal choose player process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="53" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a3d261e31276f8a5ced50440b0114c371" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::choose_player_1_button_</definition>
        <argsstring></argsstring>
        <name>choose_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for first text object used in the withdrawal choose player process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="55" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ab088557554bc9b99073488656243c9b7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::choose_player_2_button_</definition>
        <argsstring></argsstring>
        <name>choose_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button object for choosing withdrawal player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="56" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a1e9fbf08735f12a2e969eca7830ce53a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::choose_player_3_button_</definition>
        <argsstring></argsstring>
        <name>choose_player_3_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button object for choosing withdrawal player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="57" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ad71c04f24e21c54370d8da01a4e72103" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::choose_player_4_button_</definition>
        <argsstring></argsstring>
        <name>choose_player_4_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button object for choosing withdrawal player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="58" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a769edb0164afec0b31d5d7e4a95dfa87" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::RESIGN_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>RESIGN_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(980, 700)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button object for choosing withdrawal player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="59" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aa9534e8b649125d1288edbb51488b844" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::resign_button_</definition>
        <argsstring></argsstring>
        <name>resign_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for resign button used in the withdrawal choose player process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="62" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a3672cc9e89c64aaa5cbd4e2f7ff94c80" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::RESIGN_VALUE_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>RESIGN_VALUE_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(820, 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button object for resigning from choosing withdrawal player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="65" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a817d662feb296d0ee58491884a983afd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::resign_value_button_</definition>
        <argsstring></argsstring>
        <name>resign_value_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for resign button used in the withdrawal main process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="67" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a93e06a3f553be871e6eec908be903b63" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::submit_value_button_</definition>
        <argsstring></argsstring>
        <name>submit_value_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button object for resigning from withdrawal process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="68" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a795e13301ce503eb43ee6404aa561a36" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::COLUMN_1_POSITION</definition>
        <argsstring></argsstring>
        <name>COLUMN_1_POSITION</name>
        <initializer>=
		sf::Vector2f(200, 200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button object for submitting withdrawal process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="70" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a172bcb919121b2b6078aae592755530c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_1_text_</definition>
        <argsstring></argsstring>
        <name>player_1_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for first column of withdrawal main process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="72" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0d000810ef7467cdf159c593b141b65a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_1_money_</definition>
        <argsstring></argsstring>
        <name>player_1_money_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for first withdrawal player name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="73" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a106f2a703deb51600aedf8444b85b401" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::player_1_money_buffer_</definition>
        <argsstring></argsstring>
        <name>player_1_money_buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for first withdrawal player money. Buffer for <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s money. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="74" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aabb6c324eb133dcb8327164fea3e9a3c" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::player_1_money_index_buffer_</definition>
        <argsstring></argsstring>
        <name>player_1_money_index_buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer for <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s offered money. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="75" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0c926e8ffd5f5aeb274c188a75dcb9c2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Withdraw::player1Properties_</definition>
        <argsstring></argsstring>
        <name>player1Properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="76" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a1e46f38ab3d0d32dca4556f71610d9a7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::plus_1_player_1_button_</definition>
        <argsstring></argsstring>
        <name>plus_1_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of properties id&apos;s of player1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="78" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a40d58146f7e713c562c8a1610fe24d58" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::plus_10_player_1_button_</definition>
        <argsstring></argsstring>
        <name>plus_10_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for add 1 money to offer value from player1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="80" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a466c204fd31c08a7cb1c489b983f24bd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::plus_100_player_1_button_</definition>
        <argsstring></argsstring>
        <name>plus_100_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for add 10 money to offer value from player1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="82" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a4b753c1c32c95509b6147b6150087828" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::minus_1_player_1_button_</definition>
        <argsstring></argsstring>
        <name>minus_1_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for add 100 money to offer value from player1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="84" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a5f9e9ceb751cc6c9c9b97f23b4a3264e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::minus_10_player_1_button_</definition>
        <argsstring></argsstring>
        <name>minus_10_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for substract 1 money from offer value from player1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="86" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0bd0a4f847d6736f11eb3741d7002cf5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::minus_100_player_1_button_</definition>
        <argsstring></argsstring>
        <name>minus_100_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for substract 10 money from offer value from player1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="88" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a7678a706b7f9c8bcb74709c25c21fb46" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PROPERTY_PLAYER1_POSITION</definition>
        <argsstring></argsstring>
        <name>PROPERTY_PLAYER1_POSITION</name>
        <initializer>=
		sf::Vector2f(150, 450)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for substract 100 money from offer value from player1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="89" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a70854acfb72428561fdb02c1a8a3a1f2" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite Withdraw::property_player_1_sprite_</definition>
        <argsstring></argsstring>
        <name>property_player_1_sprite_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="91" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ab4e22da9508b8f7636fcec3da996d459" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt;sf::Texture&gt; Withdraw::property_player_1_texture_</definition>
        <argsstring></argsstring>
        <name>property_player_1_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 1 properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="92" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0042b9fbb857954efbb7ca209351fa28" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; Withdraw::property_player_1_texts_</definition>
        <argsstring></argsstring>
        <name>property_player_1_texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 1 properties texture. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="94" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a3f511d8a4405cd29962e5e9efdcf9bb2" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::NEXT_PROPERTY_PLAYER1_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>NEXT_PROPERTY_PLAYER1_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(350, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of text objects used in player 1 property description. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="95" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a6bd141eb15ec7c381024a2abbf9d4477" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PREVIOUS_PROPERTY_PLAYER1_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>PREVIOUS_PROPERTY_PLAYER1_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(200, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 properties next button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="97" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a21eb05c69daba1f841baca27344c08b3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::next_property_player_1_button_</definition>
        <argsstring></argsstring>
        <name>next_property_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 properties previous button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="99" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1abecc8f01b5b3ac373973d3faf52a0a70" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::previous_propertyplayer_1_button_</definition>
        <argsstring></argsstring>
        <name>previous_propertyplayer_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 1 next property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="101" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a4fe6f193547a30e9a6bb8943a299ded4" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::current_property_player_1_showed_</definition>
        <argsstring></argsstring>
        <name>current_property_player_1_showed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 1 previous property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="102" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a3a3248849eaff8c6a367c65e5b28ef9b" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::COLUMN_2_POSITION</definition>
        <argsstring></argsstring>
        <name>COLUMN_2_POSITION</name>
        <initializer>=
		sf::Vector2f(600, 200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_field" kindref="compound">Field</ref> position of currently showed player 1 property </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="104" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a02a0405fd53dd4e36f449fe89d421ef9" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_1_index_text_</definition>
        <argsstring></argsstring>
        <name>player_1_index_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for second column of withdrawal main process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="106" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a93dd1fcf90c50c6c18361361af4903c1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_1_index_money_</definition>
        <argsstring></argsstring>
        <name>player_1_index_money_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 1 offer name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="107" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a49d9632e3cf4a2287400b7b7036fd78a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Withdraw::player_1_index_properties_</definition>
        <argsstring></argsstring>
        <name>player_1_index_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 1 offer money. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="108" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a2e15af4a6be78686bad7fe32a0796ebb" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PROPERTY_PLAYER1_INDEX_POSITION</definition>
        <argsstring></argsstring>
        <name>PROPERTY_PLAYER1_INDEX_POSITION</name>
        <initializer>=
		sf::Vector2f(550, 450)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of properties id&apos;s of player 1 offer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="109" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a97840e4a6ef7ed64529786168035c997" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite Withdraw::property_player_1_index_sprite_</definition>
        <argsstring></argsstring>
        <name>property_player_1_index_sprite_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 offered properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="111" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aca0813aca00d314f4c672c0301ea4e68" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt;sf::Texture&gt; Withdraw::property_player_1_index_texture_</definition>
        <argsstring></argsstring>
        <name>property_player_1_index_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 1 offered properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="112" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aaa2bbbb61654ef11350781bdc00f29f3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; Withdraw::property_player_1_index_texts_</definition>
        <argsstring></argsstring>
        <name>property_player_1_index_texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 1 offered propertie texture. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="114" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ac6b877625bffe10ba394af04d1aee016" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::NEXT_PROPERTY_PLAYER1_INDEX_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>NEXT_PROPERTY_PLAYER1_INDEX_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(750, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of text objects used in player 1 offered property description. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="115" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a4d40697e5c912fd5047231e5fb981ae5" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PREVIOUS_PROPERTY_PLAYER1_INDEX_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>PREVIOUS_PROPERTY_PLAYER1_INDEX_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(600, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 offered properties next button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="117" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0eb7f472a151aaa336649ed22f2405d2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::next_property_player_1_index_button_</definition>
        <argsstring></argsstring>
        <name>next_property_player_1_index_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 previous properties next button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="120" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0e144887be4410c38f894d25bd8ba5e3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::previous_property_player_1_index_button_</definition>
        <argsstring></argsstring>
        <name>previous_property_player_1_index_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 1 next offered property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="121" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0b6549d0b0654407d4fb3afce8a6851e" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::current_property_player_1_index_showed_</definition>
        <argsstring></argsstring>
        <name>current_property_player_1_index_showed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 1 previous offered property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="124" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1abb2dbbb85624ed381c2dd67b8a90b786" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::COLUMN_3_POSITION</definition>
        <argsstring></argsstring>
        <name>COLUMN_3_POSITION</name>
        <initializer>=
		sf::Vector2f(1000, 200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_field" kindref="compound">Field</ref> position of currently showed player 1 offered property </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="126" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a3b4e5542f315fb29417adfdca79eb777" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_2_index_text_</definition>
        <argsstring></argsstring>
        <name>player_2_index_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for third column of withdrawal main process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="128" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a249daff6b1f823e488c29e413f40d05e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_2_index_money_</definition>
        <argsstring></argsstring>
        <name>player_2_index_money_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 2 offer name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="129" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ac840765f26c6037781b4111e6a49b723" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Withdraw::player_2_index_properties_</definition>
        <argsstring></argsstring>
        <name>player_2_index_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 2 offer money. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="130" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a3c46a52d6b53a74fa7fa095d25fe58be" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PROPERTY_PLAYER2_INDEX_POSITION</definition>
        <argsstring></argsstring>
        <name>PROPERTY_PLAYER2_INDEX_POSITION</name>
        <initializer>=
		sf::Vector2f(950, 450)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of properties id&apos;s of player 2 offer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="131" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a4e46b4f1fa43228b4a092631523bf165" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite Withdraw::property_player_2_index_sprite_</definition>
        <argsstring></argsstring>
        <name>property_player_2_index_sprite_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 offered properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="133" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a60ed92a59834460b457d501a0b646e19" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt;sf::Texture&gt; Withdraw::property_player_2_index_texture_</definition>
        <argsstring></argsstring>
        <name>property_player_2_index_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 2 offered properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="134" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ac455e4a78d6b713fb9bc91da4ee69767" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; Withdraw::property_player_2_index_texts_</definition>
        <argsstring></argsstring>
        <name>property_player_2_index_texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 2 offered propertie texture. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="136" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1af3a80850de833ed8ecf827e24700bd14" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::NEXT_PROPERTY_PLAYER2_INDEX_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>NEXT_PROPERTY_PLAYER2_INDEX_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(1150, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of text objects used in player 2 offered property description. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="137" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a6d69f0226a6e918a4ae6955053696763" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PREVIOUS_PROPERTY_PLAYER2_INDEX_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>PREVIOUS_PROPERTY_PLAYER2_INDEX_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(1000, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 offered properties next button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="139" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0a589c2ea9b4451bc380424933bacbed" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::next_property_player_2_index_button_</definition>
        <argsstring></argsstring>
        <name>next_property_player_2_index_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 previous properties next button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="142" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a5f28aa4bd625b67865644067e9b51b7d" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::previousPropertyPlayer2IndexButton_</definition>
        <argsstring></argsstring>
        <name>previousPropertyPlayer2IndexButton_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 next offered property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="144" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a8a6b3e3ba72fd0fc643db860c33bec13" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::current_property_player_2_index_showed_</definition>
        <argsstring></argsstring>
        <name>current_property_player_2_index_showed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 previous offered property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="146" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a90edf62004dc72316df8d297d77343d3" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::COLUMN_4_POSITION</definition>
        <argsstring></argsstring>
        <name>COLUMN_4_POSITION</name>
        <initializer>=
		sf::Vector2f(1400, 200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_field" kindref="compound">Field</ref> position of currently showed player 2 offered property </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="148" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a30297a75a6d4f897dbf3658a1ddbf912" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_2_text_</definition>
        <argsstring></argsstring>
        <name>player_2_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for fourth column of withdrawal main process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="150" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aa00c973f994646100ab6c4127a6c3f0f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_2_money_</definition>
        <argsstring></argsstring>
        <name>player_2_money_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for second withdrawal player name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="151" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a8556151d4ec912d312da7ad96b520f00" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::player_2_money_buffer_</definition>
        <argsstring></argsstring>
        <name>player_2_money_buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for second withdrawal player money. Buffer for <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s money. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="152" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a2dcb3c24f7ffc9124953205cf5e2e982" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::player_2_money_index_buffer_</definition>
        <argsstring></argsstring>
        <name>player_2_money_index_buffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer for <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s offered money. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="153" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a87d85a5dc542ec588869bd76e4413ad8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; Withdraw::player_2_properties_</definition>
        <argsstring></argsstring>
        <name>player_2_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="154" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0e940fdf01bc6fe888d60de312240666" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::plus_1_player_2_button_</definition>
        <argsstring></argsstring>
        <name>plus_1_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of properties id&apos;s of player 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="156" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1af8d2a400ac9ee058585290aba4a948c0" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::plus_10_player_2_button_</definition>
        <argsstring></argsstring>
        <name>plus_10_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for add 1 money to offer value from player 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="158" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a893a9cda62f39401c8b1857d6a19c7e9" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::plus_100_player_2_button_</definition>
        <argsstring></argsstring>
        <name>plus_100_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for add 10 money to offer value from player 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="160" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a421000c1cf052314a97ea0551b67d8f3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::minus_1_player_2_button_</definition>
        <argsstring></argsstring>
        <name>minus_1_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for add 100 money to offer value from player 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="162" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a0b8daf418327a7cee84c8df38d979fa1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::minus_10_player_2_button_</definition>
        <argsstring></argsstring>
        <name>minus_10_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for substract 1 money from offer value from player 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="164" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ae34a4674c2fa433db686443a0c6916e4" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::minus_100_player_2_button_</definition>
        <argsstring></argsstring>
        <name>minus_100_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for substract 10 money from offer value from player 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="166" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a4e13697fa1b1f949474066f6a34d3ab3" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PROPERTY_PLAYER2_POSITION</definition>
        <argsstring></argsstring>
        <name>PROPERTY_PLAYER2_POSITION</name>
        <initializer>=
		sf::Vector2f(1350, 450)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for substract 100 money from offer value from player 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="167" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a4b695fb2bbf24fa6477a0c10a8040afa" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite Withdraw::property_player_2_sprite_</definition>
        <argsstring></argsstring>
        <name>property_player_2_sprite_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="169" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ab2e4a32f6c7c7d688feab406f0419250" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt;sf::Texture&gt; Withdraw::property_player_2_texture_</definition>
        <argsstring></argsstring>
        <name>property_player_2_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 2 properties sprite. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="170" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1af730071e11150b44971b5b573ec796d0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; Withdraw::propertyPlayer2Texts_</definition>
        <argsstring></argsstring>
        <name>propertyPlayer2Texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_player" kindref="compound">Player</ref> 2 properties texture. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="172" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a6e2ea1df3a9b2470a674f6644a0a0d47" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::NEXT_PROPERTY_PLAYER2_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>NEXT_PROPERTY_PLAYER2_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(1550, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of text objects used in player 1 property description. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="173" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a07194be9b2a239d70da2e9892cc95e7f" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::PREVIOUS_PROPERTY_PLAYER2_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>PREVIOUS_PROPERTY_PLAYER2_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(1400, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 properties next button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="175" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a1044cc1e7b75c6ce1d542bbe57f67b2a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::next_property_player_2_button_</definition>
        <argsstring></argsstring>
        <name>next_property_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 properties previous button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="177" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a2b2fb925faae8cd21b5867814d20db1c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::previous_propertyplayer_2_button_</definition>
        <argsstring></argsstring>
        <name>previous_propertyplayer_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 next property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="179" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a6196c893dbb4afd30cea4b0334fc2517" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::current_property_player_2_showed_</definition>
        <argsstring></argsstring>
        <name>current_property_player_2_showed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 previous property showing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="180" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1af364094ffc65e7539c44edbb8dd44819" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::ADD_PROPERTY_PLAYER1_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>ADD_PROPERTY_PLAYER1_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(475, 550)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_field" kindref="compound">Field</ref> position of currently showed player 2 property </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="182" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a1356aec366d49a44c6423318b5810853" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::REMOVE_PROPERTY_PLAYER1_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>REMOVE_PROPERTY_PLAYER1_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(475, 650)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 add to offered properties button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="184" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aa83e20035de979e7c89cc5be0cf1658e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::add_property_player_1_button_</definition>
        <argsstring></argsstring>
        <name>add_property_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 1 remove from offered properties button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="187" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a063bd12785754d8c61069625db6cae43" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::remove_property_player_1_button_</definition>
        <argsstring></argsstring>
        <name>remove_property_player_1_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 1 add to offered properties. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="189" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1accf92fc3afe3141ff9d44133f01107e1" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::ADD_PROPERTY_PLAYER2_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>ADD_PROPERTY_PLAYER2_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(1275, 550)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 1 remove from offered properties. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="190" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a2653b2973971551facdd27c50a08b5f0" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::REMOVE_PROPERTY_PLAYER2_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>REMOVE_PROPERTY_PLAYER2_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(1275, 650)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 add to offered properties button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="192" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a5f324f7eddab88cbba750d67ecd3950b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::add_property_player_2_button_</definition>
        <argsstring></argsstring>
        <name>add_property_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 remove from offered properties button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="195" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aad1448596ae07b3184184d0d53a29062" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::remove_property_player_2_button_</definition>
        <argsstring></argsstring>
        <name>remove_property_player_2_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 add to offered properties. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="197" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1afc9cd689ff8a564ec7e4010889cee5a4" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::DECISION_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>DECISION_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(980, 200)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 remove from offered properties. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="200" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aec842bb7604b6393d2e3ec0f9373eedd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_info_text_</definition>
        <argsstring></argsstring>
        <name>player_info_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 decision stuff. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="201" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ad4654176564a04fbb1b46502184020c0" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_info_money_</definition>
        <argsstring></argsstring>
        <name>player_info_money_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 2 name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="202" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1aedfde9125e91f746d5c5fe89b4566c0b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_info_get_properties_</definition>
        <argsstring></argsstring>
        <name>player_info_get_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 2 money balance from withdraw. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="204" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ab86f24c5f9b6b2592e4d30a4674a3366" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; Withdraw::player_info_lose_properties_</definition>
        <argsstring></argsstring>
        <name>player_info_lose_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 2 wihdraw properties gain. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="206" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a2df54de34773f26fe0a4ec1e4836fd04" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::RESIGN_DECISION_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>RESIGN_DECISION_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(820, 400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to text object for player 2 wihdraw properties loose. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="207" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1afd4c8b53fafaf461e33f75151cb27576" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Withdraw::ACCEPT_DECISION_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>ACCEPT_DECISION_BUTTON_POSITION</name>
        <initializer>=
		sf::Vector2f(1140, 400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 accept withdraw button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="209" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a3b7022ad6656badad8c30dc76df39107" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::resign_decision_button_</definition>
        <argsstring></argsstring>
        <name>resign_decision_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Origin position for player 2 resign withdraw button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="211" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1af9ebbbdbe3ff7cbc0d36abeb655c3549" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; Withdraw::accpet_decision_button_</definition>
        <argsstring></argsstring>
        <name>accpet_decision_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 resign from withdraw decision. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="212" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1ad3f12454b54b6e38e2f1802f5be621bb" prot="private" static="no" mutable="no">
        <type><ref refid="main_8h_1a1fbb23a4b2427b486453417312008cfb" kindref="member">TurnState</ref></type>
        <definition>TurnState Withdraw::turn_state_prev_</definition>
        <argsstring></argsstring>
        <name>turn_state_prev_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to button for player 2 accept withdraw decision. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="214" column="11" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a901cb4100c7a7243e1526d94a8495631" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Player&gt; Withdraw::player_1_to_with_draw_</definition>
        <argsstring></argsstring>
        <name>player_1_to_with_draw_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer for monopoly engine turn when withdraw was started. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="215" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_withdraw_1a5b3a4dccefddf0392d1faf6e040f3845" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Player&gt; Withdraw::player_2_to_with_draw_</definition>
        <argsstring></argsstring>
        <name>player_2_to_with_draw_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer for player 1 of withdraw (active) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="216" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_withdraw_1a672bf80120a1db25fb6b3ed7f3410ea1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::createDefaultButton</definition>
        <argsstring>(sf::String text, unsigned int width, unsigned int height)</argsstring>
        <name>createDefaultButton</name>
        <param>
          <type>sf::String</type>
          <declname>text</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer for player 2 of withdraw (passive) Add a button to vector of all buttons for withdraw handling</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>sf::String object for button text </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of <ref refid="class_button" kindref="compound">Button</ref> object sprite </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>height of <ref refid="class_button" kindref="compound">Button</ref> object sprite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to created <ref refid="class_button" kindref="compound">Button</ref> object instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="226" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="459" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1abb7a5c0fcf78cf1b294fca4561e89e79" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::addButton</definition>
        <argsstring>(std::shared_ptr&lt; Button &gt; button_tmp)</argsstring>
        <name>addButton</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
          <declname>button_tmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a button to vector of all buttons for withdraw handling</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button_tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to <ref refid="class_button" kindref="compound">Button</ref> object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="233" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="542" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1af7b37ca1bdb08aaae5ce0d1ba7fabb6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::addText</definition>
        <argsstring>(std::shared_ptr&lt; sf::Text &gt; text_tmp)</argsstring>
        <name>addText</name>
        <param>
          <type>std::shared_ptr&lt; sf::Text &gt;</type>
          <declname>text_tmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a text to vector of all texts for withdraw handling</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text_tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to sf::Text object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="240" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="547" bodyend="550"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_withdraw_1aa7f606a8ceb3f06ee4314d611da095c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Withdraw::Withdraw</definition>
        <argsstring>()</argsstring>
        <name>Withdraw</name>
        <briefdescription>
<para>Constructor for the <ref refid="class_withdraw" kindref="compound">Withdraw</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="246" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1af44ca99891be717d4d35aa640ebd2189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt; unsigned int &gt; Withdraw::getPlayer1IndexProperties</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1IndexProperties</name>
        <briefdescription>
<para>Getter for the properties of <ref refid="class_player" kindref="compound">Player</ref> 1 offer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of unsigned integers representing the indexes of <ref refid="class_player" kindref="compound">Player</ref> 1 offer properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="253" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a9d72290f34908615cffaeeba90119484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt; unsigned int &gt; Withdraw::getPlayer2IndexProperties</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2IndexProperties</name>
        <briefdescription>
<para>Getter for the properties of <ref refid="class_player" kindref="compound">Player</ref> 2 offer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of unsigned integers representing the indexes of <ref refid="class_player" kindref="compound">Player</ref> 2 offer properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="260" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ace23ed297ef8cfdce12fedf5866e4db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setPlayer1IndexProperties</definition>
        <argsstring>(std::vector&lt; unsigned int &gt; new_index_properties)</argsstring>
        <name>setPlayer1IndexProperties</name>
        <param>
          <type>std::vector&lt; unsigned int &gt;</type>
          <declname>new_index_properties</declname>
        </param>
        <briefdescription>
<para>Setter for the properties of <ref refid="class_player" kindref="compound">Player</ref> 1 offer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_index_properties</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of unsigned integers representing the new index for <ref refid="class_player" kindref="compound">Player</ref> 1 offer properties. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="268" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a0203605f1161eed758e26bae91bc80ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setPlayer2IndexProperties</definition>
        <argsstring>(std::vector&lt; unsigned int &gt; new_index_properties)</argsstring>
        <name>setPlayer2IndexProperties</name>
        <param>
          <type>std::vector&lt; unsigned int &gt;</type>
          <declname>new_index_properties</declname>
        </param>
        <briefdescription>
<para>Setter for the properties of <ref refid="class_player" kindref="compound">Player</ref> 2 offer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_index_properties</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of unsigned integers representing the new index for <ref refid="class_player" kindref="compound">Player</ref> 2 offer properties. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="276" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ac3ff353242bfee519f0058258631c454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setBoard</definition>
        <argsstring>(std::shared_ptr&lt; Board &gt; board_ptr)</argsstring>
        <name>setBoard</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_board" kindref="compound">Board</ref> &gt;</type>
          <declname>board_ptr</declname>
        </param>
        <briefdescription>
<para>Setter for the gameboard. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>board_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to the <ref refid="class_board" kindref="compound">Board</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="283" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="518" bodyend="520"/>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a0f4055d95a2cefafbe974d49bcec5531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setTurnState</definition>
        <argsstring>(TurnState state)</argsstring>
        <name>setTurnState</name>
        <param>
          <type><ref refid="main_8h_1a1fbb23a4b2427b486453417312008cfb" kindref="member">TurnState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Setter for the turn state of monopolygame when withdraw was started. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>A TurnState enumeration representing the turn state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="290" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="522" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a0f3fd96ab6c928dcac54ac55a1b7be3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="main_8h_1a1fbb23a4b2427b486453417312008cfb" kindref="member">TurnState</ref></type>
        <definition>TurnState Withdraw::getTurnState</definition>
        <argsstring>()</argsstring>
        <name>getTurnState</name>
        <briefdescription>
<para>Getter for the turn state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current TurnState enumeration representing the turn state of monopolygame when withdraw was started. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="298" column="11" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="526" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a3ea0051e8185c3702e1009936e508df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Font &amp;</type>
        <definition>sf::Font &amp; Withdraw::getFont</definition>
        <argsstring>()</argsstring>
        <name>getFont</name>
        <briefdescription>
<para>Getter for the font used in rendering text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the SFML Font object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="305" column="10" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="534" bodyend="536"/>
        <referencedby refid="class_withdraw_1a2f8b173f0fdf10f7bb3232c57b96f114" compoundref="_withdraw_8cc" startline="483" endline="516">createChoosePlayerScreen</referencedby>
        <referencedby refid="class_withdraw_1ad4a9b237332fe45afa4730ccc20e1e0b" compoundref="_withdraw_8cc" startline="206" endline="244">createDecisionPlayerScreen</referencedby>
        <referencedby refid="class_withdraw_1a1e777d7591c901b33d190e8f5c6f4a77" compoundref="_withdraw_8cc" startline="246" endline="457">createValuePlayerScreen</referencedby>
        <referencedby refid="class_withdraw_1ab7bdb73ec95d72b844d65de653cb4214" compoundref="_withdraw_8cc" startline="715" endline="1108">showProperty</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aed82a313991c3f3a38c68738a613256f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Withdraw::getFontSize</definition>
        <argsstring>() const</argsstring>
        <name>getFontSize</name>
        <briefdescription>
<para>Getter for the font size used in rendering text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An unsigned integer representing the font size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="312" column="14" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="538" bodyend="540"/>
        <referencedby refid="class_withdraw_1a2f8b173f0fdf10f7bb3232c57b96f114" compoundref="_withdraw_8cc" startline="483" endline="516">createChoosePlayerScreen</referencedby>
        <referencedby refid="class_withdraw_1ad4a9b237332fe45afa4730ccc20e1e0b" compoundref="_withdraw_8cc" startline="206" endline="244">createDecisionPlayerScreen</referencedby>
        <referencedby refid="class_withdraw_1a1e777d7591c901b33d190e8f5c6f4a77" compoundref="_withdraw_8cc" startline="246" endline="457">createValuePlayerScreen</referencedby>
        <referencedby refid="class_withdraw_1ab7bdb73ec95d72b844d65de653cb4214" compoundref="_withdraw_8cc" startline="715" endline="1108">showProperty</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a01109432adc0c8b78f288c1805ca02d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setFont</definition>
        <argsstring>(sf::Font font)</argsstring>
        <name>setFont</name>
        <param>
          <type>sf::Font</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Setter for the font used in rendering text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the SFML Font object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="319" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="530" bodyend="532"/>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a9176fc09f39a59cec708685ee053b9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Button &gt; &gt; &amp; Withdraw::getButtons</definition>
        <argsstring>()</argsstring>
        <name>getButtons</name>
        <briefdescription>
<para>Getter for the vector of buttons used in the withdrawal process. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of shared pointers to <ref refid="class_button" kindref="compound">Button</ref> objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="326" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="552" bodyend="554"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a095689316bdad34354e14b8ffd18c995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; Withdraw::getTexts</definition>
        <argsstring>()</argsstring>
        <name>getTexts</name>
        <briefdescription>
<para>Getter for the vector of text objects used in the withdrawal process. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of shared pointers to SFML Text objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="333" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="556" bodyend="558"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a0b40b07770eab69344d8bdb35902155e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1Button</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1Button</name>
        <briefdescription>
<para>Getter for button for choosing <ref refid="class_player" kindref="compound">Player</ref> 1 as passive in withdraw. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to choose <ref refid="class_player" kindref="compound">Player</ref> 1 <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="340" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="560" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a091c37bf6929de0085fabf2d7f59574b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2Button</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2Button</name>
        <briefdescription>
<para>Getter for button for choosing <ref refid="class_player" kindref="compound">Player</ref> 2 as passive in withdraw. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to choose <ref refid="class_player" kindref="compound">Player</ref> 2 <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="347" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="564" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ac2bbfa2841c0e30a80b78ac00b626df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer3Button</definition>
        <argsstring>()</argsstring>
        <name>getPlayer3Button</name>
        <briefdescription>
<para>Getter for button for choosing <ref refid="class_player" kindref="compound">Player</ref> 3 as passive in withdraw. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to choose <ref refid="class_player" kindref="compound">Player</ref> 3 <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="354" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="568" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a8466a780108a4cee43a60c7ce5f96286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer4Button</definition>
        <argsstring>()</argsstring>
        <name>getPlayer4Button</name>
        <briefdescription>
<para>Getter for button for choosing <ref refid="class_player" kindref="compound">Player</ref> 4 as passive in withdraw. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to choose <ref refid="class_player" kindref="compound">Player</ref> 4 <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="361" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="572" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a710eb4657248e1b8d3d058dcdc576ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getResignButton</definition>
        <argsstring>()</argsstring>
        <name>getResignButton</name>
        <briefdescription>
<para>Getter for the resign button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the resign <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="368" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="576" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a2f8b173f0fdf10f7bb3232c57b96f114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::createChoosePlayerScreen</definition>
        <argsstring>()</argsstring>
        <name>createChoosePlayerScreen</name>
        <briefdescription>
<para>Creates the screen for choosing players during withdrawal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="373" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="483" bodyend="516"/>
        <references refid="class_withdraw_1a3ea0051e8185c3702e1009936e508df6" compoundref="_withdraw_8cc" startline="534" endline="536">getFont</references>
        <references refid="class_withdraw_1aed82a313991c3f3a38c68738a613256f" compoundref="_withdraw_8cc" startline="538" endline="540">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a1e777d7591c901b33d190e8f5c6f4a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::createValuePlayerScreen</definition>
        <argsstring>()</argsstring>
        <name>createValuePlayerScreen</name>
        <briefdescription>
<para>Creates the screen for specifying values during withdrawal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="378" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="246" bodyend="457"/>
        <references refid="class_withdraw_1a3ea0051e8185c3702e1009936e508df6" compoundref="_withdraw_8cc" startline="534" endline="536">getFont</references>
        <references refid="class_withdraw_1aed82a313991c3f3a38c68738a613256f" compoundref="_withdraw_8cc" startline="538" endline="540">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ad4a9b237332fe45afa4730ccc20e1e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::createDecisionPlayerScreen</definition>
        <argsstring>()</argsstring>
        <name>createDecisionPlayerScreen</name>
        <briefdescription>
<para>Creates the screen for making decisions during withdrawal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="383" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="206" bodyend="244"/>
        <references refid="class_withdraw_1a3ea0051e8185c3702e1009936e508df6" compoundref="_withdraw_8cc" startline="534" endline="536">getFont</references>
        <references refid="class_withdraw_1aed82a313991c3f3a38c68738a613256f" compoundref="_withdraw_8cc" startline="538" endline="540">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a06d1cefc0b0fcf141a9a5c7ee0084a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setChooseScreenVisible</definition>
        <argsstring>(bool is_visible)</argsstring>
        <name>setChooseScreenVisible</name>
        <param>
          <type>bool</type>
          <declname>is_visible</declname>
        </param>
        <briefdescription>
<para>Sets the visibility of the choose player screen. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_visible</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether the screen should be visible. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="390" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="22" bodyend="33"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1acfbbad2752cb193ca17e8f2ab3ce9b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setValueScreenVisible</definition>
        <argsstring>(bool is_visible)</argsstring>
        <name>setValueScreenVisible</name>
        <param>
          <type>bool</type>
          <declname>is_visible</declname>
        </param>
        <briefdescription>
<para>Sets the visibility of the value player screen. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_visible</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether the screen should be visible. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="397" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="51" bodyend="140"/>
        <references refid="class_withdraw_1ab7bdb73ec95d72b844d65de653cb4214" compoundref="_withdraw_8cc" startline="715" endline="1108">showProperty</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a554845d087366abdc2672a7b6224ff68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setDecisionScreenVisible</definition>
        <argsstring>(bool is_visible)</argsstring>
        <name>setDecisionScreenVisible</name>
        <param>
          <type>bool</type>
          <declname>is_visible</declname>
        </param>
        <briefdescription>
<para>Sets the visibility of the decision player screen. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_visible</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean indicating whether the screen should be visible. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="404" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="142" bodyend="204"/>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ad6d6fe6a2cc686f1deea05fa9ae5033f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setPlayer1ToWithdraw</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; player_ptr)</argsstring>
        <name>setPlayer1ToWithdraw</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>player_ptr</declname>
        </param>
        <briefdescription>
<para>Sets Active <ref refid="class_player" kindref="compound">Player</ref> for withdrawal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to the <ref refid="class_player" kindref="compound">Player</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="411" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="580" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aed1f0d13e5f3ce83500ec90b9338796a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::setPlayer2ToWithdraw</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; player_ptr)</argsstring>
        <name>setPlayer2ToWithdraw</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>player_ptr</declname>
        </param>
        <briefdescription>
<para>Sets Passive <ref refid="class_player" kindref="compound">Player</ref> for withdrawal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A shared pointer to the <ref refid="class_player" kindref="compound">Player</ref> object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="418" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="584" bodyend="586"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aeb5e3609e3ff27cbcda1f564c18d256f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Player &gt; Withdraw::getPlayer1ToWithdraw</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1ToWithdraw</name>
        <briefdescription>
<para>Getter for Active <ref refid="class_player" kindref="compound">Player</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the <ref refid="class_player" kindref="compound">Player</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="425" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="596" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a82a457bf898c8845ab38458a8a2d3cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Player &gt; Withdraw::getPlayer2ToWithdraw</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2ToWithdraw</name>
        <briefdescription>
<para>Getter for Passive <ref refid="class_player" kindref="compound">Player</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the <ref refid="class_player" kindref="compound">Player</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="432" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="600" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a08e2ce2ebc989bcabb109f6b8ca2489c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getResignValueButton</definition>
        <argsstring>()</argsstring>
        <name>getResignValueButton</name>
        <briefdescription>
<para>Getter for the resign button from value screen. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the resign value <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="439" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="588" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ac604b13c491169954292fee491bcea26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getSubmitValueButton</definition>
        <argsstring>()</argsstring>
        <name>getSubmitValueButton</name>
        <briefdescription>
<para>Getter for the submit value button from value screen. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the submit value <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="446" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="592" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a842454e0b86473552db820f70c703624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1minus1</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1minus1</name>
        <briefdescription>
<para>Getter for Active <ref refid="class_player" kindref="compound">Player</ref> minus 1 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 1 <ref refid="class_button" kindref="compound">Button</ref> object for Active <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="453" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="604" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a10b2cabb94eb5d484271a94c97b70370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1minus10</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1minus10</name>
        <briefdescription>
<para>Getter for Active <ref refid="class_player" kindref="compound">Player</ref> minus 10 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 10 <ref refid="class_button" kindref="compound">Button</ref> object for Active <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="460" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="607" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a4367d468bb941dd8326b5856dd525a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1minus100</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1minus100</name>
        <briefdescription>
<para>Getter for Active <ref refid="class_player" kindref="compound">Player</ref> minus 100 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 100 <ref refid="class_button" kindref="compound">Button</ref> object for Active <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="467" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="610" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a58b1ffd27603e753ba7abdb29acf1314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1plus1</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1plus1</name>
        <briefdescription>
<para>Getter for Active <ref refid="class_player" kindref="compound">Player</ref> plus 1 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 1 <ref refid="class_button" kindref="compound">Button</ref> object for Active <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="474" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="613" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1acaf2b764f148764e5d4e600fc9291c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1plus10</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1plus10</name>
        <briefdescription>
<para>Getter for Active <ref refid="class_player" kindref="compound">Player</ref> plus 10 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 10 <ref refid="class_button" kindref="compound">Button</ref> object for Active <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="481" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="617" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a3697bee3aadebc0cde7bb14b5734f200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1plus100</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1plus100</name>
        <briefdescription>
<para>Getter for Active <ref refid="class_player" kindref="compound">Player</ref> plus 100 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 100 <ref refid="class_button" kindref="compound">Button</ref> object for Active <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="488" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="621" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a433b90092e9aea1deade9d09bf0f53bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2minus1</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2minus1</name>
        <briefdescription>
<para>Getter for Passive <ref refid="class_player" kindref="compound">Player</ref> minus 1 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 1 <ref refid="class_button" kindref="compound">Button</ref> object for Passive <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="495" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="625" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a2991a78ccf18dc06191bf5bb2493a8c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2minus10</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2minus10</name>
        <briefdescription>
<para>Getter for Passive <ref refid="class_player" kindref="compound">Player</ref> minus 10 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 10 <ref refid="class_button" kindref="compound">Button</ref> object for Passive <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="502" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="628" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1add8c0389fcb067416de24846724a90e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2minus100</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2minus100</name>
        <briefdescription>
<para>Getter for Passive <ref refid="class_player" kindref="compound">Player</ref> minus 100 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the minus 100 <ref refid="class_button" kindref="compound">Button</ref> object for Passive <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="509" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="631" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ad71f8629800c81970c28e69d19091fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2plus1</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2plus1</name>
        <briefdescription>
<para>Getter for Passive <ref refid="class_player" kindref="compound">Player</ref> plus 1 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the plus 1 <ref refid="class_button" kindref="compound">Button</ref> object for Passive <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="516" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="634" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a510ba4ba2fa7044c7769f737158e7a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2plus10</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2plus10</name>
        <briefdescription>
<para>Getter for Passive <ref refid="class_player" kindref="compound">Player</ref> plus 10 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the plus 10 <ref refid="class_button" kindref="compound">Button</ref> object for Passive <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="523" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="638" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ab624df7121d9f7b636f712a141663ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2plus100</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2plus100</name>
        <briefdescription>
<para>Getter for Passive <ref refid="class_player" kindref="compound">Player</ref> plus 100 money button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the plus 100 <ref refid="class_button" kindref="compound">Button</ref> object for Passive <ref refid="class_player" kindref="compound">Player</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="530" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="642" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a6a5f2ccfb239b924b0521a390609d5fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1NextButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1NextButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1 next property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the next property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="537" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="646" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a6add7cd9e18b8066ce60af2722e84422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1PreviousButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1PreviousButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1 previous property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the previous property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="544" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="650" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aaba58d928bb11f6430f0b3dee9e9114d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2NextButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2NextButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2 next property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the next property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="551" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="654" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aa074572589a75bd97bd3771243752ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2PreviousButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2PreviousButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2 previous property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the previous property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 2 . </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="558" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="658" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ac0c3e2f788b930cd5ed0031bbf0fba92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1IndexNextButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1IndexNextButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1 offer next property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the next property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 1 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="565" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="662" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a1efca195a06baa1f08d7183e994b7e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1IndexPreviousButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1IndexPreviousButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1 index previous property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the previous property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 1 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="572" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="665" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aed5e9b3d3c905f942bc6e7dba72fda4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2IndexNextButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2IndexNextButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2 index next property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the next property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 2 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="579" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="668" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a9ea76ae122045f46ab5afc2c6f73aa6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2IndexPreviousButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2IndexPreviousButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2 index previous property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the previous property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 2 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="586" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="671" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aceb8cd9e4b2c1ed99e72278ca840969d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1AddButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1AddButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1 add to offer property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the add property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 1 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="593" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="675" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a0acdd19c19851dd0ea796de6d94b1ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer1RemoveButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer1RemoveButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1 remove from offer property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the remove property <ref refid="class_button" kindref="compound">Button</ref> object from <ref refid="class_player" kindref="compound">Player</ref> 1 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="600" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="678" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a36687d86bc6d5b4649b8a112d2e39fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2AddButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2AddButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2 add to offer property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the add property <ref refid="class_button" kindref="compound">Button</ref> object for <ref refid="class_player" kindref="compound">Player</ref> 2 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="607" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="681" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1afdd56cdac9e6e103132dd5f4b11dde82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getPlayer2RemoveButton</definition>
        <argsstring>()</argsstring>
        <name>getPlayer2RemoveButton</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2 remove from offer property button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the remove property <ref refid="class_button" kindref="compound">Button</ref> object from <ref refid="class_player" kindref="compound">Player</ref> 2 offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="614" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="684" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a2852ce90c05783a2d8f1921ce5df4992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getResignDecisionButton</definition>
        <argsstring>()</argsstring>
        <name>getResignDecisionButton</name>
        <briefdescription>
<para>Getter for the resign decision button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the resign decision <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="621" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1325" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aab8cdcdf3e5d4b4339b60f0808700838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; Withdraw::getAcceptDecisionButton</definition>
        <argsstring>()</argsstring>
        <name>getAcceptDecisionButton</name>
        <briefdescription>
<para>Getter for the accept decision button. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A shared pointer to the accept decision <ref refid="class_button" kindref="compound">Button</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="628" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1329" bodyend="1331"/>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a19f82027534a13d80536846c5af25829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::makeWithdraw</definition>
        <argsstring>()</argsstring>
        <name>makeWithdraw</name>
        <briefdescription>
<para>Initiates the withdrawal process (exchange of money and properties). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="633" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1333" bodyend="1396"/>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="class_property_field_1aff8b7ee4568a0721149145074f2aa160" compoundref="_field_8cc" startline="170" endline="172">PropertyField::setOwner</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" compoundref="main_8h" startline="132">UTILITY</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ad2d77a9938893978c4a83432d51b67f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::moneyTransferIndex</definition>
        <argsstring>(unsigned int player_num, int money)</argsstring>
        <name>moneyTransferIndex</name>
        <param>
          <type>unsigned int</type>
          <declname>player_num</declname>
        </param>
        <param>
          <type>int</type>
          <declname>money</declname>
        </param>
        <briefdescription>
<para>Transfers money during the withdrawal process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player_num</parametername>
</parameternamelist>
<parameterdescription>
<para>An unsigned integer representing the player number (1-2). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>money</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer representing the amount of money to transfer (can be negative). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="641" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="688" bodyend="706"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a90b6611bc2eeec22d3b562fd183bf81e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::moneyTextUpdate</definition>
        <argsstring>()</argsstring>
        <name>moneyTextUpdate</name>
        <briefdescription>
<para>Updates the displayed money text during the withdrawal process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="646" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="708" bodyend="713"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1ab7bdb73ec95d72b844d65de653cb4214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::showProperty</definition>
        <argsstring>(int column)</argsstring>
        <name>showProperty</name>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Shows the property details for the specified column during the withdrawal process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>An integer representing the column index (1-4). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="653" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="715" bodyend="1108"/>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a1721e377912232cb891c4f9d8b96a59a" compoundref="main_8h" startline="138">FOUR_HOUSES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594beaf5d374fd66e430d41b08642d1197a585" compoundref="main_8h" startline="144">FOUR_STATIONS</references>
        <references refid="class_withdraw_1a3ea0051e8185c3702e1009936e508df6" compoundref="_withdraw_8cc" startline="534" endline="536">getFont</references>
        <references refid="class_withdraw_1aed82a313991c3f3a38c68738a613256f" compoundref="_withdraw_8cc" startline="538" endline="540">getFontSize</references>
        <references refid="class_field_1a2bca2e8d2cb8bfc9ebbc61f617e3e7b9" compoundref="_field_8cc" startline="60" endline="62">Field::getGraphicPath</references>
        <references refid="class_field_1a24552dc1bcb1f574ce8db0761c33790a" compoundref="_field_8cc" startline="68" endline="70">Field::getHeight</references>
        <references refid="class_street_field_1a51d31e674e5526536210d24ed5bdc2c2" compoundref="_field_8cc" startline="231" endline="233">StreetField::getHotelPrice</references>
        <references refid="class_street_field_1a812b99b2c3dc615a26f81756fa41aa51" compoundref="_field_8cc" startline="227" endline="229">StreetField::getHousePrice</references>
        <references refid="class_property_field_1a118e8dac5640ec978cbd14519e0880fe" compoundref="_field_8cc" startline="146" endline="148">PropertyField::getMortgage</references>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <references refid="class_property_field_1aafcf4b8fd5fb49a727cb564c0c99a3eb" compoundref="_field_8cc" startline="138" endline="140">PropertyField::getPrice</references>
        <references refid="class_utility_field_1a5476d4355c82780f3ec8d173513590ae" compoundref="_field_8cc" startline="274" endline="276">UtilityField::getRentMultipliers</references>
        <references refid="class_street_field_1af6ffa6777200808afa686a07a1be6e9a" compoundref="_field_8cc" startline="223" endline="225">StreetField::getRentValues</references>
        <references refid="class_station_field_1ae23e828cefa568b38ff525cd9db3b511" compoundref="_field_8cc" startline="266" endline="268">StationField::getRentValues</references>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="class_field_1ad5706e4c154214fe43db7ecc7a6b74ca" compoundref="_field_8cc" startline="64" endline="66">Field::getWidth</references>
        <references refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" compoundref="main_8cc" startline="18">height</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a9d02c50113762d50ac07c31528974579" compoundref="main_8h" startline="138">HOTEL</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3afbe39846abf8d0ca655daa4c5e6675f6" compoundref="main_8h" startline="138">NO_HOUSES</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3ae9309352dfb1c2542328bf77b979b796" compoundref="main_8h" startline="138">ONE_HOUSE</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea5abd12f5714ad8a5c78fbcfdd13d8363" compoundref="main_8h" startline="144">ONE_STATION</references>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113ae71bdf2240af02a5ef8ded8c01a8a692" compoundref="main_8h" startline="150">ONE_UTILITY</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a3cfedac7ca093a36b14fd248a3b8a5b4" compoundref="main_8h" startline="138">THREE_HOUSES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea4ee7c40343f7fc51e168ebb665d4865d" compoundref="main_8h" startline="144">THREE_STATIONS</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a0ab6dd54fe0c67ece897f56705db3e3f" compoundref="main_8h" startline="138">TWO_HOUESES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea324e5b4c78cf4a0c67ef4164dc635dc2" compoundref="main_8h" startline="144">TWO_STATIONS</references>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113afd679c479954ac2c4c7143bc5e45cb6d" compoundref="main_8h" startline="150">TWO_UTILITIES</references>
        <references refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" compoundref="main_8cc" startline="17">width</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
        <referencedby refid="class_withdraw_1acfbbad2752cb193ca17e8f2ab3ce9b1a" compoundref="_withdraw_8cc" startline="51" endline="140">setValueScreenVisible</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aaa00a66063e50b3aa3cf82a04d0fa859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite &amp;</type>
        <definition>sf::Sprite &amp; Withdraw::getSpritePropertyPlayer1</definition>
        <argsstring>()</argsstring>
        <name>getSpritePropertyPlayer1</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s property sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the SFML Sprite object representing <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="660" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1110" bodyend="1112"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a3af83369b71131d448d48f9383c890c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; Withdraw::getTextsPropertyPlayer1</definition>
        <argsstring>()</argsstring>
        <name>getTextsPropertyPlayer1</name>
        <briefdescription>
<para>Getter for the text objects representing <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s property details. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of shared pointers to SFML Text objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="667" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1114" bodyend="1116"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a7b2ecdf7344d06ee5a1124a3e125618d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite &amp;</type>
        <definition>sf::Sprite &amp; Withdraw::getSpritePropertyPlayer1Index</definition>
        <argsstring>()</argsstring>
        <name>getSpritePropertyPlayer1Index</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s offered property sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the SFML Sprite object representing <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s offered properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="674" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1118" bodyend="1120"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a516b9056df7808d8c2a33a57772d9ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; Withdraw::getTextsPropertyPlayer1Index</definition>
        <argsstring>()</argsstring>
        <name>getTextsPropertyPlayer1Index</name>
        <briefdescription>
<para>Getter for the text objects representing <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s offered property details. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of shared pointers to SFML Text objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="681" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1122" bodyend="1124"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a7d62275f21184e601494c0068d28fab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite &amp;</type>
        <definition>sf::Sprite &amp; Withdraw::getSpritePropertyPlayer2</definition>
        <argsstring>()</argsstring>
        <name>getSpritePropertyPlayer2</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s property sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the SFML Sprite object representing <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="688" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1126" bodyend="1128"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1af50af1bd76c6d76465a8fe344496b6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; Withdraw::getTextsPropertyPlayer2</definition>
        <argsstring>()</argsstring>
        <name>getTextsPropertyPlayer2</name>
        <briefdescription>
<para>Getter for the text objects representing <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s property details. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of shared pointers to SFML Text objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="695" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1130" bodyend="1132"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a398e4416dafd4543de2eebc4e8317e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite &amp;</type>
        <definition>sf::Sprite &amp; Withdraw::getSpritePropertyPlayer2Index</definition>
        <argsstring>()</argsstring>
        <name>getSpritePropertyPlayer2Index</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s offered property sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the SFML Sprite object representing <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s offered properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="702" column="12" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1134" bodyend="1136"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a947ffd9307c3592b6023d11d892f2692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; Withdraw::getTextsPropertyPlayer2Index</definition>
        <argsstring>()</argsstring>
        <name>getTextsPropertyPlayer2Index</name>
        <briefdescription>
<para>Getter for the text objects representing <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s offered property details. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of shared pointers to SFML Text objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="709" column="13" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1138" bodyend="1140"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1aeb76e48063bbc11819fb5a9304c90aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt; sf::Texture &gt; Withdraw::getTexturePropertyPlayer1</definition>
        <argsstring>()</argsstring>
        <name>getTexturePropertyPlayer1</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s property texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>SFML Texrute object representing <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="716" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1142" bodyend="1144"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a30c3828b0c528ff79403158e1501358a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt; sf::Texture &gt; Withdraw::getTexturePropertyPlayer1Index</definition>
        <argsstring>()</argsstring>
        <name>getTexturePropertyPlayer1Index</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s offer property texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>SFML Texrute object representing <ref refid="class_player" kindref="compound">Player</ref> 1&apos;s properties offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="723" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1146" bodyend="1148"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a17a68a4b288fa26a7802c2f553fc6279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt; sf::Texture &gt; Withdraw::getTexturePropertyPlayer2</definition>
        <argsstring>()</argsstring>
        <name>getTexturePropertyPlayer2</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s property texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>SFML Texrute object representing <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="730" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1150" bodyend="1152"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a31943c48aa1e04aa4f1ec43900f5acc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; sf::Texture &gt;</type>
        <definition>std::shared_ptr&lt; sf::Texture &gt; Withdraw::getTexturePropertyPlayer2Index</definition>
        <argsstring>()</argsstring>
        <name>getTexturePropertyPlayer2Index</name>
        <briefdescription>
<para>Getter for <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s offer property texture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>SFML Texrute object representing <ref refid="class_player" kindref="compound">Player</ref> 2&apos;s properties offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="737" column="17" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1154" bodyend="1156"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a8573a264b72dddafdf68ba509f3fc752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::addPropertyPlayerShowed</definition>
        <argsstring>(int i, unsigned int col)</argsstring>
        <name>addPropertyPlayerShowed</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Changes showed property in certain column. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>if i &gt; 0 moves righ in properties vector, if i &lt; 0 moves left </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>(1-4) defines properties column </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="745" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1158" bodyend="1220"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a24f1c04617ff3aa4de94c1648360f7c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Withdraw::propertyPlayerMoveIndex</definition>
        <argsstring>(int dir, unsigned int plr_num)</argsstring>
        <name>propertyPlayerMoveIndex</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>plr_num</declname>
        </param>
        <briefdescription>
<para>Moves properties between players ownership and withdraw offer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>if &gt; 0 moves to offer vector, if &lt; 0 moves from offer vectpr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plr_num</parametername>
</parameternamelist>
<parameterdescription>
<para>if 1 - active player, if 2 - passive player, in withdraw </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="753" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1222" bodyend="1323"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">MonopolyGameEngine::monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_withdraw_1a076b7446fff22cc7357d92078e3f336f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Withdraw::isNonZeroValue</definition>
        <argsstring>()</argsstring>
        <name>isNonZeroValue</name>
        <briefdescription>
<para>Check whenever withdraw is legal to be done. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if withdraw is legal, otherwise false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="760" column="6" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.cc" bodystart="1398" bodyend="1417"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the trade and withdraw mechanism in a monopoly game. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_withdraw" kindref="compound">Withdraw</ref> class handles the trade and withdraw functionality between players in a monopoly game. It includes features such as choosing players, specifying values, and making decisions during the withdrawal process. </para>
    </detaileddescription>
    <location file="/home/kamil/zpr/Monopoly/Withdraw.h" line="39" column="1" bodyfile="/home/kamil/zpr/Monopoly/Withdraw.h" bodystart="39" bodyend="761"/>
    <listofallmembers>
      <member refid="class_withdraw_1afd4c8b53fafaf461e33f75151cb27576" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>ACCEPT_DECISION_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1af9ebbbdbe3ff7cbc0d36abeb655c3549" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>accpet_decision_button_</name></member>
      <member refid="class_withdraw_1af364094ffc65e7539c44edbb8dd44819" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>ADD_PROPERTY_PLAYER1_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1accf92fc3afe3141ff9d44133f01107e1" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>ADD_PROPERTY_PLAYER2_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1aa83e20035de979e7c89cc5be0cf1658e" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>add_property_player_1_button_</name></member>
      <member refid="class_withdraw_1a5f324f7eddab88cbba750d67ecd3950b" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>add_property_player_2_button_</name></member>
      <member refid="class_withdraw_1abb7a5c0fcf78cf1b294fca4561e89e79" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>addButton</name></member>
      <member refid="class_withdraw_1a8573a264b72dddafdf68ba509f3fc752" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>addPropertyPlayerShowed</name></member>
      <member refid="class_withdraw_1af7b37ca1bdb08aaae5ce0d1ba7fabb6c" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>addText</name></member>
      <member refid="class_withdraw_1a1f78639642ec1f5958c9a10ba918486d" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>ALLOW_ONE_SIDE_BENEFIT_WITHDRAW</name></member>
      <member refid="class_withdraw_1ad163e641a488281abab32842c85b2fde" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>buttons_</name></member>
      <member refid="class_withdraw_1a3d261e31276f8a5ced50440b0114c371" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>choose_player_1_button_</name></member>
      <member refid="class_withdraw_1ab088557554bc9b99073488656243c9b7" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>choose_player_2_button_</name></member>
      <member refid="class_withdraw_1a1e9fbf08735f12a2e969eca7830ce53a" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>choose_player_3_button_</name></member>
      <member refid="class_withdraw_1ad71c04f24e21c54370d8da01a4e72103" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>choose_player_4_button_</name></member>
      <member refid="class_withdraw_1a88d5f54145cb05fcbff249c615cbaefa" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>choose_player_text_</name></member>
      <member refid="class_withdraw_1a4122670df068bdce985a21a71d1f7e08" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>CHOOSE_PLAYER_TEXT_POSITION</name></member>
      <member refid="class_withdraw_1a795e13301ce503eb43ee6404aa561a36" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>COLUMN_1_POSITION</name></member>
      <member refid="class_withdraw_1a3a3248849eaff8c6a367c65e5b28ef9b" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>COLUMN_2_POSITION</name></member>
      <member refid="class_withdraw_1abb2dbbb85624ed381c2dd67b8a90b786" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>COLUMN_3_POSITION</name></member>
      <member refid="class_withdraw_1a90edf62004dc72316df8d297d77343d3" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>COLUMN_4_POSITION</name></member>
      <member refid="class_withdraw_1a2f8b173f0fdf10f7bb3232c57b96f114" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>createChoosePlayerScreen</name></member>
      <member refid="class_withdraw_1ad4a9b237332fe45afa4730ccc20e1e0b" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>createDecisionPlayerScreen</name></member>
      <member refid="class_withdraw_1a672bf80120a1db25fb6b3ed7f3410ea1" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>createDefaultButton</name></member>
      <member refid="class_withdraw_1a1e777d7591c901b33d190e8f5c6f4a77" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>createValuePlayerScreen</name></member>
      <member refid="class_withdraw_1a0b6549d0b0654407d4fb3afce8a6851e" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>current_property_player_1_index_showed_</name></member>
      <member refid="class_withdraw_1a4fe6f193547a30e9a6bb8943a299ded4" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>current_property_player_1_showed_</name></member>
      <member refid="class_withdraw_1a8a6b3e3ba72fd0fc643db860c33bec13" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>current_property_player_2_index_showed_</name></member>
      <member refid="class_withdraw_1a6196c893dbb4afd30cea4b0334fc2517" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>current_property_player_2_showed_</name></member>
      <member refid="class_withdraw_1afc9cd689ff8a564ec7e4010889cee5a4" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>DECISION_TEXT_POSITION</name></member>
      <member refid="class_withdraw_1ab44410dd3350b8b8949a39c08cfb3911" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>font_</name></member>
      <member refid="class_withdraw_1aca8273f35695ce6e49319d57371678fe" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>FONT_SIZE</name></member>
      <member refid="class_withdraw_1a44a30346125e5b69aa963da7ffc12a33" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>gameboard_</name></member>
      <member refid="class_withdraw_1aab8cdcdf3e5d4b4339b60f0808700838" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getAcceptDecisionButton</name></member>
      <member refid="class_withdraw_1a9176fc09f39a59cec708685ee053b9ac" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getButtons</name></member>
      <member refid="class_withdraw_1a3ea0051e8185c3702e1009936e508df6" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getFont</name></member>
      <member refid="class_withdraw_1aed82a313991c3f3a38c68738a613256f" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getFontSize</name></member>
      <member refid="class_withdraw_1aceb8cd9e4b2c1ed99e72278ca840969d" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1AddButton</name></member>
      <member refid="class_withdraw_1a0b40b07770eab69344d8bdb35902155e" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1Button</name></member>
      <member refid="class_withdraw_1ac0c3e2f788b930cd5ed0031bbf0fba92" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1IndexNextButton</name></member>
      <member refid="class_withdraw_1a1efca195a06baa1f08d7183e994b7e0a" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1IndexPreviousButton</name></member>
      <member refid="class_withdraw_1af44ca99891be717d4d35aa640ebd2189" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1IndexProperties</name></member>
      <member refid="class_withdraw_1a842454e0b86473552db820f70c703624" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1minus1</name></member>
      <member refid="class_withdraw_1a10b2cabb94eb5d484271a94c97b70370" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1minus10</name></member>
      <member refid="class_withdraw_1a4367d468bb941dd8326b5856dd525a37" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1minus100</name></member>
      <member refid="class_withdraw_1a6a5f2ccfb239b924b0521a390609d5fc" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1NextButton</name></member>
      <member refid="class_withdraw_1a58b1ffd27603e753ba7abdb29acf1314" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1plus1</name></member>
      <member refid="class_withdraw_1acaf2b764f148764e5d4e600fc9291c6d" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1plus10</name></member>
      <member refid="class_withdraw_1a3697bee3aadebc0cde7bb14b5734f200" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1plus100</name></member>
      <member refid="class_withdraw_1a6add7cd9e18b8066ce60af2722e84422" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1PreviousButton</name></member>
      <member refid="class_withdraw_1a0acdd19c19851dd0ea796de6d94b1ceb" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1RemoveButton</name></member>
      <member refid="class_withdraw_1aeb5e3609e3ff27cbcda1f564c18d256f" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer1ToWithdraw</name></member>
      <member refid="class_withdraw_1a36687d86bc6d5b4649b8a112d2e39fa6" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2AddButton</name></member>
      <member refid="class_withdraw_1a091c37bf6929de0085fabf2d7f59574b" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2Button</name></member>
      <member refid="class_withdraw_1aed5e9b3d3c905f942bc6e7dba72fda4e" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2IndexNextButton</name></member>
      <member refid="class_withdraw_1a9ea76ae122045f46ab5afc2c6f73aa6a" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2IndexPreviousButton</name></member>
      <member refid="class_withdraw_1a9d72290f34908615cffaeeba90119484" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2IndexProperties</name></member>
      <member refid="class_withdraw_1a433b90092e9aea1deade9d09bf0f53bb" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2minus1</name></member>
      <member refid="class_withdraw_1a2991a78ccf18dc06191bf5bb2493a8c8" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2minus10</name></member>
      <member refid="class_withdraw_1add8c0389fcb067416de24846724a90e3" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2minus100</name></member>
      <member refid="class_withdraw_1aaba58d928bb11f6430f0b3dee9e9114d" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2NextButton</name></member>
      <member refid="class_withdraw_1ad71f8629800c81970c28e69d19091fff" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2plus1</name></member>
      <member refid="class_withdraw_1a510ba4ba2fa7044c7769f737158e7a84" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2plus10</name></member>
      <member refid="class_withdraw_1ab624df7121d9f7b636f712a141663ad0" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2plus100</name></member>
      <member refid="class_withdraw_1aa074572589a75bd97bd3771243752ace" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2PreviousButton</name></member>
      <member refid="class_withdraw_1afdd56cdac9e6e103132dd5f4b11dde82" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2RemoveButton</name></member>
      <member refid="class_withdraw_1a82a457bf898c8845ab38458a8a2d3cf5" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer2ToWithdraw</name></member>
      <member refid="class_withdraw_1ac2bbfa2841c0e30a80b78ac00b626df3" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer3Button</name></member>
      <member refid="class_withdraw_1a8466a780108a4cee43a60c7ce5f96286" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getPlayer4Button</name></member>
      <member refid="class_withdraw_1a710eb4657248e1b8d3d058dcdc576ff6" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getResignButton</name></member>
      <member refid="class_withdraw_1a2852ce90c05783a2d8f1921ce5df4992" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getResignDecisionButton</name></member>
      <member refid="class_withdraw_1a08e2ce2ebc989bcabb109f6b8ca2489c" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getResignValueButton</name></member>
      <member refid="class_withdraw_1aaa00a66063e50b3aa3cf82a04d0fa859" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getSpritePropertyPlayer1</name></member>
      <member refid="class_withdraw_1a7b2ecdf7344d06ee5a1124a3e125618d" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getSpritePropertyPlayer1Index</name></member>
      <member refid="class_withdraw_1a7d62275f21184e601494c0068d28fab0" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getSpritePropertyPlayer2</name></member>
      <member refid="class_withdraw_1a398e4416dafd4543de2eebc4e8317e4b" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getSpritePropertyPlayer2Index</name></member>
      <member refid="class_withdraw_1ac604b13c491169954292fee491bcea26" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getSubmitValueButton</name></member>
      <member refid="class_withdraw_1a095689316bdad34354e14b8ffd18c995" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTexts</name></member>
      <member refid="class_withdraw_1a3af83369b71131d448d48f9383c890c0" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTextsPropertyPlayer1</name></member>
      <member refid="class_withdraw_1a516b9056df7808d8c2a33a57772d9ad8" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTextsPropertyPlayer1Index</name></member>
      <member refid="class_withdraw_1af50af1bd76c6d76465a8fe344496b6e7" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTextsPropertyPlayer2</name></member>
      <member refid="class_withdraw_1a947ffd9307c3592b6023d11d892f2692" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTextsPropertyPlayer2Index</name></member>
      <member refid="class_withdraw_1aeb76e48063bbc11819fb5a9304c90aa1" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTexturePropertyPlayer1</name></member>
      <member refid="class_withdraw_1a30c3828b0c528ff79403158e1501358a" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTexturePropertyPlayer1Index</name></member>
      <member refid="class_withdraw_1a17a68a4b288fa26a7802c2f553fc6279" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTexturePropertyPlayer2</name></member>
      <member refid="class_withdraw_1a31943c48aa1e04aa4f1ec43900f5acc0" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTexturePropertyPlayer2Index</name></member>
      <member refid="class_withdraw_1a0f3fd96ab6c928dcac54ac55a1b7be3d" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>getTurnState</name></member>
      <member refid="class_withdraw_1a076b7446fff22cc7357d92078e3f336f" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>isNonZeroValue</name></member>
      <member refid="class_withdraw_1a19f82027534a13d80536846c5af25829" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>makeWithdraw</name></member>
      <member refid="class_withdraw_1a0bd0a4f847d6736f11eb3741d7002cf5" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>minus_100_player_1_button_</name></member>
      <member refid="class_withdraw_1ae34a4674c2fa433db686443a0c6916e4" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>minus_100_player_2_button_</name></member>
      <member refid="class_withdraw_1a5f9e9ceb751cc6c9c9b97f23b4a3264e" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>minus_10_player_1_button_</name></member>
      <member refid="class_withdraw_1a0b8daf418327a7cee84c8df38d979fa1" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>minus_10_player_2_button_</name></member>
      <member refid="class_withdraw_1a4b753c1c32c95509b6147b6150087828" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>minus_1_player_1_button_</name></member>
      <member refid="class_withdraw_1a421000c1cf052314a97ea0551b67d8f3" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>minus_1_player_2_button_</name></member>
      <member refid="class_withdraw_1a90b6611bc2eeec22d3b562fd183bf81e" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>moneyTextUpdate</name></member>
      <member refid="class_withdraw_1ad2d77a9938893978c4a83432d51b67f9" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>moneyTransferIndex</name></member>
      <member refid="class_withdraw_1a3f511d8a4405cd29962e5e9efdcf9bb2" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>NEXT_PROPERTY_PLAYER1_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1ac6b877625bffe10ba394af04d1aee016" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>NEXT_PROPERTY_PLAYER1_INDEX_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a6e2ea1df3a9b2470a674f6644a0a0d47" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>NEXT_PROPERTY_PLAYER2_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1af3a80850de833ed8ecf827e24700bd14" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>NEXT_PROPERTY_PLAYER2_INDEX_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a21eb05c69daba1f841baca27344c08b3" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>next_property_player_1_button_</name></member>
      <member refid="class_withdraw_1a0eb7f472a151aaa336649ed22f2405d2" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>next_property_player_1_index_button_</name></member>
      <member refid="class_withdraw_1a1044cc1e7b75c6ce1d542bbe57f67b2a" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>next_property_player_2_button_</name></member>
      <member refid="class_withdraw_1a0a589c2ea9b4451bc380424933bacbed" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>next_property_player_2_index_button_</name></member>
      <member refid="class_withdraw_1a0c926e8ffd5f5aeb274c188a75dcb9c2" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player1Properties_</name></member>
      <member refid="class_withdraw_1a93dd1fcf90c50c6c18361361af4903c1" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_index_money_</name></member>
      <member refid="class_withdraw_1a49d9632e3cf4a2287400b7b7036fd78a" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_index_properties_</name></member>
      <member refid="class_withdraw_1a02a0405fd53dd4e36f449fe89d421ef9" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_index_text_</name></member>
      <member refid="class_withdraw_1a0d000810ef7467cdf159c593b141b65a" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_money_</name></member>
      <member refid="class_withdraw_1a106f2a703deb51600aedf8444b85b401" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_money_buffer_</name></member>
      <member refid="class_withdraw_1aabb6c324eb133dcb8327164fea3e9a3c" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_money_index_buffer_</name></member>
      <member refid="class_withdraw_1a172bcb919121b2b6078aae592755530c" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_text_</name></member>
      <member refid="class_withdraw_1a901cb4100c7a7243e1526d94a8495631" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_1_to_with_draw_</name></member>
      <member refid="class_withdraw_1a249daff6b1f823e488c29e413f40d05e" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_index_money_</name></member>
      <member refid="class_withdraw_1ac840765f26c6037781b4111e6a49b723" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_index_properties_</name></member>
      <member refid="class_withdraw_1a3b4e5542f315fb29417adfdca79eb777" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_index_text_</name></member>
      <member refid="class_withdraw_1aa00c973f994646100ab6c4127a6c3f0f" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_money_</name></member>
      <member refid="class_withdraw_1a8556151d4ec912d312da7ad96b520f00" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_money_buffer_</name></member>
      <member refid="class_withdraw_1a2dcb3c24f7ffc9124953205cf5e2e982" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_money_index_buffer_</name></member>
      <member refid="class_withdraw_1a87d85a5dc542ec588869bd76e4413ad8" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_properties_</name></member>
      <member refid="class_withdraw_1a30297a75a6d4f897dbf3658a1ddbf912" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_text_</name></member>
      <member refid="class_withdraw_1a5b3a4dccefddf0392d1faf6e040f3845" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_2_to_with_draw_</name></member>
      <member refid="class_withdraw_1aedfde9125e91f746d5c5fe89b4566c0b" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_info_get_properties_</name></member>
      <member refid="class_withdraw_1ab86f24c5f9b6b2592e4d30a4674a3366" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_info_lose_properties_</name></member>
      <member refid="class_withdraw_1ad4654176564a04fbb1b46502184020c0" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_info_money_</name></member>
      <member refid="class_withdraw_1aec842bb7604b6393d2e3ec0f9373eedd" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>player_info_text_</name></member>
      <member refid="class_withdraw_1a466c204fd31c08a7cb1c489b983f24bd" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>plus_100_player_1_button_</name></member>
      <member refid="class_withdraw_1a893a9cda62f39401c8b1857d6a19c7e9" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>plus_100_player_2_button_</name></member>
      <member refid="class_withdraw_1a40d58146f7e713c562c8a1610fe24d58" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>plus_10_player_1_button_</name></member>
      <member refid="class_withdraw_1af8d2a400ac9ee058585290aba4a948c0" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>plus_10_player_2_button_</name></member>
      <member refid="class_withdraw_1a1e46f38ab3d0d32dca4556f71610d9a7" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>plus_1_player_1_button_</name></member>
      <member refid="class_withdraw_1a0e940fdf01bc6fe888d60de312240666" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>plus_1_player_2_button_</name></member>
      <member refid="class_withdraw_1a6bd141eb15ec7c381024a2abbf9d4477" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PREVIOUS_PROPERTY_PLAYER1_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a4d40697e5c912fd5047231e5fb981ae5" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PREVIOUS_PROPERTY_PLAYER1_INDEX_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a07194be9b2a239d70da2e9892cc95e7f" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PREVIOUS_PROPERTY_PLAYER2_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a6d69f0226a6e918a4ae6955053696763" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PREVIOUS_PROPERTY_PLAYER2_INDEX_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a0e144887be4410c38f894d25bd8ba5e3" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>previous_property_player_1_index_button_</name></member>
      <member refid="class_withdraw_1abecc8f01b5b3ac373973d3faf52a0a70" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>previous_propertyplayer_1_button_</name></member>
      <member refid="class_withdraw_1a2b2fb925faae8cd21b5867814d20db1c" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>previous_propertyplayer_2_button_</name></member>
      <member refid="class_withdraw_1a5f28aa4bd625b67865644067e9b51b7d" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>previousPropertyPlayer2IndexButton_</name></member>
      <member refid="class_withdraw_1a2e15af4a6be78686bad7fe32a0796ebb" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PROPERTY_PLAYER1_INDEX_POSITION</name></member>
      <member refid="class_withdraw_1a7678a706b7f9c8bcb74709c25c21fb46" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PROPERTY_PLAYER1_POSITION</name></member>
      <member refid="class_withdraw_1a3c46a52d6b53a74fa7fa095d25fe58be" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PROPERTY_PLAYER2_INDEX_POSITION</name></member>
      <member refid="class_withdraw_1a4e13697fa1b1f949474066f6a34d3ab3" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PROPERTY_PLAYER2_POSITION</name></member>
      <member refid="class_withdraw_1a97840e4a6ef7ed64529786168035c997" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_1_index_sprite_</name></member>
      <member refid="class_withdraw_1aaa2bbbb61654ef11350781bdc00f29f3" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_1_index_texts_</name></member>
      <member refid="class_withdraw_1aca0813aca00d314f4c672c0301ea4e68" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_1_index_texture_</name></member>
      <member refid="class_withdraw_1a70854acfb72428561fdb02c1a8a3a1f2" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_1_sprite_</name></member>
      <member refid="class_withdraw_1a0042b9fbb857954efbb7ca209351fa28" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_1_texts_</name></member>
      <member refid="class_withdraw_1ab4e22da9508b8f7636fcec3da996d459" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_1_texture_</name></member>
      <member refid="class_withdraw_1a4e46b4f1fa43228b4a092631523bf165" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_2_index_sprite_</name></member>
      <member refid="class_withdraw_1ac455e4a78d6b713fb9bc91da4ee69767" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_2_index_texts_</name></member>
      <member refid="class_withdraw_1a60ed92a59834460b457d501a0b646e19" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_2_index_texture_</name></member>
      <member refid="class_withdraw_1a4b695fb2bbf24fa6477a0c10a8040afa" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_2_sprite_</name></member>
      <member refid="class_withdraw_1ab2e4a32f6c7c7d688feab406f0419250" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>property_player_2_texture_</name></member>
      <member refid="class_withdraw_1a5d472446383b1ab9fe73caf8b0922699" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>PROPERTY_SHOW_SCALE</name></member>
      <member refid="class_withdraw_1af730071e11150b44971b5b573ec796d0" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>propertyPlayer2Texts_</name></member>
      <member refid="class_withdraw_1a24f1c04617ff3aa4de94c1648360f7c4" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>propertyPlayerMoveIndex</name></member>
      <member refid="class_withdraw_1a1356aec366d49a44c6423318b5810853" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>REMOVE_PROPERTY_PLAYER1_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a2653b2973971551facdd27c50a08b5f0" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>REMOVE_PROPERTY_PLAYER2_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a063bd12785754d8c61069625db6cae43" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>remove_property_player_1_button_</name></member>
      <member refid="class_withdraw_1aad1448596ae07b3184184d0d53a29062" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>remove_property_player_2_button_</name></member>
      <member refid="class_withdraw_1aa9534e8b649125d1288edbb51488b844" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>resign_button_</name></member>
      <member refid="class_withdraw_1a769edb0164afec0b31d5d7e4a95dfa87" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>RESIGN_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a3b7022ad6656badad8c30dc76df39107" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>resign_decision_button_</name></member>
      <member refid="class_withdraw_1a2df54de34773f26fe0a4ec1e4836fd04" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>RESIGN_DECISION_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1a817d662feb296d0ee58491884a983afd" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>resign_value_button_</name></member>
      <member refid="class_withdraw_1a3672cc9e89c64aaa5cbd4e2f7ff94c80" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>RESIGN_VALUE_BUTTON_POSITION</name></member>
      <member refid="class_withdraw_1ac3ff353242bfee519f0058258631c454" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setBoard</name></member>
      <member refid="class_withdraw_1a06d1cefc0b0fcf141a9a5c7ee0084a34" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setChooseScreenVisible</name></member>
      <member refid="class_withdraw_1a554845d087366abdc2672a7b6224ff68" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setDecisionScreenVisible</name></member>
      <member refid="class_withdraw_1a01109432adc0c8b78f288c1805ca02d0" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setFont</name></member>
      <member refid="class_withdraw_1ace23ed297ef8cfdce12fedf5866e4db0" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setPlayer1IndexProperties</name></member>
      <member refid="class_withdraw_1ad6d6fe6a2cc686f1deea05fa9ae5033f" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setPlayer1ToWithdraw</name></member>
      <member refid="class_withdraw_1a0203605f1161eed758e26bae91bc80ca" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setPlayer2IndexProperties</name></member>
      <member refid="class_withdraw_1aed1f0d13e5f3ce83500ec90b9338796a" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setPlayer2ToWithdraw</name></member>
      <member refid="class_withdraw_1a0f4055d95a2cefafbe974d49bcec5531" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setTurnState</name></member>
      <member refid="class_withdraw_1acfbbad2752cb193ca17e8f2ab3ce9b1a" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>setValueScreenVisible</name></member>
      <member refid="class_withdraw_1ab7bdb73ec95d72b844d65de653cb4214" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>showProperty</name></member>
      <member refid="class_withdraw_1a93e06a3f553be871e6eec908be903b63" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>submit_value_button_</name></member>
      <member refid="class_withdraw_1a0ccc2bb41b0a4ec04dfa4e9c1da00c9f" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>texts_</name></member>
      <member refid="class_withdraw_1ad3f12454b54b6e38e2f1802f5be621bb" prot="private" virt="non-virtual"><scope>Withdraw</scope><name>turn_state_prev_</name></member>
      <member refid="class_withdraw_1aa7f606a8ceb3f06ee4314d611da095c5" prot="public" virt="non-virtual"><scope>Withdraw</scope><name>Withdraw</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

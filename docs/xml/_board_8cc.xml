<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_board_8cc" kind="file" language="C++">
    <compoundname>Board.cc</compoundname>
    <includes refid="_board_8h" local="yes">Board.h</includes>
    <incdepgraph>
      <node id="24">
        <label>list</label>
      </node>
      <node id="14">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="25">
        <label>queue</label>
      </node>
      <node id="23">
        <label>Tinyneat.h</label>
        <link refid="_tinyneat_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>bits/stdc++.h</label>
      </node>
      <node id="8">
        <label>variant</label>
      </node>
      <node id="10">
        <label>../json/json.hpp</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>Board.h</label>
        <link refid="_board_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="27">
        <label>main.h</label>
        <link refid="main_8h"/>
      </node>
      <node id="3">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>Player.h</label>
        <link refid="_player_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ContextWindow.h</label>
        <link refid="_context_window_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>random</label>
      </node>
      <node id="21">
        <label>stack</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="20">
        <label>array</label>
      </node>
      <node id="11">
        <label>Field.h</label>
        <link refid="_field_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Tinyann.h</label>
        <link refid="_tinyann_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/kamil/zpr/Monopoly/Board.cc</label>
        <link refid="_board_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="22">
        <label>unordered_map</label>
      </node>
      <node id="17">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="18">
        <label>AiAdapter.h</label>
        <link refid="_ai_adapter_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>using json =  nlohmann::json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Board.cc" line="14" column="1" bodyfile="/home/kamil/zpr/Monopoly/Board.cc" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_board_8cc_1a92671e84f9d38a1f5a64ef20ad23ec39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; <ref refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3" kindref="member">StreetTiers</ref>, unsigned int &gt;</type>
        <definition>std::map&lt;StreetTiers, unsigned int&gt; jsonToStreetRent</definition>
        <argsstring>(const json &amp;element)</argsstring>
        <name>jsonToStreetRent</name>
        <param>
          <type>const <ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref> &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Converts JSON data to a map of rent values for street properties. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON data containing rent values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A map of rent values for street properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Board.cc" line="195" column="10" bodyfile="/home/kamil/zpr/Monopoly/Board.cc" bodystart="195" bodyend="205"/>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a1721e377912232cb891c4f9d8b96a59a" compoundref="main_8h" startline="138">FOUR_HOUSES</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a9d02c50113762d50ac07c31528974579" compoundref="main_8h" startline="138">HOTEL</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3afbe39846abf8d0ca655daa4c5e6675f6" compoundref="main_8h" startline="138">NO_HOUSES</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3ae9309352dfb1c2542328bf77b979b796" compoundref="main_8h" startline="138">ONE_HOUSE</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a3cfedac7ca093a36b14fd248a3b8a5b4" compoundref="main_8h" startline="138">THREE_HOUSES</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a0ab6dd54fe0c67ece897f56705db3e3f" compoundref="main_8h" startline="138">TWO_HOUESES</references>
        <referencedby refid="class_board_1a79e3b8de081a3c283aebb122cc333dc3" compoundref="_board_8cc" startline="20" endline="126">Board::Board</referencedby>
      </memberdef>
      <memberdef kind="function" id="_board_8cc_1ad42d602c22869eaeb607bcce29881af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; <ref refid="main_8h_1a5557e51432d2a191244125a3af3594be" kindref="member">StationTiers</ref>, unsigned int &gt;</type>
        <definition>std::map&lt;StationTiers, unsigned int&gt; jsonToStationRent</definition>
        <argsstring>(const json &amp;element)</argsstring>
        <name>jsonToStationRent</name>
        <param>
          <type>const <ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref> &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Converts JSON data to a map of rent values for station properties. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON data containing rent values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A map of rent values for station properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Board.cc" line="207" column="10" bodyfile="/home/kamil/zpr/Monopoly/Board.cc" bodystart="207" bodyend="215"/>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594beaf5d374fd66e430d41b08642d1197a585" compoundref="main_8h" startline="144">FOUR_STATIONS</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea5abd12f5714ad8a5c78fbcfdd13d8363" compoundref="main_8h" startline="144">ONE_STATION</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea4ee7c40343f7fc51e168ebb665d4865d" compoundref="main_8h" startline="144">THREE_STATIONS</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea324e5b4c78cf4a0c67ef4164dc635dc2" compoundref="main_8h" startline="144">TWO_STATIONS</references>
        <referencedby refid="class_board_1a79e3b8de081a3c283aebb122cc333dc3" compoundref="_board_8cc" startline="20" endline="126">Board::Board</referencedby>
      </memberdef>
      <memberdef kind="function" id="_board_8cc_1a9f51f2d21bf4f1468f4481d2b6cf20a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; <ref refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113" kindref="member">UtilityTiers</ref>, unsigned int &gt;</type>
        <definition>std::map&lt;UtilityTiers, unsigned int&gt; jsonToUtilityRent</definition>
        <argsstring>(const json &amp;element)</argsstring>
        <name>jsonToUtilityRent</name>
        <param>
          <type>const <ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref> &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Converts JSON data to a map of rent multipliers for utility properties. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON data containing rent multipliers. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A map of rent multipliers for utility properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Board.cc" line="217" column="10" bodyfile="/home/kamil/zpr/Monopoly/Board.cc" bodystart="217" bodyend="223"/>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113ae71bdf2240af02a5ef8ded8c01a8a692" compoundref="main_8h" startline="150">ONE_UTILITY</references>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113afd679c479954ac2c4c7143bc5e45cb6d" compoundref="main_8h" startline="150">TWO_UTILITIES</references>
        <referencedby refid="class_board_1a79e3b8de081a3c283aebb122cc333dc3" compoundref="_board_8cc" startline="20" endline="126">Board::Board</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Source file for monopoly game board, creation is based on json file &apos;board.json&apos;. Mainly handles all types of fields and their usage. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Kamil Kosnik, Kacper Radzikowski </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_board_8h" kindref="compound">Board.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>=<sp/><ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">nlohmann::json</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Board<sp/>Class<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_board_1a79e3b8de081a3c283aebb122cc333dc3" refkind="member"><highlight class="normal"><ref refid="class_board_1a79e3b8de081a3c283aebb122cc333dc3" kindref="member">Board::Board</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>file_path)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>FieldType&gt;<sp/>str_to_type<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;STREET&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" kindref="member">STREET</ref>},<sp/>{</highlight><highlight class="stringliteral">&quot;STATION&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" kindref="member">STATION</ref>},<sp/>{</highlight><highlight class="stringliteral">&quot;UTILITY&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" kindref="member">UTILITY</ref>},</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;GO&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa50d8e53aac4e002d0fd296c5033ce985" kindref="member">GO</ref>},<sp/>{</highlight><highlight class="stringliteral">&quot;CHANCE&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa81d2bb6df05f24d8afc01889a493875c" kindref="member">CHANCE</ref>},<sp/>{</highlight><highlight class="stringliteral">&quot;COMUNITY_CHEST&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa73226d8625a6ca9e2460030618a7fec5" kindref="member">COMMUNITY_CHEST</ref>},<sp/>{</highlight><highlight class="stringliteral">&quot;TAX&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa30e59148af45aa6e6ab6bf5250a83f95" kindref="member">TAX</ref>},<sp/>{</highlight><highlight class="stringliteral">&quot;JAIL&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa660bfa29a629dc2680b8fba156bf35b2" kindref="member">JAIL</ref>},</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;FREE_PARKING&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa676f8257843de2c2b3429b956a8c7d38" kindref="member">FREE_PARKING</ref>},<sp/>{</highlight><highlight class="stringliteral">&quot;GO_TO_JAIL&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4c8584e93a1064fe61e904f19722d2d3" kindref="member">GO_TO_JAIL</ref>}};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>f(file_path);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>data<sp/>=<sp/>json::parse(f);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element<sp/>:<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>graphic_path<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;graphic_path&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_from_file<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_from_file<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" kindref="member">width</ref><sp/>=<sp/>width_from_file<sp/>*<sp/>BOARD_SCALE;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" kindref="member">height</ref><sp/>=<sp/>height_from_file<sp/>*<sp/>BOARD_SCALE;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>rotation<sp/>=<sp/>element[&quot;rotation&quot;];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>type_in_str<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1da" kindref="member">FieldType</ref><sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref><sp/>=<sp/>str_to_type[type_in_str];</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Vector2i<sp/>position<sp/>=<sp/><ref refid="class_board_1a2b73746e47152ecea46f7a03d58ea3e8" kindref="member">getFieldPositon</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>position,<sp/><ref refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" kindref="member">width</ref>,<sp/><ref refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rotation<sp/>=<sp/><ref refid="class_board_1a7ae5ceb0363e2d0bf1520108074c9485" kindref="member">getFieldRotation</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" kindref="member">STREET</ref>:<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>price<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;price&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>house_price<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;house_price&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hotel_price<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;hotel_price&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mortgage<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;Mortgage&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;StreetTiers,<sp/>unsigned<sp/>int&gt;<sp/>rent_values<sp/>=<sp/><ref refid="_board_8cc_1a92671e84f9d38a1f5a64ef20ad23ec39" kindref="member">jsonToStreetRent</ref>(element);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>group_members<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;group_members&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_street_field" kindref="compound">StreetField</ref><sp/>new_field<sp/>=<sp/><ref refid="class_street_field" kindref="compound">StreetField</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>,<sp/>name,<sp/>graphic_path,<sp/><ref refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" kindref="member">width</ref>,<sp/><ref refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" kindref="member">height</ref>,<sp/>rotation,<sp/>position,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>price,<sp/>house_price,<sp/>hotel_price,<sp/>rent_values,<sp/>group_members,<sp/>Mortgage);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>board_.push_back(new_field);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" kindref="member">STATION</ref>:<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>price<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;price&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mortgage<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;Mortgage&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;StationTiers,<sp/>unsigned<sp/>int&gt;<sp/>rent_values<sp/>=<sp/><ref refid="_board_8cc_1ad42d602c22869eaeb607bcce29881af1" kindref="member">jsonToStationRent</ref>(element);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>group_members<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;group_members&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_station_field" kindref="compound">StationField</ref><sp/>new_field<sp/>=<sp/><ref refid="class_station_field" kindref="compound">StationField</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>,<sp/>name,<sp/>graphic_path,<sp/><ref refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" kindref="member">width</ref>,<sp/><ref refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" kindref="member">height</ref>,<sp/>rotation,<sp/>position,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>price,<sp/>rent_values,<sp/>group_members,<sp/>Mortgage);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>board_.push_back(new_field);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" kindref="member">UTILITY</ref>:<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>price<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;price&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Mortgage<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;Mortgage&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;UtilityTiers,<sp/>unsigned<sp/>int&gt;<sp/>rent_multipliers<sp/>=<sp/><ref refid="_board_8cc_1a9f51f2d21bf4f1468f4481d2b6cf20a6" kindref="member">jsonToUtilityRent</ref>(element);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>group_members<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;group_members&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_utility_field" kindref="compound">UtilityField</ref><sp/>new_field<sp/>=<sp/><ref refid="class_utility_field" kindref="compound">UtilityField</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>,<sp/>name,<sp/>graphic_path,<sp/><ref refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" kindref="member">width</ref>,<sp/><ref refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" kindref="member">height</ref>,<sp/>rotation,<sp/>position,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>price,<sp/>rent_multipliers,<sp/>group_members,<sp/>Mortgage);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>board_.push_back(new_field);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa30e59148af45aa6e6ab6bf5250a83f95" kindref="member">TAX</ref>:<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tax_value<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;tax_value&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tax_field" kindref="compound">TaxField</ref><sp/>new_field<sp/>=</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tax_field" kindref="compound">TaxField</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>,<sp/>name,<sp/>graphic_path,<sp/><ref refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" kindref="member">width</ref>,<sp/><ref refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" kindref="member">height</ref>,<sp/>rotation,<sp/>position,<sp/>tax_value);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>board_.push_back(new_field);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa50d8e53aac4e002d0fd296c5033ce985" kindref="member">GO</ref>:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa81d2bb6df05f24d8afc01889a493875c" kindref="member">CHANCE</ref>:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa73226d8625a6ca9e2460030618a7fec5" kindref="member">COMMUNITY_CHEST</ref>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa660bfa29a629dc2680b8fba156bf35b2" kindref="member">JAIL</ref>:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa676f8257843de2c2b3429b956a8c7d38" kindref="member">FREE_PARKING</ref>:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4c8584e93a1064fe61e904f19722d2d3" kindref="member">GO_TO_JAIL</ref>:<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_field" kindref="compound">Field</ref><sp/>new_field<sp/>=<sp/><ref refid="class_field" kindref="compound">Field</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>,<sp/>name,<sp/>graphic_path,<sp/><ref refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" kindref="member">width</ref>,<sp/><ref refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" kindref="member">height</ref>,<sp/>rotation,<sp/>position);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>board_.push_back(new_field);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>field_number_<sp/>=<sp/>board_.size();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>field<sp/>:<sp/>board_)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit([](<ref refid="class_field" kindref="compound">Field</ref>&amp;<sp/>visited_field)<sp/>{<sp/>visited_field.<ref refid="class_field_1aba57b17e88be43f271fbcb85822a56c3" kindref="member">createSprite</ref>();<sp/>},<sp/>field);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1da" kindref="member">FieldType</ref><sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref><sp/>=<sp/>std::visit([](<ref refid="class_field" kindref="compound">Field</ref>&amp;<sp/>visited_field)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visited_field.<ref refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" kindref="member">getType</ref>();<sp/>},<sp/>field);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" kindref="member">STREET</ref>:<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_street_field" kindref="compound">StreetField</ref>&amp;<sp/>visited_field<sp/>=<sp/>std::get&lt;StreetField&gt;(field);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visited_field.<ref refid="class_property_field_1a3323e39ff44b4d61c5b6f77e7da17f99" kindref="member">createFlagSprite</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" kindref="member">UTILITY</ref>:<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_utility_field" kindref="compound">UtilityField</ref>&amp;<sp/>visited_field<sp/>=<sp/>std::get&lt;UtilityField&gt;(field);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visited_field.<ref refid="class_property_field_1a3323e39ff44b4d61c5b6f77e7da17f99" kindref="member">createFlagSprite</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" kindref="member">STATION</ref>:<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_station_field" kindref="compound">StationField</ref>&amp;<sp/>visited_field<sp/>=<sp/>std::get&lt;StationField&gt;(field);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visited_field.<ref refid="class_property_field_1a3323e39ff44b4d61c5b6f77e7da17f99" kindref="member">createFlagSprite</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_board_1a2b73746e47152ecea46f7a03d58ea3e8" refkind="member"><highlight class="normal">sf::Vector2i<sp/><ref refid="class_board_1a2b73746e47152ecea46f7a03d58ea3e8" kindref="member">Board::getFieldPositon</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>sf::Vector2i<sp/>prev_pos,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(BOARD_POSITION_.x,<sp/>BOARD_POSITION_.y);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(prev_pos.x<sp/>-<sp/>x,<sp/>prev_pos.y);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;<sp/>10<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>11)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(prev_pos.x<sp/>+<sp/>y,<sp/>prev_pos.y<sp/>-<sp/>x);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(prev_pos.x,<sp/>prev_pos.y<sp/>-<sp/>x);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>20<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(prev_pos.x,<sp/>prev_pos.y);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(prev_pos.x<sp/>+<sp/>x,<sp/>prev_pos.y);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;<sp/>30<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/>40)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>31)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(prev_pos.x<sp/>-<sp/>y,<sp/>prev_pos.y<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(prev_pos.x,<sp/>prev_pos.y<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sf::Vector2i(0,<sp/>0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_board_1a7ae5ceb0363e2d0bf1520108074c9485" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_board_1a7ae5ceb0363e2d0bf1520108074c9485" kindref="member">Board::getFieldRotation</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;<sp/>10<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>90.0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>20<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>180.0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;<sp/>30<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;=<sp/>40)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>270.0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_board_1a259fe7f8131ebd8614cfa3a5ce4de724" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PossibleFields&gt;&amp;<sp/><ref refid="class_board_1a259fe7f8131ebd8614cfa3a5ce4de724" kindref="member">Board::getBoard</ref>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>board_;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_board_1a1c969a12d80bf889bede688c5c4b4c6a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_board_1a1c969a12d80bf889bede688c5c4b4c6a" kindref="member">Board::getFieldNumber</ref>()<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field_number_;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_board_1a4f1dde258689798d125165c2eddaaa86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sf::Vector2i<sp/><ref refid="class_board_1a4f1dde258689798d125165c2eddaaa86" kindref="member">Board::getBoardPosition</ref>()<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BOARD_POSITION_;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="class_board_1a5f148daa03da25d40dff3fc613568d6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_board_1a5f148daa03da25d40dff3fc613568d6f" kindref="member">Board::clearBoard</ref>()<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>board_.clear();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>field_number_<sp/>=<sp/>board_.size();</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="class_board_1aa9a40a410b22ebbb1c87a91d16741711" refkind="member"><highlight class="normal"><ref refid="_board_8h_1ad39b748df1ce97bcd7b1b6557ee2f7b4" kindref="member">PossibleFields</ref>&amp;<sp/><ref refid="class_board_1aa9a40a410b22ebbb1c87a91d16741711" kindref="member">Board::getFieldById</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wanted_id)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field_id;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>board_.begin();<sp/>it<sp/>!=<sp/>board_.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field_id<sp/>=<sp/>std::visit([](<ref refid="class_field" kindref="compound">Field</ref>&amp;<sp/>field)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field.<ref refid="class_field_1aa3ea436b800a8078f04be2678c42f7c0" kindref="member">getId</ref>();<sp/>},<sp/>*it);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field_id<sp/>==<sp/>wanted_id)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*it;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="_board_8cc_1a92671e84f9d38a1f5a64ef20ad23ec39" refkind="member"><highlight class="normal">std::map&lt;StreetTiers,<sp/>unsigned<sp/>int&gt;<sp/><ref refid="_board_8cc_1a92671e84f9d38a1f5a64ef20ad23ec39" kindref="member">jsonToStreetRent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;StreetTiers,<sp/>unsigned<sp/>int&gt;<sp/>rent_values;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>list_of_rents<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;rent_values&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3afbe39846abf8d0ca655daa4c5e6675f6" kindref="member">NO_HOUSES</ref>,<sp/>list_of_rents[0]));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3ae9309352dfb1c2542328bf77b979b796" kindref="member">ONE_HOUSE</ref>,<sp/>list_of_rents[1]));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a0ab6dd54fe0c67ece897f56705db3e3f" kindref="member">TWO_HOUESES</ref>,<sp/>list_of_rents[2]));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a3cfedac7ca093a36b14fd248a3b8a5b4" kindref="member">THREE_HOUSES</ref>,<sp/>list_of_rents[3]));</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a1721e377912232cb891c4f9d8b96a59a" kindref="member">FOUR_HOUSES</ref>,<sp/>list_of_rents[4]));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a9d02c50113762d50ac07c31528974579" kindref="member">HOTEL</ref>,<sp/>list_of_rents[5]));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rent_values;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="_board_8cc_1ad42d602c22869eaeb607bcce29881af1" refkind="member"><highlight class="normal">std::map&lt;StationTiers,<sp/>unsigned<sp/>int&gt;<sp/><ref refid="_board_8cc_1ad42d602c22869eaeb607bcce29881af1" kindref="member">jsonToStationRent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;StationTiers,<sp/>unsigned<sp/>int&gt;<sp/>rent_values;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>list_of_rents<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;rent_values&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a5557e51432d2a191244125a3af3594bea5abd12f5714ad8a5c78fbcfdd13d8363" kindref="member">ONE_STATION</ref>,<sp/>list_of_rents[0]));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a5557e51432d2a191244125a3af3594bea324e5b4c78cf4a0c67ef4164dc635dc2" kindref="member">TWO_STATIONS</ref>,<sp/>list_of_rents[1]));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a5557e51432d2a191244125a3af3594bea4ee7c40343f7fc51e168ebb665d4865d" kindref="member">THREE_STATIONS</ref>,<sp/>list_of_rents[2]));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_values.emplace(std::make_pair(<ref refid="main_8h_1a5557e51432d2a191244125a3af3594beaf5d374fd66e430d41b08642d1197a585" kindref="member">FOUR_STATIONS</ref>,<sp/>list_of_rents[3]));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rent_values;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="_board_8cc_1a9f51f2d21bf4f1468f4481d2b6cf20a6" refkind="member"><highlight class="normal">std::map&lt;UtilityTiers,<sp/>unsigned<sp/>int&gt;<sp/><ref refid="_board_8cc_1a9f51f2d21bf4f1468f4481d2b6cf20a6" kindref="member">jsonToUtilityRent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_board_8cc_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;UtilityTiers,<sp/>unsigned<sp/>int&gt;<sp/>rent_multipliers;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>list_of_rents<sp/>=<sp/>element[</highlight><highlight class="stringliteral">&quot;rent_multipliers&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_multipliers.emplace(std::make_pair(<ref refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113ae71bdf2240af02a5ef8ded8c01a8a692" kindref="member">ONE_UTILITY</ref>,<sp/>list_of_rents[0]));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>rent_multipliers.emplace(std::make_pair(<ref refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113afd679c479954ac2c4c7143bc5e45cb6d" kindref="member">TWO_UTILITIES</ref>,<sp/>list_of_rents[1]));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rent_multipliers;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kamil/zpr/Monopoly/Board.cc"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_ai_player" kind="class" language="C++" prot="public">
    <compoundname>AiPlayer</compoundname>
    <basecompoundref refid="class_player" prot="public" virt="non-virtual">Player</basecompoundref>
    <includes refid="_player_8h" local="no">Player.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ai_player_1a5d1744e5e2b7c54914f55cc285a1dd80" prot="private" static="no" mutable="no">
        <type><ref refid="class_ai_adapter" kindref="compound">AiAdapter</ref></type>
        <definition>AiAdapter AiPlayer::adapter_</definition>
        <argsstring></argsstring>
        <name>adapter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AI adapter associated with the AI player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="311" column="11" bodyfile="/home/kamil/zpr/Monopoly/Player.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ai_player_1af99e94a5743355bc84b84640966a9b62" prot="private" static="no" mutable="no">
        <type><ref refid="classann_1_1neuralnet" kindref="compound">ann::neuralnet</ref></type>
        <definition>ann::neuralnet AiPlayer::neural_network_</definition>
        <argsstring></argsstring>
        <name>neural_network_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Neural network for decision-making. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="312" column="16" bodyfile="/home/kamil/zpr/Monopoly/Player.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ai_player_1a8039dc621ac1f6b087d0f1732ce3ab55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AiPlayer::AiPlayer</definition>
        <argsstring>()</argsstring>
        <name>AiPlayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor for <ref refid="class_ai_player" kindref="compound">AiPlayer</ref> class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="316" column="1" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="286" bodyend="288"/>
        <references refid="class_player_1adbcc2bba53e6bb2837d763eef79edff9" compoundref="_player_8cc" startline="155" endline="157">Player::setIsAi</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1ad1267fc957d88796271b562c188c0b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AiPlayer::AiPlayer</definition>
        <argsstring>(unsigned int money)</argsstring>
        <name>AiPlayer</name>
        <param>
          <type>unsigned int</type>
          <declname>money</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="class_ai_player" kindref="compound">AiPlayer</ref> class with initial money.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>money</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial amount of money for the AI player. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="323" column="1" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="290" bodyend="292"/>
        <references refid="class_player_1adbcc2bba53e6bb2837d763eef79edff9" compoundref="_player_8cc" startline="155" endline="157">Player::setIsAi</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a4a2cbc1f46ddce268b614dafae2e5e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AiPlayer::AiPlayer</definition>
        <argsstring>(unsigned int money, ann::neuralnet nn)</argsstring>
        <name>AiPlayer</name>
        <param>
          <type>unsigned int</type>
          <declname>money</declname>
        </param>
        <param>
          <type><ref refid="classann_1_1neuralnet" kindref="compound">ann::neuralnet</ref></type>
          <declname>nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="class_ai_player" kindref="compound">AiPlayer</ref> class with initial money and neural_network.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>money</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial amount of money for the AI player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Neural network used by a <ref refid="class_player" kindref="compound">Player</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="331" column="1" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="294" bodyend="297"/>
        <references refid="class_player_1adbcc2bba53e6bb2837d763eef79edff9" compoundref="_player_8cc" startline="155" endline="157">Player::setIsAi</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a5d5a34086d564d1de13ac38bf1885b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ai_adapter" kindref="compound">AiAdapter</ref> &amp;</type>
        <definition>AiAdapter &amp; AiPlayer::getAdapter</definition>
        <argsstring>()</argsstring>
        <name>getAdapter</name>
        <reimplements refid="class_player_1a963ec6ae7e632ce539c27761dac64260">getAdapter</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the AI adapter associated with the AI player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="334" column="11" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a47e04e0a4457aaaef551c06eea00230f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classann_1_1neuralnet" kindref="compound">ann::neuralnet</ref> &amp;</type>
        <definition>ann::neuralnet &amp; AiPlayer::getNeuralNetwork</definition>
        <argsstring>()</argsstring>
        <name>getNeuralNetwork</name>
        <reimplements refid="class_player_1a84e305a0a267be2c435a40544ddd35c8">getNeuralNetwork</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the neural network associated with the AI player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="337" column="16" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a8deec5aebde9d29c2363837aea19748f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AiPlayer::setNeuralNetwork</definition>
        <argsstring>(ann::neuralnet new_nn)</argsstring>
        <name>setNeuralNetwork</name>
        <param>
          <type><ref refid="classann_1_1neuralnet" kindref="compound">ann::neuralnet</ref></type>
          <declname>new_nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the neura network used by the AI player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="340" column="6" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="307" bodyend="309"/>
        <referencedby refid="class_monopoly_game_engine_1abc237772db36ef7096d874ac7bf15076" compoundref="_monopoly_game_engine_8cc" startline="42" endline="108">MonopolyGameEngine::createPlayers</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a4ec346de3b8d48b157354452569ec266" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="main_8h_1a8a2b1218113cc3385a8aaf1870e4a007" kindref="member">BuyDecision</ref></type>
        <definition>BuyDecision AiPlayer::decideBuy</definition>
        <argsstring>(unsigned int index) override</argsstring>
        <name>decideBuy</name>
        <reimplements refid="class_player_1adfeb87a6e956897e314f5396d5662293">decideBuy</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a buying decision for the AI player (override from base class).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the property to consider. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>BuyDecision object representing the decision. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="348" column="13" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="311" bodyend="363"/>
        <references refid="main_8h_1a8a2b1218113cc3385a8aaf1870e4a007a63bd0e8187aecf59420bcdb967a523ab" compoundref="main_8h" startline="158">BUY</references>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" compoundref="_player_8cc" startline="167" endline="169">Player::getAiLevel</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="class_player_1a39465d76fc735a64d104b8b21e574b8c" compoundref="_player_8cc" startline="80" endline="82">Player::getMoney</references>
        <references refid="main_8h_1a8a2b1218113cc3385a8aaf1870e4a007a528042e12195bec7e89166ebb030caf7" compoundref="main_8h" startline="158">RESIGN</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1add73dc5a5c94ac7afff1ee5be8fb7637" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="main_8h_1ab6ecd1223ac100310bac8f0f0131eb4a" kindref="member">JailDecision</ref></type>
        <definition>JailDecision AiPlayer::decideJail</definition>
        <argsstring>() override</argsstring>
        <name>decideJail</name>
        <reimplements refid="class_player_1a83461a9c984ddf60dd6f3a9775690d45">decideJail</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a jail decision for the AI player (override from base class).</para>
<para><simplesect kind="return"><para>JailDecision object representing the decision. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="355" column="14" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="365" bodyend="412"/>
        <references refid="main_8h_1ab6ecd1223ac100310bac8f0f0131eb4aa159689cdd8e8646707acb32f0b09b07a" compoundref="main_8h" startline="157">CARD</references>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" compoundref="_player_8cc" startline="167" endline="169">Player::getAiLevel</references>
        <references refid="class_player_1a223c145e34c3288cf74be4c77dc58591" compoundref="_player_8cc" startline="57" endline="59">Player::getFieldOwnedId</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="class_player_1a39465d76fc735a64d104b8b21e574b8c" compoundref="_player_8cc" startline="80" endline="82">Player::getMoney</references>
        <references refid="main_8h_1ab6ecd1223ac100310bac8f0f0131eb4aa4ec59db2fdb4c4c9a2cbef2d790131f5" compoundref="main_8h" startline="157">PAY</references>
        <references refid="main_8h_1ab6ecd1223ac100310bac8f0f0131eb4aa2eeb9fef8a6a516fa6437a44a6efbd52" compoundref="main_8h" startline="157">ROLL</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1ade144bf242d81cb7e0b4b714545ebeb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9c" kindref="member">Decision</ref></type>
        <definition>Decision AiPlayer::decideMortgage</definition>
        <argsstring>(unsigned int index) override</argsstring>
        <name>decideMortgage</name>
        <reimplements refid="class_player_1a9c596f7c08886d9db546d3c222611f5f">decideMortgage</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a mortgage decision for the AI player (override from base class).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the property to consider. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Decision object representing the mortgage decision. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="363" column="10" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="414" bodyend="447"/>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a223c145e34c3288cf74be4c77dc58591" compoundref="_player_8cc" startline="57" endline="59">Player::getFieldOwnedId</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="class_player_1a39465d76fc735a64d104b8b21e574b8c" compoundref="_player_8cc" startline="80" endline="82">Player::getMoney</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca0d077f5b932ce05e5b9f30c6087a2f31" compoundref="main_8h" startline="156">NO</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca99f136a862ba5c7d16967231c29f09d6" compoundref="main_8h" startline="156">YES</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1ad37f0daac7f78c3179a6bd95da7c07af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9c" kindref="member">Decision</ref></type>
        <definition>Decision AiPlayer::decideUnmortgage</definition>
        <argsstring>(unsigned int index) override</argsstring>
        <name>decideUnmortgage</name>
        <reimplements refid="class_player_1a612f3f8120ad911a6dded373573d55bc">decideUnmortgage</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make an unmortgage decision for the AI player (override from base class).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the property to consider. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Decision object representing the unmortgage decision. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="371" column="10" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="449" bodyend="484"/>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a223c145e34c3288cf74be4c77dc58591" compoundref="_player_8cc" startline="57" endline="59">Player::getFieldOwnedId</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="class_player_1a39465d76fc735a64d104b8b21e574b8c" compoundref="_player_8cc" startline="80" endline="82">Player::getMoney</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca0d077f5b932ce05e5b9f30c6087a2f31" compoundref="main_8h" startline="156">NO</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca99f136a862ba5c7d16967231c29f09d6" compoundref="main_8h" startline="156">YES</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a441701de5fdaa5958fcc36e9791a9edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int AiPlayer::decideAuctionBid</definition>
        <argsstring>(unsigned int price) override</argsstring>
        <name>decideAuctionBid</name>
        <reimplements refid="class_player_1af3da06d4c1776f82ff4cd8619377fd7d">decideAuctionBid</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>price</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a decision for auction bidding for the AI player (override from base class).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>price</parametername>
</parameternamelist>
<parameterdescription>
<para>Current price in the auction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The bid amount decided by the AI player. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="379" column="14" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="486" bodyend="520"/>
        <references refid="class_ai_adapter_1a840ba14a6c65e4b7572ca9838b62c4f7" compoundref="_ai_adapter_8cc" startline="30" endline="32">AiAdapter::convertMoneyValue</references>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" compoundref="_player_8cc" startline="167" endline="169">Player::getAiLevel</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a94760240482130380840c0d303a19642" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int AiPlayer::decideBuildHouse</definition>
        <argsstring>() override</argsstring>
        <name>decideBuildHouse</name>
        <reimplements refid="class_player_1a71313606c3b4a7b363cabd40bd9a7126">decideBuildHouse</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a decision for building a house for the AI player (override from base class).</para>
<para><simplesect kind="return"><para>The index of the property on which the AI player decides to build a house. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="386" column="14" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="522" bodyend="597"/>
        <references refid="class_ai_adapter_1a0e0bbefc2b13cefab3ab2ccf16851bfe" compoundref="_ai_adapter_8cc" startline="34" endline="40">AiAdapter::convertHouseValue</references>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" compoundref="_player_8cc" startline="167" endline="169">Player::getAiLevel</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="class_player_1a39465d76fc735a64d104b8b21e574b8c" compoundref="_player_8cc" startline="80" endline="82">Player::getMoney</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a141ea4b1a96050ae1ac1f6925c308135" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>unsigned int AiPlayer::decideSellHouse</definition>
        <argsstring>() override</argsstring>
        <name>decideSellHouse</name>
        <reimplements refid="class_player_1afa5630a45ffb3f996be4229cbad75bb0">decideSellHouse</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a decision for selling a house for the AI player (override from base class).</para>
<para><simplesect kind="return"><para>The index of the property from which the AI player decides to sell a house. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="393" column="14" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="599" bodyend="683"/>
        <references refid="class_ai_adapter_1a0e0bbefc2b13cefab3ab2ccf16851bfe" compoundref="_ai_adapter_8cc" startline="34" endline="40">AiAdapter::convertHouseValue</references>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" compoundref="_player_8cc" startline="167" endline="169">Player::getAiLevel</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="class_player_1a39465d76fc735a64d104b8b21e574b8c" compoundref="_player_8cc" startline="80" endline="82">Player::getMoney</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1a84e084321dab6cea80ec5ea0f5564c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9c" kindref="member">Decision</ref></type>
        <definition>Decision AiPlayer::decideOfferTrade</definition>
        <argsstring>() override</argsstring>
        <name>decideOfferTrade</name>
        <reimplements refid="class_player_1a42244fc7463a4fc447a73f35d2dcb483">decideOfferTrade</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a decision for offering a trade for the AI player (override from base class).</para>
<para><simplesect kind="return"><para>Decision object representing the trade offer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="400" column="10" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="685" bodyend="733"/>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" compoundref="_player_8cc" startline="167" endline="169">Player::getAiLevel</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca0d077f5b932ce05e5b9f30c6087a2f31" compoundref="main_8h" startline="156">NO</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca99f136a862ba5c7d16967231c29f09d6" compoundref="main_8h" startline="156">YES</references>
      </memberdef>
      <memberdef kind="function" id="class_ai_player_1affc4990f1252789326aa28a7797462ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9c" kindref="member">Decision</ref></type>
        <definition>Decision AiPlayer::decideAcceptTrade</definition>
        <argsstring>() override</argsstring>
        <name>decideAcceptTrade</name>
        <reimplements refid="class_player_1a7adf207e9b3b987da924fd602ecc6528">decideAcceptTrade</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a decision for accepting a trade for the AI player (override from base class).</para>
<para><simplesect kind="return"><para>Decision object representing the acceptance of the trade. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/Player.h" line="407" column="10" bodyfile="/home/kamil/zpr/Monopoly/Player.cc" bodystart="735" bodyend="783"/>
        <references refid="classann_1_1neuralnet_1af6ea7c4bc68dbd966cc80a63a6a3519d" compoundref="_tinyann_8cc" startline="141" endline="146">ann::neuralnet::evaluate</references>
        <references refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" compoundref="_player_8cc" startline="167" endline="169">Player::getAiLevel</references>
        <references refid="class_ai_adapter_1ac76618fcec497abb9b30456c39bb824a" compoundref="_ai_adapter_8cc" startline="20" endline="22">AiAdapter::getInputs</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca0d077f5b932ce05e5b9f30c6087a2f31" compoundref="main_8h" startline="156">NO</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca99f136a862ba5c7d16967231c29f09d6" compoundref="main_8h" startline="156">YES</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an AI player in a Monopoly game, inheriting from <ref refid="class_player" kindref="compound">Player</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Player</label>
        <link refid="class_player"/>
      </node>
      <node id="1">
        <label>AiPlayer</label>
        <link refid="class_ai_player"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Player</label>
        <link refid="class_player"/>
      </node>
      <node id="1">
        <label>AiPlayer</label>
        <link refid="class_ai_player"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/kamil/zpr/Monopoly/Player.h" line="310" column="1" bodyfile="/home/kamil/zpr/Monopoly/Player.h" bodystart="310" bodyend="408"/>
    <listofallmembers>
      <member refid="class_ai_player_1a5d1744e5e2b7c54914f55cc285a1dd80" prot="private" virt="non-virtual"><scope>AiPlayer</scope><name>adapter_</name></member>
      <member refid="class_player_1afa1e3b200143dbd91fd746576bac8da4" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>addFieldOwnedId</name></member>
      <member refid="class_player_1a79f2a8218f4b17df9ed5ef79cfa85690" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>addMoney</name></member>
      <member refid="class_ai_player_1a8039dc621ac1f6b087d0f1732ce3ab55" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>AiPlayer</name></member>
      <member refid="class_ai_player_1ad1267fc957d88796271b562c188c0b68" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>AiPlayer</name></member>
      <member refid="class_ai_player_1a4a2cbc1f46ddce268b614dafae2e5e8a" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>AiPlayer</name></member>
      <member refid="class_player_1ac2f724596f37e2922bd2df2d4922d670" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>clearFieldOwnedId</name></member>
      <member refid="class_player_1aa6f0a7987a39716fb71558a017c75c51" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>createSprite</name></member>
      <member refid="class_ai_player_1affc4990f1252789326aa28a7797462ab" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideAcceptTrade</name></member>
      <member refid="class_ai_player_1a441701de5fdaa5958fcc36e9791a9edc" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideAuctionBid</name></member>
      <member refid="class_ai_player_1a94760240482130380840c0d303a19642" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideBuildHouse</name></member>
      <member refid="class_ai_player_1a4ec346de3b8d48b157354452569ec266" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideBuy</name></member>
      <member refid="class_ai_player_1add73dc5a5c94ac7afff1ee5be8fb7637" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideJail</name></member>
      <member refid="class_ai_player_1ade144bf242d81cb7e0b4b714545ebeb9" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideMortgage</name></member>
      <member refid="class_ai_player_1a84e084321dab6cea80ec5ea0f5564c02" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideOfferTrade</name></member>
      <member refid="class_ai_player_1a141ea4b1a96050ae1ac1f6925c308135" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideSellHouse</name></member>
      <member refid="class_ai_player_1ad37f0daac7f78c3179a6bd95da7c07af" prot="public" virt="virtual"><scope>AiPlayer</scope><name>decideUnmortgage</name></member>
      <member refid="class_ai_player_1a5d5a34086d564d1de13ac38bf1885b3a" prot="public" virt="virtual"><scope>AiPlayer</scope><name>getAdapter</name></member>
      <member refid="class_player_1a9ba3a7b625d50ad49f73eca39aff8248" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getAiLevel</name></member>
      <member refid="class_player_1a6af84629a95779c478adcd24efcefb1b" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getColor</name></member>
      <member refid="class_player_1a223c145e34c3288cf74be4c77dc58591" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getFieldOwnedId</name></member>
      <member refid="class_player_1a44be12490dcf4b7195ae494561f81c28" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getId</name></member>
      <member refid="class_player_1a59d465cbbc51c4371d1e770a682e6d97" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getIsAi</name></member>
      <member refid="class_player_1ad4d8755ebdffb8e7bfccc1119f0f7042" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getJailCards</name></member>
      <member refid="class_player_1ab27fb6eba2edafbe7c674abf2d85cc91" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getJailStatus</name></member>
      <member refid="class_player_1a39465d76fc735a64d104b8b21e574b8c" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getMoney</name></member>
      <member refid="class_ai_player_1a47e04e0a4457aaaef551c06eea00230f" prot="public" virt="virtual"><scope>AiPlayer</scope><name>getNeuralNetwork</name></member>
      <member refid="class_player_1a2d4f3ca739a5500c9e5f32932ed13019" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getPosition</name></member>
      <member refid="class_player_1a55e1a7856785c48db04f478ebc242cef" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getResultPlace</name></member>
      <member refid="class_player_1a408134399497e07b0ba53e82d5c40958" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getSprite</name></member>
      <member refid="class_player_1ad7cbe5430cf9ade1cb6b60dc73019fb7" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getSpriteOffsetX</name></member>
      <member refid="class_player_1aa59d45a1ed19a90404174126d69c55c1" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getSpriteOffsetY</name></member>
      <member refid="class_player_1aa27d00d02d75f945a9b5bb8624104658" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>getTexture</name></member>
      <member refid="class_player_1afbc9c4c7035653e4c4a56f863bd9f91c" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>hasFieldOwnedId</name></member>
      <member refid="class_ai_player_1af99e94a5743355bc84b84640966a9b62" prot="private" virt="non-virtual"><scope>AiPlayer</scope><name>neural_network_</name></member>
      <member refid="class_player_1affe0cc3cb714f6deb4e62f0c0d3f1fd8" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>Player</name></member>
      <member refid="class_player_1a56b1fc165843e6a22ba8e06348b05a60" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>Player</name></member>
      <member refid="class_player_1a3ebff2af2ca397ffcb64a2ddd91d8cee" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>reduceJailStatus</name></member>
      <member refid="class_player_1a1159031a207eddc655626adc8d420da4" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>removeFieldOwnedId</name></member>
      <member refid="class_player_1ab1032df37bafe0a30acadb7bb1ccb97a" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setAiLevel</name></member>
      <member refid="class_player_1a0686aac84725114b7c5b540189b47c60" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setColor</name></member>
      <member refid="class_player_1aec0b2d2447f555e247ac01a54a15d77f" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setId</name></member>
      <member refid="class_player_1adbcc2bba53e6bb2837d763eef79edff9" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setIsAi</name></member>
      <member refid="class_player_1a66e516d298b44b902bf15732a0e66515" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setJailCards</name></member>
      <member refid="class_player_1a67a3c5ddc234276cf72245f939a40438" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setJailStatus</name></member>
      <member refid="class_player_1aa44dae5224ce813c88265734662080bb" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setMoney</name></member>
      <member refid="class_ai_player_1a8deec5aebde9d29c2363837aea19748f" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setNeuralNetwork</name></member>
      <member refid="class_player_1a2de8544be02b4464afb87b6169139068" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setPosition</name></member>
      <member refid="class_player_1a79df4c23544bfc40ec2d2420617da758" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setResultPlace</name></member>
      <member refid="class_player_1a0861445aeb9c42d8f1da69e811ad4aa7" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setSpriteOffsetX</name></member>
      <member refid="class_player_1a53a4de1ec98d14b8648d12960bfef043" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setSpriteOffsetY</name></member>
      <member refid="class_player_1a804d87f26ce849e33068db8095f805d7" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>setSpritePosition</name></member>
      <member refid="class_player_1a6d24d184974e84bb529bcfb1366d0f9d" prot="public" virt="non-virtual"><scope>AiPlayer</scope><name>substractMoney</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_active_screen_8h" kind="file" language="C++">
    <compoundname>ActiveScreen.h</compoundname>
    <includes local="no">SFML/Graphics.hpp</includes>
    <includes local="no">SFML/System/Clock.hpp</includes>
    <includes local="no">list</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="_button_8h" local="yes">Button.h</includes>
    <includes refid="_context_window_8h" local="yes">ContextWindow.h</includes>
    <includes refid="_player_8h" local="yes">Player.h</includes>
    <includes refid="main_8h" local="yes">main.h</includes>
    <includedby refid="_active_screen_8cc" local="yes">/home/kamil/zpr/Monopoly/ActiveScreen.cc</includedby>
    <includedby refid="_game_engine_8h" local="yes">/home/kamil/zpr/Monopoly/GameEngine.h</includedby>
    <includedby refid="_game_screen_8h" local="yes">/home/kamil/zpr/Monopoly/GameScreen.h</includedby>
    <includedby refid="_monopoly_game_engine_8h" local="yes">/home/kamil/zpr/Monopoly/MonopolyGameEngine.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>list</label>
      </node>
      <node id="2">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="24">
        <label>queue</label>
      </node>
      <node id="22">
        <label>Tinyneat.h</label>
        <link refid="_tinyneat_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>bits/stdc++.h</label>
      </node>
      <node id="1">
        <label>/home/kamil/zpr/Monopoly/ActiveScreen.h</label>
        <link refid="_active_screen_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="9">
        <label>main.h</label>
        <link refid="main_8h"/>
      </node>
      <node id="19">
        <label>fstream</label>
      </node>
      <node id="11">
        <label>Player.h</label>
        <link refid="_player_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ContextWindow.h</label>
        <link refid="_context_window_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>random</label>
      </node>
      <node id="20">
        <label>stack</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="17">
        <label>array</label>
      </node>
      <node id="7">
        <label>Button.h</label>
        <link refid="_button_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Tinyann.h</label>
        <link refid="_tinyann_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="21">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="3">
        <label>SFML/System/Clock.hpp</label>
      </node>
      <node id="15">
        <label>AiAdapter.h</label>
        <link refid="_ai_adapter_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/kamil/zpr/Monopoly/ActiveScreen.cc</label>
        <link refid="_active_screen_8cc"/>
      </node>
      <node id="9">
        <label>/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc</label>
        <link refid="_monopoly_game_engine_8cc"/>
      </node>
      <node id="6">
        <label>/home/kamil/zpr/Monopoly/GameScreen.h</label>
        <link refid="_game_screen_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/kamil/zpr/Monopoly/GameEngine.h</label>
        <link refid="_game_engine_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/kamil/zpr/Monopoly/ActiveScreen.h</label>
        <link refid="_active_screen_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/kamil/zpr/Monopoly/GameEngine.cc</label>
        <link refid="_game_engine_8cc"/>
      </node>
      <node id="5">
        <label>/home/kamil/zpr/Monopoly/main.cc</label>
        <link refid="main_8cc"/>
      </node>
      <node id="8">
        <label>/home/kamil/zpr/Monopoly/MonopolyGameEngine.h</label>
        <link refid="_monopoly_game_engine_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/kamil/zpr/Monopoly/GameScreen.cc</label>
        <link refid="_game_screen_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_active_screen" prot="public">ActiveScreen</innerclass>
    <innerclass refid="class_game_menu_screen" prot="public">GameMenuScreen</innerclass>
    <innerclass refid="class_main_menu_screen" prot="public">MainMenuScreen</innerclass>
    <briefdescription>
<para>Header file handling displayed screens of project Base claass is <ref refid="class_active_screen" kindref="compound">ActiveScreen</ref>, then derived class are used to work with specific screen shown. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Kamil Kosnik, Kacper Radzikowski </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ACTIVE_SCREEN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACTIVE_SCREEN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/Graphics.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML/System/Clock.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_button_8h" kindref="compound">Button.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_context_window_8h" kindref="compound">ContextWindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_player_8h" kindref="compound">Player.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_8h" kindref="compound">main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_active_screen" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_active_screen" kindref="compound">ActiveScreen</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_context_window" kindref="compound">ContextWindow</ref>*<sp/>context_window_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Font<sp/>font_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Button&gt;&gt;<sp/>buttons_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;sf::Text&gt;&gt;<sp/>texts_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8h_1ace298d3cfe0ebb75e39a4454a9ccdf3e" kindref="member">ActiveScreenType</ref><sp/>type_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_active_screen_1a8fbf39867108efbaf2d3e3102ec7d746" kindref="member">ActiveScreen</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_active_screen_1a3cd9d9f9571195d3fd030c41512348da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3" kindref="member">ScreenEventType</ref><sp/><ref refid="class_active_screen_1a3cd9d9f9571195d3fd030c41512348da" kindref="member">worker</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_active_screen_1a381ad867612f98caa038c0b775f0c39a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_active_screen_1a381ad867612f98caa038c0b775f0c39a" kindref="member">draw</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Font&amp;<sp/><ref refid="class_active_screen_1a6566d6bd5327b662b7cf587b1c26ce61" kindref="member">getFont</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_active_screen_1ae56257f26e8cc35bc9bf476e4a633e20" kindref="member">setFont</ref>(sf::Font<sp/>font);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_active_screen_1ab51ef0260eead96cb3d88ecdb42cdd36" kindref="member">addButton</ref>(std::shared_ptr&lt;Button&gt;<sp/>button_tmp);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_active_screen_1a4115e6322ed681427d0cd92c5910ca5e" kindref="member">addText</ref>(std::shared_ptr&lt;sf::Text&gt;<sp/>text_tmp);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;Button&gt;&gt;&amp;<sp/><ref refid="class_active_screen_1aefe54d9a04210b2985890f3657974484" kindref="member">getButtons</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;sf::Text&gt;&gt;&amp;<sp/><ref refid="class_active_screen_1a83ce836bcc0364d216ee126716b27da0" kindref="member">getTexts</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_context_window" kindref="compound">ContextWindow</ref>*<sp/><ref refid="class_active_screen_1ac7c3386bd133917396975a4b0a5a6e68" kindref="member">getContextWindow</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_active_screen_1a3de2c1b9355ef27577cf8af01c0f4632" kindref="member">setContextWindow</ref>(<ref refid="class_context_window" kindref="compound">ContextWindow</ref>*);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8h_1ace298d3cfe0ebb75e39a4454a9ccdf3e" kindref="member">ActiveScreenType</ref><sp/><ref refid="class_active_screen_1aa4db9f544d20ad9c7b1fe2af4d55ea3d" kindref="member">getScreenType</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_active_screen_1ac551bc4bf328afb1226d57cdf9e13daf" kindref="member">setScreenType</ref>(<ref refid="main_8h_1ace298d3cfe0ebb75e39a4454a9ccdf3e" kindref="member">ActiveScreenType</ref><sp/><ref refid="namespaceann_1a2bc6262d836cadb5144e9f2ab25a7330" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_active_screen_1a385001a5027f0b2f00145a54b668368f" kindref="member">buttonSetColors</ref>(std::shared_ptr&lt;Button&gt;<sp/>buttonPtr);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;playerSettings&gt;&gt;<sp/><ref refid="class_active_screen_1a571c9f50c3d50235b43a1d2cb01ad72f" kindref="member">getPlayersSettings</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;std::shared_ptr&lt;Player&gt;&gt;<sp/><ref refid="class_active_screen_1a33f41ba13061ef1700f475e916bcba3b" kindref="member">getPlayersResult</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_game_menu_screen" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_game_menu_screen" kindref="compound">GameMenuScreen</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_active_screen" kindref="compound">ActiveScreen</ref><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;playerSettings&gt;&gt;<sp/>playerSettingsList_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createPlayerSettingsColumn(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colNum,<sp/>sf::Vector2f<sp/>posStart,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yStep);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_game_menu_screen_1a5c3726575383e12d2a0f55e035be6719" kindref="member">GameMenuScreen</ref>();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1af17f9c5e3353be5c531251c4e78d6d0c" kindref="member">gameMenuCreate</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3" kindref="member">ScreenEventType</ref><sp/><ref refid="class_game_menu_screen_1a930fac59e5231f348579a57991246e07" kindref="member">worker</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1ade9e4b9082cd923b43e45ea1f74ebaba" kindref="member">setPlayerSettings</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNone,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHuman,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1a5ec0f806edaf1275af6d9eb044e2d8f6" kindref="member">buttonClickHandle</ref>(std::shared_ptr&lt;Button&gt;<sp/>buttonPtr);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1aa5f7b6ac2cb57c6f700aefe1f727bd77" kindref="member">setOtherButtonsInactive</ref>(std::shared_ptr&lt;Button&gt;<sp/>buttonPtr);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1a974eb5076298fbba7e4d6b577f74e888" kindref="member">getPlayerNumFromEventType</ref>(<ref refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3" kindref="member">ScreenEventType</ref><sp/>event);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1ae427ab9331af7fb8bfa52d88a0977b3e" kindref="member">setAILevelColumnVisibility</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playerNum,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1a8734e38603d1886079ff185c5aa399bc" kindref="member">isEventTypeAILevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playerNum,<sp/><ref refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3" kindref="member">ScreenEventType</ref><sp/>event);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1a704fad5ddf438187195732e2b727aaaf" kindref="member">isEventTypeSetAI</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playerNum,<sp/><ref refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3" kindref="member">ScreenEventType</ref><sp/>event);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1a348efe82320f6cf37be5b873343768d1" kindref="member">setDefaultAILevelButtonsFocus</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>playerNum);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::shared_ptr&lt;playerSettings&gt;&gt;<sp/><ref refid="class_game_menu_screen_1a1ec0a4aa6bc44f2153e9d2abf290e7c4" kindref="member">getPlayersSettings</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_game_menu_screen_1a4f3b0441bbb05d9c97a5f2970eeacd16" kindref="member">draw</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal">};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="class_main_menu_screen" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_main_menu_screen" kindref="compound">MainMenuScreen</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_active_screen" kindref="compound">ActiveScreen</ref><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_main_menu_screen_1a4d246c87a47788cf7802e145e9ab0f6e" kindref="member">MainMenuScreen</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_menu_screen_1ac1f40ff20eed76db8a0fc8cca1a8cd0b" kindref="member">mainMenuCreate</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3" kindref="member">ScreenEventType</ref><sp/><ref refid="class_main_menu_screen_1afdd21c26a37bfc5b952836e283b31688" kindref="member">worker</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_menu_screen_1a6f640795fce8c271b2988ee05f545d37" kindref="member">draw</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kamil/zpr/Monopoly/ActiveScreen.h"/>
  </compounddef>
</doxygen>

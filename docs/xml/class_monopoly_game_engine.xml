<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_monopoly_game_engine" kind="class" language="C++" prot="public">
    <compoundname>MonopolyGameEngine</compoundname>
    <includes refid="_monopoly_game_engine_8h" local="no">MonopolyGameEngine.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_monopoly_game_engine_1a6e51bc7bcc8d43d4cb87bfbebe3f9dc6" prot="private" static="no" mutable="no">
        <type><ref refid="main_8h_1a1fbb23a4b2427b486453417312008cfb" kindref="member">TurnState</ref></type>
        <definition>TurnState MonopolyGameEngine::turn_state_</definition>
        <argsstring></argsstring>
        <name>turn_state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current turn state of the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="41" column="11" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a0af60128bdaaee0e65a3e232d701ce05" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MonopolyGameEngine::PLAYERS_MAX_</definition>
        <argsstring></argsstring>
        <name>PLAYERS_MAX_</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of players in the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="42" column="20" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ae7cedb1d37c121f7e639ecc3d7f603ab" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MonopolyGameEngine::PLAYERS_MIN_</definition>
        <argsstring></argsstring>
        <name>PLAYERS_MIN_</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum number of players in the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="43" column="20" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a0ad58bd68d3822e1a3d323b88f912c29" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::players_starting_amount_</definition>
        <argsstring></argsstring>
        <name>players_starting_amount_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starting amount of money for players. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="44" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1acfe4d4fb23848827564aa0166928d9be" prot="private" static="no" mutable="no">
        <type>std::array&lt; unsigned int, 4 &gt;</type>
        <definition>std::array&lt;unsigned int, 4&gt; MonopolyGameEngine::players_starting_Ids_</definition>
        <argsstring></argsstring>
        <name>players_starting_Ids_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starting IDs for players. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="45" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1acbe207f18c66e73b6c8f7730d197ac81" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::house_count_</definition>
        <argsstring></argsstring>
        <name>house_count_</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Total count of houses in the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="46" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a87fccd70763bd62a653a59eb26a46fab" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::hotel_count_</definition>
        <argsstring></argsstring>
        <name>hotel_count_</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Total count of hotels in the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="47" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ad076c4861c72327eca718f1be106065b" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::player_index_turn_</definition>
        <argsstring></argsstring>
        <name>player_index_turn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index of the current player&apos;s turn. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="48" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a494ff8130ecb1f10ce052cb5e22709e0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::is_ai_game_only_</definition>
        <argsstring></argsstring>
        <name>is_ai_game_only_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag indicating whether the game consists only of AI players. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="49" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a8a14d9c74c1b8f8b3932e00878c31f5a" prot="private" static="no" mutable="no">
        <type><ref refid="main_8h_1a816a6251d75e4dcd37d944ca68752095" kindref="member">GameScreenType</ref></type>
        <definition>GameScreenType MonopolyGameEngine::screen_type_</definition>
        <argsstring></argsstring>
        <name>screen_type_</name>
        <initializer>= <ref refid="main_8h_1a816a6251d75e4dcd37d944ca68752095a346a9950c4deb7434599827156fb0a5d" kindref="member">BOARDGAME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of the current game screen. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="50" column="16" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ad4914cdee7ee3da616d4515d2a607c99" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MonopolyGameEngine::PLAYER_MONEY_DEFAULT_</definition>
        <argsstring></argsstring>
        <name>PLAYER_MONEY_DEFAULT_</name>
        <initializer>= 1500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default starting money for players. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="51" column="20" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3b2fade1e72d3c05aef69e40f494c28c" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MonopolyGameEngine::START_PASSING_MONEY_</definition>
        <argsstring></argsstring>
        <name>START_PASSING_MONEY_</name>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Money passed to players when passing the start position. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="52" column="20" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ae10d7c9ffbd0400750804dfec0494ff3" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MonopolyGameEngine::GAME_TURNS_MAX</definition>
        <argsstring></argsstring>
        <name>GAME_TURNS_MAX</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of turns in the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="53" column="20" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a4d62ea58a2d905342a71e63994d59828" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::game_turns_globally_done_</definition>
        <argsstring></argsstring>
        <name>game_turns_globally_done_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of turns globally performed in the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="54" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a183c01e6f24af7c2e59f11ac834e6d9b" prot="private" static="no" mutable="no">
        <type>std::array&lt; bool, 4 &gt;</type>
        <definition>std::array&lt;bool, 4&gt; MonopolyGameEngine::game_turn_by_player_done_</definition>
        <argsstring></argsstring>
        <name>game_turn_by_player_done_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of turns performed by each player. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="55" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1af3b75d0048ec6b54fd27ab28b65c1cad" prot="private" static="no" mutable="no">
        <type><ref refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3" kindref="member">AuctionState</ref></type>
        <definition>AuctionState MonopolyGameEngine::auction_state_</definition>
        <argsstring></argsstring>
        <name>auction_state_</name>
        <initializer>= <ref refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3aace6aedb9800fa923394608e2fd6e511" kindref="member">NO_AUCTION</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current state of the auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="56" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a045486dbdf7cdbca414497de0c5bf9f0" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string MonopolyGameEngine::CHANCE_FILE_PATH_</definition>
        <argsstring></argsstring>
        <name>CHANCE_FILE_PATH_</name>
        <initializer>= &quot;Monopoly/game_config_json/<ref refid="_board_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">chance.json</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>File path for chance cards configuration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="58" column="19" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a95655b450206eca8756798276ea491be" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string MonopolyGameEngine::GAMEBOARD_FILE_PATH_</definition>
        <argsstring></argsstring>
        <name>GAMEBOARD_FILE_PATH_</name>
        <initializer>= &quot;Monopoly/game_config_json/<ref refid="_board_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">board.json</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>File path for game board configuration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="59" column="19" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a6e35d107038b90c2f3fff72b02de83b6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_board" kindref="compound">Board</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Board&gt; MonopolyGameEngine::gameboard_</definition>
        <argsstring></argsstring>
        <name>gameboard_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the game board. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="60" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a033c484200ad58af5de10ded3b2e67f6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Player&gt; &gt; MonopolyGameEngine::players_</definition>
        <argsstring></argsstring>
        <name>players_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of player objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="61" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a0157f8dae264da57bd478db50415b462" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Player&gt; &gt; MonopolyGameEngine::players_bankrupted_</definition>
        <argsstring></argsstring>
        <name>players_bankrupted_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of bankrupted players. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="62" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a57cdf629f772934861b45098cc35d5b1" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MonopolyGameEngine::FONT_SIZE</definition>
        <argsstring></argsstring>
        <name>FONT_SIZE</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Font size for text in GUI. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="65" column="20" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a4e06372082bd466115d9395d4b248fa4" prot="private" static="no" mutable="no">
        <type>sf::Font</type>
        <definition>sf::Font MonopolyGameEngine::font_</definition>
        <argsstring></argsstring>
        <name>font_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Font used in the GUI. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="66" column="10" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a65c884f9298540a51588577aed66eda5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Button&gt; &gt; MonopolyGameEngine::buttons_</definition>
        <argsstring></argsstring>
        <name>buttons_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of buttons in the GUI. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="67" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a5cab4cf93b08c388c134ac0921a7dbfb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; MonopolyGameEngine::texts_</definition>
        <argsstring></argsstring>
        <name>texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of text elements in the GUI. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="68" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aac729cf116c24a15267f747da73c9124" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;Button&gt; &gt; MonopolyGameEngine::auction_buttons_</definition>
        <argsstring></argsstring>
        <name>auction_buttons_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of auction buttons in the GUI. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="69" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1adccb352c049c6adce664c6d9c056fdc3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; MonopolyGameEngine::auction_texts_</definition>
        <argsstring></argsstring>
        <name>auction_texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of auction text elements in the GUI. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="70" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aa81c6a3eaaebbff2a479c63d3fed27c5" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::ROLL_DICE_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>ROLL_DICE_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(965, 120)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the roll dice button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="71" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a37270af06e84a4edaf2043653803377e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::roll_dice_button_</definition>
        <argsstring></argsstring>
        <name>roll_dice_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the roll dice button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="72" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a9d9dbe864cfd6485edabca639cfeab54" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::TURN_INFO_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>TURN_INFO_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(900, 50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the turn info text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="73" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a9e6e10c6fce519ea2cafe69d6df1146c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::turn_info_text_</definition>
        <argsstring></argsstring>
        <name>turn_info_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the turn info text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="74" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aa43241c3174889271961d3bff819d771" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::ROLLED_VALUE_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>ROLLED_VALUE_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(900, 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the rolled value text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="75" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ab750ff8b2429188e28d8fadefdc99934" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::rolled_value_text_</definition>
        <argsstring></argsstring>
        <name>rolled_value_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the rolled value text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="76" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1adb55d1cbb5d8213d12db6389bb46eea1" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::PLAYERS_INFO_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>PLAYERS_INFO_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(850, 800)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the players info text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="77" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a69aa14776e25e418a733c3d2bfcacc08" prot="private" static="no" mutable="no">
        <type>std::array&lt; std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;, 4 &gt;</type>
        <definition>std::array&lt;std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt;, 4&gt; MonopolyGameEngine::player_info_text_</definition>
        <argsstring></argsstring>
        <name>player_info_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array of vectors containing player info text elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="78" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a4424fdfb5c4c7c2ad9b0bd23c30bbcb4" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::BUY_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>BUY_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(965, 220)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the buy button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="80" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3313c3e476a1855fb69697acb17cd659" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::buy_field_button_</definition>
        <argsstring></argsstring>
        <name>buy_field_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the buy field button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="81" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1acefe55868a5b3103c779eb640d1ee1bd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::resign_buy_field_button_</definition>
        <argsstring></argsstring>
        <name>resign_buy_field_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the resign buy field button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="82" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a9dc5ce205e5b4730d7b2abb579d841e7" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::PROPERTY_DATA_POSITION</definition>
        <argsstring></argsstring>
        <name>PROPERTY_DATA_POSITION</name>
        <initializer>= sf::Vector2f(910, 260)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the property data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="84" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1af82d873155e9fda69153df42774156be" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::PROPERTY_DATA_AUCTION_POSITION</definition>
        <argsstring></argsstring>
        <name>PROPERTY_DATA_AUCTION_POSITION</name>
        <initializer>= sf::Vector2f(200, 300)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the property data during an auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="85" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a403a30bca02ea5767895c1f9320a3c34" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float MonopolyGameEngine::PROPERTY_DATA_SCALE</definition>
        <argsstring></argsstring>
        <name>PROPERTY_DATA_SCALE</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scale factor for property data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="86" column="7" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a037204989955e173a933f8f5272e138d" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite MonopolyGameEngine::property_data_sprite_</definition>
        <argsstring></argsstring>
        <name>property_data_sprite_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sprite for property data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="87" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1acd478cc44e0d32931d14dcef15af6920" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture MonopolyGameEngine::property_data_texture_</definition>
        <argsstring></argsstring>
        <name>property_data_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Texture for property data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="88" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ae46c3ae6692c4853b431c80b64d2638a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; MonopolyGameEngine::property_data_texts_</definition>
        <argsstring></argsstring>
        <name>property_data_texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of property data text elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="89" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a261d3695f1efa5fb90e409bfe79677dc" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::ALL_PROPERTY_DATA_POSITION</definition>
        <argsstring></argsstring>
        <name>ALL_PROPERTY_DATA_POSITION</name>
        <initializer>= sf::Vector2f(1400, 260)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of all property data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="91" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3cfaae1ef10e66823ef20f619053bdcd" prot="private" static="no" mutable="no">
        <type>sf::Sprite</type>
        <definition>sf::Sprite MonopolyGameEngine::all_property_data_sprite_</definition>
        <argsstring></argsstring>
        <name>all_property_data_sprite_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sprite for all property data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="92" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a035ef41bb4a18a7017f0c41a383ca929" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture MonopolyGameEngine::all_property_data_texture_</definition>
        <argsstring></argsstring>
        <name>all_property_data_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Texture for all property data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="93" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a39b62c7dadf03e687a0a988b5e144047" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; MonopolyGameEngine::all_property_data_texts_</definition>
        <argsstring></argsstring>
        <name>all_property_data_texts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of all property data text elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="94" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a5407142f5b062e60417b372f6188c6fe" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::NEXT_PROPERTY_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>NEXT_PROPERTY_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1595, 700)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the next property button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="95" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3e451882b810c187eb5dd329e7a57d16" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::PREVIOUS_PROPERTY_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>PREVIOUS_PROPERTY_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1445, 700)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the previous property button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="96" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a9ea36f2999543f8f84b5c9507925c7e5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::next_property_button_</definition>
        <argsstring></argsstring>
        <name>next_property_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the next property button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="97" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aceb27c0e85dd61797aebee6181a688d1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::previous_property_button_</definition>
        <argsstring></argsstring>
        <name>previous_property_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the previous property button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="98" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a820014a0c8dfeaf5100ae75c0254cf6e" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::current_property_showed_</definition>
        <argsstring></argsstring>
        <name>current_property_showed_</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index of the currently displayed property. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="99" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aaa203d2969f5238e01073fe535d247cc" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::available_houses_text_</definition>
        <argsstring></argsstring>
        <name>available_houses_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying available houses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="101" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a4123befa34c1a734e6a5ea3b561aba04" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::availableH_hotels_text_</definition>
        <argsstring></argsstring>
        <name>availableH_hotels_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying available hotels. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="102" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a4a65fcf2a17517c6c895e204ea5904b1" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::AVAILABLE_HOUSE_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>AVAILABLE_HOUSE_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(1675, 110)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the available houses text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="103" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a9d48d9cfad4cc77c5c767314b79d2827" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::bidded_property_text_</definition>
        <argsstring></argsstring>
        <name>bidded_property_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the bidded property. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="105" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aad070780d61f7512dcd14cd5f50e9fe7" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::BIDDED_PROPERTY_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>BIDDED_PROPERTY_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(200, 250)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the bidded property text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="106" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a0edd7a58bece2709aca23a64453b04b3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::bidder_info_text_</definition>
        <argsstring></argsstring>
        <name>bidder_info_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying bidder information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="108" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1acd4bab4635fbf30f22a9bdfd1dfcd514" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::BIDDER_INFO_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>BIDDER_INFO_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(1360, 105)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the bidder info text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="109" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a2f383163df9ca41bf411a5e04a17b74c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::highest_bid_info_text_</definition>
        <argsstring></argsstring>
        <name>highest_bid_info_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the highest bid information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="111" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3e96417432c22f899efa0125e5b96025" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::HIGHEST_BID_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>HIGHEST_BID_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(820, 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the highest bid text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="112" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a0e379687b53634f70b7349b36a8cee9b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::leading_bidder_info_text_</definition>
        <argsstring></argsstring>
        <name>leading_bidder_info_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the leading bidder information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="114" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ab5caa27a6a120513dbc7be20acf5b05c" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::LEADING_BIDDER_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>LEADING_BIDDER_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(820, 145)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the leading bidder text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="115" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3ffed7c02b2aea4dcc6cf9205de2eacf" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::current_offer_info_text_</definition>
        <argsstring></argsstring>
        <name>current_offer_info_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the current offer information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="117" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aa0fe06bf4d0ae28a33fe7d4778412db5" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::CURRENT_OFFER_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>CURRENT_OFFER_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(820, 680)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the current offer text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="118" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ad4c6ae46c9fdddc03a3f9e279e5229f2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::house_text_</definition>
        <argsstring></argsstring>
        <name>house_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the number of houses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="120" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a224f0d805f88441bbbefc6648bedc97b" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::hotel_text_</definition>
        <argsstring></argsstring>
        <name>hotel_text_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the number of hotels. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="121" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1afe55cf703bf9572843cd44a9970dbd5b" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::HOUSE_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>HOUSE_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(1445, 80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the house text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="122" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a13b9fcb0052ac65695f628462671d81d" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::HOTEL_TEXT_POSITION</definition>
        <argsstring></argsstring>
        <name>HOTEL_TEXT_POSITION</name>
        <initializer>= sf::Vector2f(1595, 80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the hotel text. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="123" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ae1f73832d0517c9b8c5c5a0d9ec749b2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::buy_house_button_</definition>
        <argsstring></argsstring>
        <name>buy_house_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the buy house button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="124" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a15dc3deb5841e3c3e3be2c8c392e7327" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::sell_house_button_</definition>
        <argsstring></argsstring>
        <name>sell_house_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the sell house button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="125" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a7694b67fa197f9a7afda96d951a97f30" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::buy_hotel_button_</definition>
        <argsstring></argsstring>
        <name>buy_hotel_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the buy hotel button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="126" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1abc2db5daa96ed76040de7a6c5ab7b567" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::sell_hotel_button_</definition>
        <argsstring></argsstring>
        <name>sell_hotel_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the sell hotel button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="127" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a40c0ab74076203a39ddb2de447798d54" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::BUY_HOUSE_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>BUY_HOUSE_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1445, 120)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the buy house button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="128" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a11ddfcd8f1d533527871c03a64964ad6" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::SELL_HOUSE_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>SELL_HOUSE_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1445, 180)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the sell house button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="129" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a2d459c7773d852bf557ba029db828514" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::BUY_HOTEL_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>BUY_HOTEL_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1595, 120)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the buy hotel button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="130" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a36a11e6b65fa798230ff24b7ac3edbc2" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::SELL_HOTEL_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>SELL_HOTEL_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1595, 180)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the sell hotel button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="131" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a60ce3ef33166a617aaf330fd7b4076cb" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::bankrupt_button_</definition>
        <argsstring></argsstring>
        <name>bankrupt_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the bankrupt button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="133" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a6bc3b17ccd8b916667e47d3ce7987959" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::next_turn_button_</definition>
        <argsstring></argsstring>
        <name>next_turn_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the next turn button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="134" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aeba85691830151cafcc5ef90d441bebf" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::BANKRUPT_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>BANKRUPT_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1270, 50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the bankrupt button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="135" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a741bde89a158a4c6f1c2b78811f1fddd" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::NEXT_TURN_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>NEXT_TURN_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1270, 180)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the next turn button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="136" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1af545a01a6875353bda7eafa212445fb1" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::house_size_</definition>
        <argsstring></argsstring>
        <name>house_size_</name>
        <initializer>= sf::Vector2f(22, 13)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of a house. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="139" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a480c2f33efafecb3ddb5a7c3f47cb6ee" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture MonopolyGameEngine::house_texture_</definition>
        <argsstring></argsstring>
        <name>house_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Texture for a house. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="140" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aa46f5b9ba191f8c619ef140af54dd4db" prot="private" static="no" mutable="no">
        <type>sf::Texture</type>
        <definition>sf::Texture MonopolyGameEngine::hotel_texture_</definition>
        <argsstring></argsstring>
        <name>hotel_texture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Texture for a hotel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="141" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a709874b75ec2a4c3d81ac0c1f5048000" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::jail_pay_button_</definition>
        <argsstring></argsstring>
        <name>jail_pay_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the pay jail button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="144" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a90350a9cca29f342d41effd8a589d4b5" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::JAIL_PAY_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>JAIL_PAY_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1000, 250)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the pay jail button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="145" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aeda0fc9cc291e0180b8283c7000ac00b" prot="private" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int MonopolyGameEngine::JAIL_PAY_MONEY</definition>
        <argsstring></argsstring>
        <name>JAIL_PAY_MONEY</name>
        <initializer>= 50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Amount of money required to pay jail. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="146" column="20" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a4503877876fb8db370b9a79656e1c8d6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::Text1_</definition>
        <argsstring></argsstring>
        <name>Text1_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the value 1 in auction offer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="149" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1abc76a0c234b0688333e37c39ca1eb116" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::Text10_</definition>
        <argsstring></argsstring>
        <name>Text10_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the value 10 in auction offer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="150" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ab30197b6e5fd252ea076ebbc4cfa517c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; sf::Text &gt;</type>
        <definition>std::shared_ptr&lt;sf::Text&gt; MonopolyGameEngine::Text100_</definition>
        <argsstring></argsstring>
        <name>Text100_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the text displaying the value 100 in auction offer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="151" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a5e90e55640d74bc840b03735f97b7238" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::TEXT_1_POSITION</definition>
        <argsstring></argsstring>
        <name>TEXT_1_POSITION</name>
        <initializer>= sf::Vector2f(975, 880)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the text displaying the value 1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="152" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1af509613cec92b430d4e74b5eb68f1199" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::TEXT_10_POSITION</definition>
        <argsstring></argsstring>
        <name>TEXT_10_POSITION</name>
        <initializer>= sf::Vector2f(975, 820)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the text displaying the value 10. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="153" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3e9f2747b5c0ca0e2aad913111e07400" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::TEXT_100_POSITION</definition>
        <argsstring></argsstring>
        <name>TEXT_100_POSITION</name>
        <initializer>= sf::Vector2f(975, 760)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the text displaying the value 100. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="154" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a8bdda24f24b8c663728fb7d9a7af6309" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::add_1_to_offer_button_</definition>
        <argsstring></argsstring>
        <name>add_1_to_offer_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the add 1 to offer button in auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="156" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ab70452b3bc96b10509ad2419539cc714" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::add_10_to_offer_button_</definition>
        <argsstring></argsstring>
        <name>add_10_to_offer_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the add 10 to offer button in auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="157" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1afcd7efeec8c85fe2269240600ee9f824" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::add_100_to_offer_button_</definition>
        <argsstring></argsstring>
        <name>add_100_to_offer_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the add 100 to offer button in auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="158" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a08799d8bf9a99b6c61d170fc8ddf5f86" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::substract_1_from_offer_button_</definition>
        <argsstring></argsstring>
        <name>substract_1_from_offer_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the subtract 1 from offer button in auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="159" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3f56ac00037ac3247c6d491f282f4eae" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::substract_10_from_offer_button_</definition>
        <argsstring></argsstring>
        <name>substract_10_from_offer_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the subtract 10 from offer button in auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="160" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a1755a232ea4a99c6fec34119de433178" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::substract_100_from_offer_button_</definition>
        <argsstring></argsstring>
        <name>substract_100_from_offer_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the subtract 100 from offer button in auction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="161" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a6aed9c2621c4ad4a6c1a34e482544ec7" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::ADD_1_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>ADD_1_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(900, 880)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the add 1 button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="162" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a610120b3b6e52520e9e3bb8a6db76eab" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::ADD_10_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>ADD_10_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(900, 820)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the add 10 button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="163" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a4ebb8f34bae663114ab0dbd073a5b593" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::ADD_100_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>ADD_100_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(900, 760)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the add 100 button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="164" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a76c0ce8611233197f17c660ba7a2f7bf" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::SUBSTRACT_1_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>SUBSTRACT_1_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1050, 880)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the subtract 1 button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="165" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a778d68961dde4f52f6202c41abcfa0b8" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::SUBSTRACT_10_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>SUBSTRACT_10_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1050, 820)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the subtract 10 button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="166" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a876f992f4f14768ebe44597e3e42afa7" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::SUBSTRACT_100_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>SUBSTRACT_100_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1050, 760)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the subtract 100 button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="167" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a822e589eb6b025c9e621fb9432f5fd00" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::auction_bid_button_</definition>
        <argsstring></argsstring>
        <name>auction_bid_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the auction bid button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="169" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a7e0e12b28660580298384ba2824ead66" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::AUCTION_BID_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>AUCTION_BID_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1200, 880)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the auction bid button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="170" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a88ea8e262a52769243b57feff22fcd13" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::auction_resign_button_</definition>
        <argsstring></argsstring>
        <name>auction_resign_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the auction resign button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="173" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1adc9f2bf911097ac081a42eb00374db3e" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::AUCTION_RESIGN_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>AUCTION_RESIGN_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1330, 880)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the auction resign button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="174" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a06273e0bce92ea43a0ee99b7abe594c0" prot="private" static="no" mutable="no">
        <type><ref refid="class_withdraw" kindref="compound">Withdraw</ref></type>
        <definition>Withdraw MonopolyGameEngine::withdraw_</definition>
        <argsstring></argsstring>
        <name>withdraw_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Object representing player withdrawal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="177" column="10" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a8833d457b97c29fd8e2b4dce9c9ed59c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::withdraw_button_</definition>
        <argsstring></argsstring>
        <name>withdraw_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the withdraw button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="178" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a9761b16485d0b391050a082f7332eeec" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::WITHDRAW_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>WITHDRAW_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(400, 900)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the withdraw button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="179" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a19fe10bcfe3b3b26297909619e55cabe" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::mortgage_button_</definition>
        <argsstring></argsstring>
        <name>mortgage_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the mortgage button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="182" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ac503a4257e690e2f7e28a355964b6397" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::unmortgage_button_</definition>
        <argsstring></argsstring>
        <name>unmortgage_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the unmortgage button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="183" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ab8933db11e93ae9bae17248b1aba8167" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::MORTGAGE_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>MORTGAGE_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1445, 760)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the mortgage button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="184" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aa146defe83e11b197f0ca21fcce7152d" prot="private" static="no" mutable="no">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::UNMORTGAGE_BUTTON_POSITION</definition>
        <argsstring></argsstring>
        <name>UNMORTGAGE_BUTTON_POSITION</name>
        <initializer>= sf::Vector2f(1595, 760)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Position of the unmortgage button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="185" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a489f0e3c67afc8d24e717d5f51970027" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_chance_card" kindref="compound">ChanceCard</ref> &gt;</type>
        <definition>std::vector&lt;ChanceCard&gt; MonopolyGameEngine::chance_cards_</definition>
        <argsstring></argsstring>
        <name>chance_cards_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of chance cards. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="188" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a3f0b7be16919b8fcc576b4b676764798" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::chance_card_current_</definition>
        <argsstring></argsstring>
        <name>chance_card_current_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index of the current chance card. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="189" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aa14e2aa91b55e7266e153ae4d17fad7e" prot="private" static="no" mutable="no">
        <type><ref refid="class_notification_wall" kindref="compound">NotificationWall</ref></type>
        <definition>NotificationWall MonopolyGameEngine::notifications_wall_</definition>
        <argsstring></argsstring>
        <name>notifications_wall_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notification wall for displaying messages. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="191" column="18" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1ac96403cf94e61065874cb8ab29161996" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float MonopolyGameEngine::RESULT_DATA_Y</definition>
        <argsstring></argsstring>
        <name>RESULT_DATA_Y</name>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Y-coordinate for positioning result screen data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="194" column="7" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1aa20b976c76e7d4a9a402b395e42e1b5e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;sf::Text&gt; &gt; MonopolyGameEngine::result_players_places_</definition>
        <argsstring></argsstring>
        <name>result_players_places_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of result screen player places. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="195" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a6ace82395d0f33d948c657c59e3ec993" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Button&gt; MonopolyGameEngine::return_to_main_menu_button_</definition>
        <argsstring></argsstring>
        <name>return_to_main_menu_button_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the return to main menu button. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="196" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1a1b5cce6ed1d1872bad8d464beb796aee" prot="private" static="no" mutable="no">
        <type>std::ofstream</type>
        <definition>std::ofstream MonopolyGameEngine::file_logger</definition>
        <argsstring></argsstring>
        <name>file_logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="199" column="15" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monopoly_game_engine_1add53615a57f6037ee8ad8a2c8620be4d" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string MonopolyGameEngine::FILE_LOGGER_PATH</definition>
        <argsstring></argsstring>
        <name>FILE_LOGGER_PATH</name>
        <initializer>= &quot;game_logs.txt&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="200" column="19" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_monopoly_game_engine_1a298da9aa86d8b0381c244b629b8d771e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::getplayer_index_turn</definition>
        <argsstring>() const</argsstring>
        <name>getplayer_index_turn</name>
        <briefdescription>
<para>Gets the current player index of the turn. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current player index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="207" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ae8b7454f40ae0bf9d8f4dde4bbc0e8ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::incplayer_index_turn</definition>
        <argsstring>()</argsstring>
        <name>incplayer_index_turn</name>
        <briefdescription>
<para>Increases the player index for the next turn. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="212" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aa581d80172ed4ad5c5cc72ddb1a7195f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::setTurnState</definition>
        <argsstring>(TurnState new_state)</argsstring>
        <name>setTurnState</name>
        <param>
          <type><ref refid="main_8h_1a1fbb23a4b2427b486453417312008cfb" kindref="member">TurnState</ref></type>
          <declname>new_state</declname>
        </param>
        <briefdescription>
<para>Sets the turn state to the specified state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The new turn state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="219" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a0b2429a6389698793d2ccee3250ba74b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::buttonsWorker</definition>
        <argsstring>()</argsstring>
        <name>buttonsWorker</name>
        <briefdescription>
<para>Handles various button-related actions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="224" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a10b63dc1c727575ef141a1cd36c9f282" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f MonopolyGameEngine::getUpdatePlayerSpritePosition</definition>
        <argsstring>()</argsstring>
        <name>getUpdatePlayerSpritePosition</name>
        <briefdescription>
<para>Gets the updated position for the player sprite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The updated position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="231" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1911" bodyend="1935"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a2187e2296efeaddb0a2c9468a6b5e70c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::clearPropertyData</definition>
        <argsstring>(bool is_property_shown_to_buy)</argsstring>
        <name>clearPropertyData</name>
        <param>
          <type>bool</type>
          <declname>is_property_shown_to_buy</declname>
        </param>
        <briefdescription>
<para>Clears property data based on whether it is shown for purchase or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_property_shown_to_buy</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the property is shown for purchase. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="238" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2706" bodyend="2712"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a866494e803d5d76bb64f119fbfe26f05" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::getFieldPriceByPosition</definition>
        <argsstring>(unsigned int pos)</argsstring>
        <name>getFieldPriceByPosition</name>
        <param>
          <type>unsigned int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Gets the field price based on its position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The price of the field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="246" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3065" bodyend="3079"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af1d8a552b14696fd038940ea7d8afb99" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::addOwnerToPropertyField</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; player, unsigned int pos)</argsstring>
        <name>addOwnerToPropertyField</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Adds the owner to a property field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>The player becoming the owner. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the property field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="254" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3081" bodyend="3091"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a03209f8cf8c96fa21b53a4b31f5cb074" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::isButtonClicked</definition>
        <argsstring>(std::shared_ptr&lt; Button &gt; button_ptr)</argsstring>
        <name>isButtonClicked</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
          <declname>button_ptr</declname>
        </param>
        <briefdescription>
<para>Checks if a button is clicked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the button. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the button is clicked, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="262" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="147" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ae8fb00612730f3abdab39eb6502498e4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::rollDice</definition>
        <argsstring>() const</argsstring>
        <name>rollDice</name>
        <briefdescription>
<para>Rolls the dice and returns the result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The rolled dice value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="269" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ad67e9088e1bbcb34576af4e94250fec4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::movePlayer</definition>
        <argsstring>(unsigned int turn_index, unsigned int position_increment)</argsstring>
        <name>movePlayer</name>
        <param>
          <type>unsigned int</type>
          <declname>turn_index</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>position_increment</declname>
        </param>
        <briefdescription>
<para>Moves the player based on the turn index and position increment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>turn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the player&apos;s turn. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_increment</parametername>
</parameternamelist>
<parameterdescription>
<para>The increment in the player&apos;s position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="277" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="537" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ab23f6ebae01d423fdc7c4b0f997da5ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::sendToJail</definition>
        <argsstring>(unsigned int turn_index)</argsstring>
        <name>sendToJail</name>
        <param>
          <type>unsigned int</type>
          <declname>turn_index</declname>
        </param>
        <briefdescription>
<para>Sends the player to jail based on the turn index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>turn_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the player&apos;s turn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="284" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="545" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a9675fd456131f0a0b0a58c23ef642b1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::notificationAdd</definition>
        <argsstring>(unsigned int index, std::string text)</argsstring>
        <name>notificationAdd</name>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Adds a notification based on the index and text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the notification. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text of the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="292" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3097" bodyend="3111"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1adb93bf0ef4eab1d2e1d5679a1541b345" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::handlePassingStart</definition>
        <argsstring>(unsigned int old_pos, unsigned int new_pos)</argsstring>
        <name>handlePassingStart</name>
        <param>
          <type>unsigned int</type>
          <declname>old_pos</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>new_pos</declname>
        </param>
        <briefdescription>
<para>Handles passing the Start position, updating old and new positions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>old_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The old position of the player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new position of the player. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="300" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="552" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a1e415bb8dc59b8f765750f7690bacff8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::makePlayerBankrupt</definition>
        <argsstring>(unsigned int player_index_turn)</argsstring>
        <name>makePlayerBankrupt</name>
        <param>
          <type>unsigned int</type>
          <declname>player_index_turn</declname>
        </param>
        <briefdescription>
<para>Makes the player bankrupt based on the player&apos;s index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player_index_turn</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the player. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="307" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3157" bodyend="3183"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a0a1f5f698aac49a37c31960abab3fdff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::showAllPropertiesWorker</definition>
        <argsstring>()</argsstring>
        <name>showAllPropertiesWorker</name>
        <briefdescription>
<para>Shows all properties for purchase. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="312" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="558" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ad229895480ce122bb0d6df65f19b2e5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::boardToAuctionSwitchHandler</definition>
        <argsstring>(bool is_auction)</argsstring>
        <name>boardToAuctionSwitchHandler</name>
        <param>
          <type>bool</type>
          <declname>is_auction</declname>
        </param>
        <briefdescription>
<para>Switches the game window to auction mode based on the specified flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_auction</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether to switch to auction mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="319" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="989" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a1d4c26553a5e77f4d004a9b287b1307b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::withdrawWorker</definition>
        <argsstring>()</argsstring>
        <name>withdrawWorker</name>
        <briefdescription>
<para>Handles withdrawal actions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="324" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1022" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af7a4fd53b9fb6f680b9e6440268ce75c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::aiWithdrawWorker</definition>
        <argsstring>()</argsstring>
        <name>aiWithdrawWorker</name>
        <briefdescription>
<para>Handles AI withdrawal actions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="329" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1051" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac59664c0ef86f9acd1b5984081318b25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_chance_card" kindref="compound">ChanceCard</ref> &amp;</type>
        <definition>ChanceCard &amp; MonopolyGameEngine::getChanceCard</definition>
        <argsstring>()</argsstring>
        <name>getChanceCard</name>
        <briefdescription>
<para>Gets the chance card reference. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The chance card reference. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="336" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3337" bodyend="3339"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1abd7f69a649532f12aa338a9b7707ace7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::updateChanceCard</definition>
        <argsstring>()</argsstring>
        <name>updateChanceCard</name>
        <briefdescription>
<para>Updates the chance card. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="341" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3341" bodyend="3347"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a42fa6ce1eecca8bdd2f8289c115e0a70" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::gameFinishedCheckWinner</definition>
        <argsstring>()</argsstring>
        <name>gameFinishedCheckWinner</name>
        <briefdescription>
<para>Checks if the game has finished and determined a winner. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if there is a winner, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="348" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3349" bodyend="3351"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a7e4308182539fb942f984d2baf72d207" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::gameFinishedCheckDraw</definition>
        <argsstring>()</argsstring>
        <name>gameFinishedCheckDraw</name>
        <briefdescription>
<para>Checks if the game has finished in a draw. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the game is a draw, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="355" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3353" bodyend="3355"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af9b05925192360013ec9a98f26bffb66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::gameTurnsCounterHandle</definition>
        <argsstring>()</argsstring>
        <name>gameTurnsCounterHandle</name>
        <briefdescription>
<para>Handles the counter for game turns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="360" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3357" bodyend="3368"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a27ef4da5008a397f8efb95377c63f075" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::removePlayerFromGame</definition>
        <argsstring>(unsigned int player_index_turn, bool is_draw)</argsstring>
        <name>removePlayerFromGame</name>
        <param>
          <type>unsigned int</type>
          <declname>player_index_turn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_draw</declname>
        </param>
        <briefdescription>
<para>Removes the player from the game based on the player&apos;s index and draw status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player_index_turn</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_draw</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the game ended in a draw. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="368" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3137" bodyend="3155"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a2cab04b721a44b8585b1af322afa2971" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Button &gt; MonopolyGameEngine::createDefaultButton</definition>
        <argsstring>(sf::String text, unsigned int width, unsigned int height)</argsstring>
        <name>createDefaultButton</name>
        <param>
          <type>sf::String</type>
          <declname>text</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Creates a default button with the specified text, width, and height. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text of the button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the button. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the button. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A shared pointer to the created button. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="378" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3185" bodyend="3209"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a6e9276ebf5df0db40a58448294ecbced" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::fileLoggerOpen</definition>
        <argsstring>()</argsstring>
        <name>fileLoggerOpen</name>
        <briefdescription>
<para>Opens the file logger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="383" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3370" bodyend="3372"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ad85138e0ceaa47eaa95f9fbc6fd80d7c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::fileLoggerWrite</definition>
        <argsstring>(std::string text)</argsstring>
        <name>fileLoggerWrite</name>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Writes text to the file logger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="390" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3374" bodyend="3378"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a11dd937360b5d9fec92f3a5363184095" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::fileLoggerClose</definition>
        <argsstring>()</argsstring>
        <name>fileLoggerClose</name>
        <briefdescription>
<para>Closes the file logger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="395" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3380" bodyend="3382"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_monopoly_game_engine_1a0145e733b4897ca398f0d0505a58be6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MonopolyGameEngine::MonopolyGameEngine</definition>
        <argsstring>()</argsstring>
        <name>MonopolyGameEngine</name>
        <briefdescription>
<para>Constructor for the <computeroutput>monopolyGameEngine</computeroutput> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="401" column="1" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="18" bodyend="28"/>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfba099a1107d491216f971a9f58e08abdd5" compoundref="main_8h" startline="68">ROLL_DICE</references>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a1687a15b6b383199232fa95b947a4b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::setScreenType</definition>
        <argsstring>(GameScreenType new_screen_type)</argsstring>
        <name>setScreenType</name>
        <param>
          <type><ref refid="main_8h_1a816a6251d75e4dcd37d944ca68752095" kindref="member">GameScreenType</ref></type>
          <declname>new_screen_type</declname>
        </param>
        <briefdescription>
<para>Sets the screen type to the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_screen_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The new screen type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="408" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="30" bodyend="32"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a5a7f70b3a7d70f563daf7426772590b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="main_8h_1a816a6251d75e4dcd37d944ca68752095" kindref="member">GameScreenType</ref></type>
        <definition>GameScreenType MonopolyGameEngine::getScreenType</definition>
        <argsstring>() const</argsstring>
        <name>getScreenType</name>
        <briefdescription>
<para>Gets the current screen type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current screen type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="415" column="16" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="34" bodyend="36"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ab7c6acc2b155fbdc1952280c494a05fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonRollDice</definition>
        <argsstring>()</argsstring>
        <name>createButtonRollDice</name>
        <briefdescription>
<para>Creates the button for rolling the dice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="421" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2001" bodyend="2025"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a7b07579e424f37298496eefaae2390e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createTextTurnInfo</definition>
        <argsstring>()</argsstring>
        <name>createTextTurnInfo</name>
        <briefdescription>
<para>Creates text for displaying turn information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="426" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2027" bodyend="2033"/>
        <references refid="class_monopoly_game_engine_1a8a92e457e602fcf6a0e1dbd2dbccc856" compoundref="_monopoly_game_engine_8cc" startline="1950" endline="1953">addText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a73d985dc04d394ec469ee5d01e6b9a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createTextrolled_value</definition>
        <argsstring>()</argsstring>
        <name>createTextrolled_value</name>
        <briefdescription>
<para>Creates text for displaying the rolled dice value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="431" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2035" bodyend="2041"/>
        <references refid="class_monopoly_game_engine_1a8a92e457e602fcf6a0e1dbd2dbccc856" compoundref="_monopoly_game_engine_8cc" startline="1950" endline="1953">addText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a32c0ecaa71c51cdaae65178836af75b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createTextPlayersInfo</definition>
        <argsstring>()</argsstring>
        <name>createTextPlayersInfo</name>
        <briefdescription>
<para>Creates text for displaying players&apos; information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="436" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2043" bodyend="2088"/>
        <references refid="class_monopoly_game_engine_1a8a92e457e602fcf6a0e1dbd2dbccc856" compoundref="_monopoly_game_engine_8cc" startline="1950" endline="1953">addText</references>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a153294a850e9c8d42d35e95eec1de17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::updateTextPlayersInfo</definition>
        <argsstring>()</argsstring>
        <name>updateTextPlayersInfo</name>
        <briefdescription>
<para>Updates the text displaying players&apos; information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="441" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2090" bodyend="2113"/>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a9655bc29084d61fe0503ec16272630e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createTextBiddedProperty</definition>
        <argsstring>()</argsstring>
        <name>createTextBiddedProperty</name>
        <briefdescription>
<para>Creates text for displaying information about the bidded property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="446" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2115" bodyend="2121"/>
        <references refid="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" compoundref="_monopoly_game_engine_8cc" startline="1960" endline="1963">addAuctionText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a932aa1b22c5b339c568f8ea34749b1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createTextBidderInfo</definition>
        <argsstring>()</argsstring>
        <name>createTextBidderInfo</name>
        <briefdescription>
<para>Creates text for displaying information about the bidder. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="451" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2123" bodyend="2129"/>
        <references refid="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" compoundref="_monopoly_game_engine_8cc" startline="1960" endline="1963">addAuctionText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a04528f2dbaa4725b4430bdef63b2d9d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createTextHighestBidInfo</definition>
        <argsstring>()</argsstring>
        <name>createTextHighestBidInfo</name>
        <briefdescription>
<para>Creates text for displaying the highest bid in an auction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="456" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2131" bodyend="2137"/>
        <references refid="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" compoundref="_monopoly_game_engine_8cc" startline="1960" endline="1963">addAuctionText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac4396e37a67a062d796345afc0642af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createTextLeadingBidderInfo</definition>
        <argsstring>()</argsstring>
        <name>createTextLeadingBidderInfo</name>
        <briefdescription>
<para>Creates text for displaying information about the leading bidder in an auction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="461" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2139" bodyend="2145"/>
        <references refid="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" compoundref="_monopoly_game_engine_8cc" startline="1960" endline="1963">addAuctionText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a555cc64819179c99afb2b39b58599074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createCurrentOfferBidderInfo</definition>
        <argsstring>()</argsstring>
        <name>createCurrentOfferBidderInfo</name>
        <briefdescription>
<para>Creates text for displaying the current offer in an auction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="466" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2147" bodyend="2153"/>
        <references refid="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" compoundref="_monopoly_game_engine_8cc" startline="1960" endline="1963">addAuctionText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a742de8013c1466a6913bb5f5eceafeb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonBuyResign</definition>
        <argsstring>()</argsstring>
        <name>createButtonBuyResign</name>
        <briefdescription>
<para>Creates a button for buying or resigning from a property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="471" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2155" bodyend="2194"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a6a7786536439ae5af3c53d896b0a9a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonNextProperty</definition>
        <argsstring>()</argsstring>
        <name>createButtonNextProperty</name>
        <briefdescription>
<para>Creates a button for moving to the next property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="476" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2196" bodyend="2219"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aa54fdcd0727761f010c096435dd40999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonPerviousProperty</definition>
        <argsstring>()</argsstring>
        <name>createButtonPerviousProperty</name>
        <briefdescription>
<para>Creates a button for moving to the previous property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="481" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2221" bodyend="2244"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1abbda29a495969e795d71c3a5d215b547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonsBuySellHouseHotel</definition>
        <argsstring>()</argsstring>
        <name>createButtonsBuySellHouseHotel</name>
        <briefdescription>
<para>Creates buttons for buying, selling houses, and hotels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="486" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2246" bodyend="2327"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1a8a92e457e602fcf6a0e1dbd2dbccc856" compoundref="_monopoly_game_engine_8cc" startline="1950" endline="1953">addText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af7a1b759d097257097926ed7fd60da14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonsBankrupt</definition>
        <argsstring>()</argsstring>
        <name>createButtonsBankrupt</name>
        <briefdescription>
<para>Creates buttons for handling bankruptcy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="491" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2329" bodyend="2352"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a525ceed24c6db4fd8823fb1af27ba24b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonsNextTurn</definition>
        <argsstring>()</argsstring>
        <name>createButtonsNextTurn</name>
        <briefdescription>
<para>Creates buttons for moving to the next turn. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="496" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2354" bodyend="2378"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ae9772861221c6ce195b7b63122bf5523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonsJailPay</definition>
        <argsstring>()</argsstring>
        <name>createButtonsJailPay</name>
        <briefdescription>
<para>Creates buttons for handling actions related to the jail (paying to get out). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="501" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2380" bodyend="2405"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a41effaad0143e79955701cff92b2620f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createAuctionOfferButtons</definition>
        <argsstring>()</argsstring>
        <name>createAuctionOfferButtons</name>
        <briefdescription>
<para>Creates buttons for handling auction offers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="506" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2407" bodyend="2542"/>
        <references refid="class_monopoly_game_engine_1a653ae4bf65d14a524938058081a2f12d" compoundref="_monopoly_game_engine_8cc" startline="1955" endline="1958">addAuctionButton</references>
        <references refid="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" compoundref="_monopoly_game_engine_8cc" startline="1960" endline="1963">addAuctionText</references>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a8237eb4fd279a8f4b094c14987ea37a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createAuctionBidButton</definition>
        <argsstring>()</argsstring>
        <name>createAuctionBidButton</name>
        <briefdescription>
<para>Creates a button for participating in an auction by bidding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="511" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2544" bodyend="2569"/>
        <references refid="class_monopoly_game_engine_1a653ae4bf65d14a524938058081a2f12d" compoundref="_monopoly_game_engine_8cc" startline="1955" endline="1958">addAuctionButton</references>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a3fc21384392435cdfcab356f98d5a838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createAuctionResignButton</definition>
        <argsstring>()</argsstring>
        <name>createAuctionResignButton</name>
        <briefdescription>
<para>Creates a button for resigning from an auction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="516" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2571" bodyend="2597"/>
        <references refid="class_monopoly_game_engine_1a653ae4bf65d14a524938058081a2f12d" compoundref="_monopoly_game_engine_8cc" startline="1955" endline="1958">addAuctionButton</references>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a59d448ed643e21447ac85cdfeea1fa1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createButtonWithdraw</definition>
        <argsstring>()</argsstring>
        <name>createButtonWithdraw</name>
        <briefdescription>
<para>Creates a button for withdrawing from the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="521" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2599" bodyend="2622"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af61f87c35e7969f4665091d80007a8dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createMortagingButton</definition>
        <argsstring>()</argsstring>
        <name>createMortagingButton</name>
        <briefdescription>
<para>Creates buttons for mortgaging properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="526" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2664" bodyend="2704"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3afd6a0e4343048b10646dd2976cc5ad18" compoundref="main_8h" startline="96">IDLE</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a746b88ee3a606c98cfa368192c1a34e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createResultScreenStuff</definition>
        <argsstring>()</argsstring>
        <name>createResultScreenStuff</name>
        <briefdescription>
<para>Creates various elements for the result screen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="531" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2624" bodyend="2637"/>
        <references refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" compoundref="_monopoly_game_engine_8cc" startline="1945" endline="1948">addButton</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="main_8h_1afc8403f5b733fde41aeaff7c853df0c3a25009c3a00abcaa12abf0f04eb8d5b67" compoundref="main_8h" startline="99">RETURN_TO_MAIN_MENU</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1abdc99bcb328742800042bcbbfe1bc3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::updateResultScreenStuff</definition>
        <argsstring>()</argsstring>
        <name>updateResultScreenStuff</name>
        <briefdescription>
<para>Updates elements on the result screen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="536" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2639" bodyend="2662"/>
        <references refid="class_monopoly_game_engine_1a2b1fb71410fb88b1cde5077f62fb82fd" compoundref="_monopoly_game_engine_8cc" startline="1965" endline="1967">getButtons</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a2056b74cb9e17d045b01b7e49db82afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::showPropertyData</definition>
        <argsstring>(unsigned int pos, bool is_property_shown_to_buy)</argsstring>
        <name>showPropertyData</name>
        <param>
          <type>unsigned int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_property_shown_to_buy</declname>
        </param>
        <briefdescription>
<para>Shows property data on the GUI based on the position and whether it is shown to buy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the property. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_property_shown_to_buy</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the property information is shown for buying. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="543" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="2714" bodyend="3063"/>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a1721e377912232cb891c4f9d8b96a59a" compoundref="main_8h" startline="138">FOUR_HOUSES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594beaf5d374fd66e430d41b08642d1197a585" compoundref="main_8h" startline="144">FOUR_STATIONS</references>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="class_field_1a2bca2e8d2cb8bfc9ebbc61f617e3e7b9" compoundref="_field_8cc" startline="60" endline="62">Field::getGraphicPath</references>
        <references refid="class_field_1a24552dc1bcb1f574ce8db0761c33790a" compoundref="_field_8cc" startline="68" endline="70">Field::getHeight</references>
        <references refid="class_street_field_1a51d31e674e5526536210d24ed5bdc2c2" compoundref="_field_8cc" startline="231" endline="233">StreetField::getHotelPrice</references>
        <references refid="class_street_field_1a812b99b2c3dc615a26f81756fa41aa51" compoundref="_field_8cc" startline="227" endline="229">StreetField::getHousePrice</references>
        <references refid="class_property_field_1a118e8dac5640ec978cbd14519e0880fe" compoundref="_field_8cc" startline="146" endline="148">PropertyField::getMortgage</references>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <references refid="class_property_field_1aafcf4b8fd5fb49a727cb564c0c99a3eb" compoundref="_field_8cc" startline="138" endline="140">PropertyField::getPrice</references>
        <references refid="class_utility_field_1a5476d4355c82780f3ec8d173513590ae" compoundref="_field_8cc" startline="274" endline="276">UtilityField::getRentMultipliers</references>
        <references refid="class_street_field_1af6ffa6777200808afa686a07a1be6e9a" compoundref="_field_8cc" startline="223" endline="225">StreetField::getRentValues</references>
        <references refid="class_station_field_1ae23e828cefa568b38ff525cd9db3b511" compoundref="_field_8cc" startline="266" endline="268">StationField::getRentValues</references>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="class_field_1ad5706e4c154214fe43db7ecc7a6b74ca" compoundref="_field_8cc" startline="64" endline="66">Field::getWidth</references>
        <references refid="main_8cc_1ab2e78c61905b4419fcc7b4cfc500fe85" compoundref="main_8cc" startline="18">height</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a9d02c50113762d50ac07c31528974579" compoundref="main_8h" startline="138">HOTEL</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3afbe39846abf8d0ca655daa4c5e6675f6" compoundref="main_8h" startline="138">NO_HOUSES</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3ae9309352dfb1c2542328bf77b979b796" compoundref="main_8h" startline="138">ONE_HOUSE</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea5abd12f5714ad8a5c78fbcfdd13d8363" compoundref="main_8h" startline="144">ONE_STATION</references>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113ae71bdf2240af02a5ef8ded8c01a8a692" compoundref="main_8h" startline="150">ONE_UTILITY</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a3cfedac7ca093a36b14fd248a3b8a5b4" compoundref="main_8h" startline="138">THREE_HOUSES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea4ee7c40343f7fc51e168ebb665d4865d" compoundref="main_8h" startline="144">THREE_STATIONS</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a0ab6dd54fe0c67ece897f56705db3e3f" compoundref="main_8h" startline="138">TWO_HOUESES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea324e5b4c78cf4a0c67ef4164dc635dc2" compoundref="main_8h" startline="144">TWO_STATIONS</references>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113afd679c479954ac2c4c7143bc5e45cb6d" compoundref="main_8h" startline="150">TWO_UTILITIES</references>
        <references refid="main_8cc_1aca34d28e3d8bcbcadb8edb4e3af24f8c" compoundref="main_8cc" startline="17">width</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a73ae5aa5598545a9b12264072a087364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::turnInfoTextShow</definition>
        <argsstring>()</argsstring>
        <name>turnInfoTextShow</name>
        <briefdescription>
<para>Displays text related to turn information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="548" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="183" bodyend="185"/>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Font &amp;</type>
        <definition>sf::Font &amp; MonopolyGameEngine::getFont</definition>
        <argsstring>()</argsstring>
        <name>getFont</name>
        <briefdescription>
<para>Returns the font used in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the font. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="554" column="10" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1941" bodyend="1943"/>
        <referencedby refid="class_monopoly_game_engine_1a8237eb4fd279a8f4b094c14987ea37a1" compoundref="_monopoly_game_engine_8cc" startline="2544" endline="2569">createAuctionBidButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a41effaad0143e79955701cff92b2620f" compoundref="_monopoly_game_engine_8cc" startline="2407" endline="2542">createAuctionOfferButtons</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a3fc21384392435cdfcab356f98d5a838" compoundref="_monopoly_game_engine_8cc" startline="2571" endline="2597">createAuctionResignButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac8629f2abd1bf12cfc0af747d16c867f" compoundref="_monopoly_game_engine_8cc" startline="1895" endline="1909">createAvailableHousesHotelText</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a742de8013c1466a6913bb5f5eceafeb4" compoundref="_monopoly_game_engine_8cc" startline="2155" endline="2194">createButtonBuyResign</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6a7786536439ae5af3c53d896b0a9a71" compoundref="_monopoly_game_engine_8cc" startline="2196" endline="2219">createButtonNextProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aa54fdcd0727761f010c096435dd40999" compoundref="_monopoly_game_engine_8cc" startline="2221" endline="2244">createButtonPerviousProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ab7c6acc2b155fbdc1952280c494a05fe" compoundref="_monopoly_game_engine_8cc" startline="2001" endline="2025">createButtonRollDice</referencedby>
        <referencedby refid="class_monopoly_game_engine_1af7a1b759d097257097926ed7fd60da14" compoundref="_monopoly_game_engine_8cc" startline="2329" endline="2352">createButtonsBankrupt</referencedby>
        <referencedby refid="class_monopoly_game_engine_1abbda29a495969e795d71c3a5d215b547" compoundref="_monopoly_game_engine_8cc" startline="2246" endline="2327">createButtonsBuySellHouseHotel</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ae9772861221c6ce195b7b63122bf5523" compoundref="_monopoly_game_engine_8cc" startline="2380" endline="2405">createButtonsJailPay</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a525ceed24c6db4fd8823fb1af27ba24b" compoundref="_monopoly_game_engine_8cc" startline="2354" endline="2378">createButtonsNextTurn</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a59d448ed643e21447ac85cdfeea1fa1b" compoundref="_monopoly_game_engine_8cc" startline="2599" endline="2622">createButtonWithdraw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a555cc64819179c99afb2b39b58599074" compoundref="_monopoly_game_engine_8cc" startline="2147" endline="2153">createCurrentOfferBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1af61f87c35e7969f4665091d80007a8dd" compoundref="_monopoly_game_engine_8cc" startline="2664" endline="2704">createMortagingButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a746b88ee3a606c98cfa368192c1a34e9" compoundref="_monopoly_game_engine_8cc" startline="2624" endline="2637">createResultScreenStuff</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a9655bc29084d61fe0503ec16272630e6" compoundref="_monopoly_game_engine_8cc" startline="2115" endline="2121">createTextBiddedProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a932aa1b22c5b339c568f8ea34749b1fb" compoundref="_monopoly_game_engine_8cc" startline="2123" endline="2129">createTextBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a04528f2dbaa4725b4430bdef63b2d9d0" compoundref="_monopoly_game_engine_8cc" startline="2131" endline="2137">createTextHighestBidInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac4396e37a67a062d796345afc0642af2" compoundref="_monopoly_game_engine_8cc" startline="2139" endline="2145">createTextLeadingBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a32c0ecaa71c51cdaae65178836af75b0" compoundref="_monopoly_game_engine_8cc" startline="2043" endline="2088">createTextPlayersInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a73d985dc04d394ec469ee5d01e6b9a89" compoundref="_monopoly_game_engine_8cc" startline="2035" endline="2041">createTextrolled_value</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a7b07579e424f37298496eefaae2390e1" compoundref="_monopoly_game_engine_8cc" startline="2027" endline="2033">createTextTurnInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a838f18e88cd79f8cce47dd0dbb42ae3e" compoundref="_monopoly_game_engine_8cc" startline="3113" endline="3135">getPropertyNameToDraw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a2056b74cb9e17d045b01b7e49db82afe" compoundref="_monopoly_game_engine_8cc" startline="2714" endline="3063">showPropertyData</referencedby>
        <referencedby refid="class_monopoly_game_engine_1abdc99bcb328742800042bcbbfe1bc3f7" compoundref="_monopoly_game_engine_8cc" startline="2639" endline="2662">updateResultScreenStuff</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::getFontSize</definition>
        <argsstring>() const</argsstring>
        <name>getFontSize</name>
        <briefdescription>
<para>Returns the font size used in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Font size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="560" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="179" bodyend="181"/>
        <referencedby refid="class_monopoly_game_engine_1a8237eb4fd279a8f4b094c14987ea37a1" compoundref="_monopoly_game_engine_8cc" startline="2544" endline="2569">createAuctionBidButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a41effaad0143e79955701cff92b2620f" compoundref="_monopoly_game_engine_8cc" startline="2407" endline="2542">createAuctionOfferButtons</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a3fc21384392435cdfcab356f98d5a838" compoundref="_monopoly_game_engine_8cc" startline="2571" endline="2597">createAuctionResignButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac8629f2abd1bf12cfc0af747d16c867f" compoundref="_monopoly_game_engine_8cc" startline="1895" endline="1909">createAvailableHousesHotelText</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a742de8013c1466a6913bb5f5eceafeb4" compoundref="_monopoly_game_engine_8cc" startline="2155" endline="2194">createButtonBuyResign</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6a7786536439ae5af3c53d896b0a9a71" compoundref="_monopoly_game_engine_8cc" startline="2196" endline="2219">createButtonNextProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aa54fdcd0727761f010c096435dd40999" compoundref="_monopoly_game_engine_8cc" startline="2221" endline="2244">createButtonPerviousProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ab7c6acc2b155fbdc1952280c494a05fe" compoundref="_monopoly_game_engine_8cc" startline="2001" endline="2025">createButtonRollDice</referencedby>
        <referencedby refid="class_monopoly_game_engine_1af7a1b759d097257097926ed7fd60da14" compoundref="_monopoly_game_engine_8cc" startline="2329" endline="2352">createButtonsBankrupt</referencedby>
        <referencedby refid="class_monopoly_game_engine_1abbda29a495969e795d71c3a5d215b547" compoundref="_monopoly_game_engine_8cc" startline="2246" endline="2327">createButtonsBuySellHouseHotel</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ae9772861221c6ce195b7b63122bf5523" compoundref="_monopoly_game_engine_8cc" startline="2380" endline="2405">createButtonsJailPay</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a525ceed24c6db4fd8823fb1af27ba24b" compoundref="_monopoly_game_engine_8cc" startline="2354" endline="2378">createButtonsNextTurn</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a59d448ed643e21447ac85cdfeea1fa1b" compoundref="_monopoly_game_engine_8cc" startline="2599" endline="2622">createButtonWithdraw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a555cc64819179c99afb2b39b58599074" compoundref="_monopoly_game_engine_8cc" startline="2147" endline="2153">createCurrentOfferBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1af61f87c35e7969f4665091d80007a8dd" compoundref="_monopoly_game_engine_8cc" startline="2664" endline="2704">createMortagingButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a746b88ee3a606c98cfa368192c1a34e9" compoundref="_monopoly_game_engine_8cc" startline="2624" endline="2637">createResultScreenStuff</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a9655bc29084d61fe0503ec16272630e6" compoundref="_monopoly_game_engine_8cc" startline="2115" endline="2121">createTextBiddedProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a932aa1b22c5b339c568f8ea34749b1fb" compoundref="_monopoly_game_engine_8cc" startline="2123" endline="2129">createTextBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a04528f2dbaa4725b4430bdef63b2d9d0" compoundref="_monopoly_game_engine_8cc" startline="2131" endline="2137">createTextHighestBidInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac4396e37a67a062d796345afc0642af2" compoundref="_monopoly_game_engine_8cc" startline="2139" endline="2145">createTextLeadingBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a32c0ecaa71c51cdaae65178836af75b0" compoundref="_monopoly_game_engine_8cc" startline="2043" endline="2088">createTextPlayersInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a73d985dc04d394ec469ee5d01e6b9a89" compoundref="_monopoly_game_engine_8cc" startline="2035" endline="2041">createTextrolled_value</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a7b07579e424f37298496eefaae2390e1" compoundref="_monopoly_game_engine_8cc" startline="2027" endline="2033">createTextTurnInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a838f18e88cd79f8cce47dd0dbb42ae3e" compoundref="_monopoly_game_engine_8cc" startline="3113" endline="3135">getPropertyNameToDraw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a2056b74cb9e17d045b01b7e49db82afe" compoundref="_monopoly_game_engine_8cc" startline="2714" endline="3063">showPropertyData</referencedby>
        <referencedby refid="class_monopoly_game_engine_1abdc99bcb328742800042bcbbfe1bc3f7" compoundref="_monopoly_game_engine_8cc" startline="2639" endline="2662">updateResultScreenStuff</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a034d5e74627aa03da60bbcc92d671a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::setFont</definition>
        <argsstring>(sf::Font font)</argsstring>
        <name>setFont</name>
        <param>
          <type>sf::Font</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Sets the font to be used in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>font</parametername>
</parameternamelist>
<parameterdescription>
<para>Font to be set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="566" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1937" bodyend="1939"/>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::addButton</definition>
        <argsstring>(std::shared_ptr&lt; Button &gt; button_tmp)</argsstring>
        <name>addButton</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
          <declname>button_tmp</declname>
        </param>
        <briefdescription>
<para>Adds a button to the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button_tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the button to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="572" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1945" bodyend="1948"/>
        <referencedby refid="class_monopoly_game_engine_1a8237eb4fd279a8f4b094c14987ea37a1" compoundref="_monopoly_game_engine_8cc" startline="2544" endline="2569">createAuctionBidButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a41effaad0143e79955701cff92b2620f" compoundref="_monopoly_game_engine_8cc" startline="2407" endline="2542">createAuctionOfferButtons</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a3fc21384392435cdfcab356f98d5a838" compoundref="_monopoly_game_engine_8cc" startline="2571" endline="2597">createAuctionResignButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a742de8013c1466a6913bb5f5eceafeb4" compoundref="_monopoly_game_engine_8cc" startline="2155" endline="2194">createButtonBuyResign</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6a7786536439ae5af3c53d896b0a9a71" compoundref="_monopoly_game_engine_8cc" startline="2196" endline="2219">createButtonNextProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aa54fdcd0727761f010c096435dd40999" compoundref="_monopoly_game_engine_8cc" startline="2221" endline="2244">createButtonPerviousProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ab7c6acc2b155fbdc1952280c494a05fe" compoundref="_monopoly_game_engine_8cc" startline="2001" endline="2025">createButtonRollDice</referencedby>
        <referencedby refid="class_monopoly_game_engine_1af7a1b759d097257097926ed7fd60da14" compoundref="_monopoly_game_engine_8cc" startline="2329" endline="2352">createButtonsBankrupt</referencedby>
        <referencedby refid="class_monopoly_game_engine_1abbda29a495969e795d71c3a5d215b547" compoundref="_monopoly_game_engine_8cc" startline="2246" endline="2327">createButtonsBuySellHouseHotel</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ae9772861221c6ce195b7b63122bf5523" compoundref="_monopoly_game_engine_8cc" startline="2380" endline="2405">createButtonsJailPay</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a525ceed24c6db4fd8823fb1af27ba24b" compoundref="_monopoly_game_engine_8cc" startline="2354" endline="2378">createButtonsNextTurn</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a59d448ed643e21447ac85cdfeea1fa1b" compoundref="_monopoly_game_engine_8cc" startline="2599" endline="2622">createButtonWithdraw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1af61f87c35e7969f4665091d80007a8dd" compoundref="_monopoly_game_engine_8cc" startline="2664" endline="2704">createMortagingButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a746b88ee3a606c98cfa368192c1a34e9" compoundref="_monopoly_game_engine_8cc" startline="2624" endline="2637">createResultScreenStuff</referencedby>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a8a92e457e602fcf6a0e1dbd2dbccc856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::addText</definition>
        <argsstring>(std::shared_ptr&lt; sf::Text &gt; text_tmp)</argsstring>
        <name>addText</name>
        <param>
          <type>std::shared_ptr&lt; sf::Text &gt;</type>
          <declname>text_tmp</declname>
        </param>
        <briefdescription>
<para>Adds text to the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text_tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the text to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="578" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1950" bodyend="1953"/>
        <referencedby refid="class_monopoly_game_engine_1ac8629f2abd1bf12cfc0af747d16c867f" compoundref="_monopoly_game_engine_8cc" startline="1895" endline="1909">createAvailableHousesHotelText</referencedby>
        <referencedby refid="class_monopoly_game_engine_1abbda29a495969e795d71c3a5d215b547" compoundref="_monopoly_game_engine_8cc" startline="2246" endline="2327">createButtonsBuySellHouseHotel</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a32c0ecaa71c51cdaae65178836af75b0" compoundref="_monopoly_game_engine_8cc" startline="2043" endline="2088">createTextPlayersInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a73d985dc04d394ec469ee5d01e6b9a89" compoundref="_monopoly_game_engine_8cc" startline="2035" endline="2041">createTextrolled_value</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a7b07579e424f37298496eefaae2390e1" compoundref="_monopoly_game_engine_8cc" startline="2027" endline="2033">createTextTurnInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a653ae4bf65d14a524938058081a2f12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::addAuctionButton</definition>
        <argsstring>(std::shared_ptr&lt; Button &gt; button_tmp)</argsstring>
        <name>addAuctionButton</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt;</type>
          <declname>button_tmp</declname>
        </param>
        <briefdescription>
<para>Adds an auction button to the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button_tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the auction button to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="584" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1955" bodyend="1958"/>
        <referencedby refid="class_monopoly_game_engine_1a8237eb4fd279a8f4b094c14987ea37a1" compoundref="_monopoly_game_engine_8cc" startline="2544" endline="2569">createAuctionBidButton</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a41effaad0143e79955701cff92b2620f" compoundref="_monopoly_game_engine_8cc" startline="2407" endline="2542">createAuctionOfferButtons</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a3fc21384392435cdfcab356f98d5a838" compoundref="_monopoly_game_engine_8cc" startline="2571" endline="2597">createAuctionResignButton</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::addAuctionText</definition>
        <argsstring>(std::shared_ptr&lt; sf::Text &gt; text_tmp)</argsstring>
        <name>addAuctionText</name>
        <param>
          <type>std::shared_ptr&lt; sf::Text &gt;</type>
          <declname>text_tmp</declname>
        </param>
        <briefdescription>
<para>Adds auction text to the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text_tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the auction text to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="590" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1960" bodyend="1963"/>
        <referencedby refid="class_monopoly_game_engine_1a41effaad0143e79955701cff92b2620f" compoundref="_monopoly_game_engine_8cc" startline="2407" endline="2542">createAuctionOfferButtons</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a555cc64819179c99afb2b39b58599074" compoundref="_monopoly_game_engine_8cc" startline="2147" endline="2153">createCurrentOfferBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a9655bc29084d61fe0503ec16272630e6" compoundref="_monopoly_game_engine_8cc" startline="2115" endline="2121">createTextBiddedProperty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a932aa1b22c5b339c568f8ea34749b1fb" compoundref="_monopoly_game_engine_8cc" startline="2123" endline="2129">createTextBidderInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a04528f2dbaa4725b4430bdef63b2d9d0" compoundref="_monopoly_game_engine_8cc" startline="2131" endline="2137">createTextHighestBidInfo</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac4396e37a67a062d796345afc0642af2" compoundref="_monopoly_game_engine_8cc" startline="2139" endline="2145">createTextLeadingBidderInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a2b1fb71410fb88b1cde5077f62fb82fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Button &gt; &gt; &amp; MonopolyGameEngine::getButtons</definition>
        <argsstring>()</argsstring>
        <name>getButtons</name>
        <briefdescription>
<para>Returns a vector of pointers to buttons in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to buttons. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="596" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1965" bodyend="1967"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1abdc99bcb328742800042bcbbfe1bc3f7" compoundref="_monopoly_game_engine_8cc" startline="2639" endline="2662">updateResultScreenStuff</referencedby>
        <referencedby refid="class_game_screen_1a140fce95914abbf9efac4ad6bb0c98dc" compoundref="_game_screen_8cc" startline="68" endline="98">GameScreen::worker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a3c28362ff3b68d93dec6dae6c0304641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; MonopolyGameEngine::getTexts</definition>
        <argsstring>()</argsstring>
        <name>getTexts</name>
        <briefdescription>
<para>Returns a vector of pointers to text elements in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to text elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="602" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1969" bodyend="1971"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1afe06604028fa9abf53bae7fc6a909ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_button" kindref="compound">Button</ref> &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Button &gt; &gt; &amp; MonopolyGameEngine::getAuctionButtons</definition>
        <argsstring>()</argsstring>
        <name>getAuctionButtons</name>
        <briefdescription>
<para>Returns a vector of pointers to auction buttons in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to auction buttons. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="608" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1973" bodyend="1975"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1accb94fe0ad5bc9ce44f3dda3c91a4ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; MonopolyGameEngine::getAuctionTexts</definition>
        <argsstring>()</argsstring>
        <name>getAuctionTexts</name>
        <briefdescription>
<para>Returns a vector of pointers to auction text elements in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to auction text elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="614" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1977" bodyend="1979"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af7cde31ae39d022e3d5f8be45d235ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; MonopolyGameEngine::getResultTexts</definition>
        <argsstring>()</argsstring>
        <name>getResultTexts</name>
        <briefdescription>
<para>Returns a vector of pointers to text elements used in the result screen. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to result screen text elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="620" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1981" bodyend="1983"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a98b4a5fdbf5e68ab062cd677ccb24f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite &amp;</type>
        <definition>sf::Sprite &amp; MonopolyGameEngine::getPropertyDataSprite</definition>
        <argsstring>()</argsstring>
        <name>getPropertyDataSprite</name>
        <briefdescription>
<para>Returns the sprite representing property data in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the property data sprite. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="626" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1985" bodyend="1987"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac70b0b504fb2271353038a59c6604691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; MonopolyGameEngine::getPropertyDataTexts</definition>
        <argsstring>()</argsstring>
        <name>getPropertyDataTexts</name>
        <briefdescription>
<para>Returns a vector of pointers to text elements representing property data in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to property data text elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="632" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1989" bodyend="1991"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac21527f42cd63f19528e7ab3f51363db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite &amp;</type>
        <definition>sf::Sprite &amp; MonopolyGameEngine::getAllPropertyDataSprite</definition>
        <argsstring>()</argsstring>
        <name>getAllPropertyDataSprite</name>
        <briefdescription>
<para>Returns the sprite representing all property data in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the all property data sprite. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="638" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1993" bodyend="1995"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aaf046cdf2a5b7bd05e1f8272b510de0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; sf::Text &gt; &gt; &amp; MonopolyGameEngine::getAllPropertyDataTexts</definition>
        <argsstring>()</argsstring>
        <name>getAllPropertyDataTexts</name>
        <briefdescription>
<para>Returns a vector of pointers to text elements representing all property data in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to all property data text elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="644" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1997" bodyend="1999"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a19263d676193f65b54209020dfdb928e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_notification_wall" kindref="compound">NotificationWall</ref> &amp;</type>
        <definition>NotificationWall &amp; MonopolyGameEngine::getNotificationsWall</definition>
        <argsstring>()</argsstring>
        <name>getNotificationsWall</name>
        <briefdescription>
<para>Returns the notification wall used in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the notification wall. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="650" column="18" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3093" bodyend="3095"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a838f18e88cd79f8cce47dd0dbb42ae3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Text</type>
        <definition>sf::Text MonopolyGameEngine::getPropertyNameToDraw</definition>
        <argsstring>(sf::Text text, sf::Sprite &amp;sprite, float rotation)</argsstring>
        <name>getPropertyNameToDraw</name>
        <param>
          <type>sf::Text</type>
          <declname>text</declname>
        </param>
        <param>
          <type>sf::Sprite &amp;</type>
          <declname>sprite</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Gets the text suitable for drawing a property name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Original text to be drawn. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sprite</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the sprite associated with the property. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation angle of the text. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Modified text for drawing. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="659" column="10" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3113" bodyend="3135"/>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ab55601ce0bb0b73719a5376723daa774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Texture &amp;</type>
        <definition>sf::Texture &amp; MonopolyGameEngine::getHouseTexture</definition>
        <argsstring>()</argsstring>
        <name>getHouseTexture</name>
        <briefdescription>
<para>Returns the texture of the house used in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the house texture. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="665" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3211" bodyend="3213"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a2831ee2158d97ff536fd0fee57e338e2" compoundref="_monopoly_game_engine_8cc" startline="3267" endline="3296">getHotelSprite</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a64330a6b6eea093a923675e749c00807" compoundref="_monopoly_game_engine_8cc" startline="3223" endline="3265">getHouseSprite</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a56b2b17c31119dac5b1933571bac35f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Texture &amp;</type>
        <definition>sf::Texture &amp; MonopolyGameEngine::getHotelTexture</definition>
        <argsstring>()</argsstring>
        <name>getHotelTexture</name>
        <briefdescription>
<para>Returns the texture of the hotel used in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the hotel texture. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="671" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3215" bodyend="3217"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ad0390270b455b07db016a389c89df8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f &amp;</type>
        <definition>sf::Vector2f &amp; MonopolyGameEngine::getHouseSize</definition>
        <argsstring>()</argsstring>
        <name>getHouseSize</name>
        <briefdescription>
<para>Returns the size of a house in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the house size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="677" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3219" bodyend="3221"/>
        <referencedby refid="class_monopoly_game_engine_1a2831ee2158d97ff536fd0fee57e338e2" compoundref="_monopoly_game_engine_8cc" startline="3267" endline="3296">getHotelSprite</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a64330a6b6eea093a923675e749c00807" compoundref="_monopoly_game_engine_8cc" startline="3223" endline="3265">getHouseSprite</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1abc237772db36ef7096d874ac7bf15076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createPlayers</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; Player &gt;&gt; &amp;players_from_game_engine)</argsstring>
        <name>createPlayers</name>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;&gt; &amp;</type>
          <declname>players_from_game_engine</declname>
        </param>
        <briefdescription>
<para>Creates player objects based on input vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>players_from_game_engine</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of pointers to players. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="684" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="42" bodyend="108"/>
        <references refid="class_field_1a24552dc1bcb1f574ce8db0761c33790a" compoundref="_field_8cc" startline="68" endline="70">Field::getHeight</references>
        <references refid="class_field_1ad5706e4c154214fe43db7ecc7a6b74ca" compoundref="_field_8cc" startline="64" endline="66">Field::getWidth</references>
        <references refid="class_player_1ab1032df37bafe0a30acadb7bb1ccb97a" compoundref="_player_8cc" startline="163" endline="165">Player::setAiLevel</references>
        <references refid="class_player_1aec0b2d2447f555e247ac01a54a15d77f" compoundref="_player_8cc" startline="121" endline="141">Player::setId</references>
        <references refid="class_player_1adbcc2bba53e6bb2837d763eef79edff9" compoundref="_player_8cc" startline="155" endline="157">Player::setIsAi</references>
        <references refid="class_ai_player_1a8deec5aebde9d29c2363837aea19748f" compoundref="_player_8cc" startline="307" endline="309">AiPlayer::setNeuralNetwork</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac6f1dd50f3c5eecc6ba2872a1b895fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::clearPlayers</definition>
        <argsstring>()</argsstring>
        <name>clearPlayers</name>
        <briefdescription>
<para>Clears player objects from the game. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="689" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="110" bodyend="112"/>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a01c8f3df78160a7b8719e1ad06d9c239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createBoard</definition>
        <argsstring>()</argsstring>
        <name>createBoard</name>
        <briefdescription>
<para>Creates the game board. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="694" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="38" bodyend="40"/>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aca3157b9d922346e32ba8777f0b439e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::clearBoard</definition>
        <argsstring>()</argsstring>
        <name>clearBoard</name>
        <briefdescription>
<para>Clears the game board. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="699" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_board" kindref="compound">Board</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Board &gt; MonopolyGameEngine::getBoard</definition>
        <argsstring>()</argsstring>
        <name>getBoard</name>
        <briefdescription>
<para>Returns a pointer to the game board. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to the game board. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="705" column="17" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="118" bodyend="120"/>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a2af1706f23548c8ad118133badfc0160" compoundref="_monopoly_game_engine_8cc" startline="487" endline="535">calculateRent</referencedby>
        <referencedby refid="class_monopoly_game_engine_1afd604c9fd373fa220ebe04ff9d5f191b" compoundref="_monopoly_game_engine_8cc" startline="467" endline="485">colorGroupEmpty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a32c0ecaa71c51cdaae65178836af75b0" compoundref="_monopoly_game_engine_8cc" startline="2043" endline="2088">createTextPlayersInfo</referencedby>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aaf7f625f32dc53f7413236a79afaf6d5" compoundref="_monopoly_game_engine_8cc" startline="398" endline="415">isBuildingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1afaf31ce9d8aaef4b36bbefe9b4b72f78" compoundref="_monopoly_game_engine_8cc" startline="417" endline="431">isDestroyingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a34646774679d5ef5e9bbc6317953c7fa" compoundref="_monopoly_game_engine_8cc" startline="433" endline="450">isHotelBuildingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac01307d6ae292277aa3caf5855955a8c" compoundref="_monopoly_game_engine_8cc" startline="452" endline="465">isHotelDestroyingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aa95037b493d8fb2294404944a14dcca4" compoundref="_monopoly_game_engine_8cc" startline="219" endline="374">performAuction</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a2056b74cb9e17d045b01b7e49db82afe" compoundref="_monopoly_game_engine_8cc" startline="2714" endline="3063">showPropertyData</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a153294a850e9c8d42d35e95eec1de17e" compoundref="_monopoly_game_engine_8cc" startline="2090" endline="2113">updateTextPlayersInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ab1be3d89016a48d4df0f8440a254e4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Player &gt; &gt; &amp; MonopolyGameEngine::getPlayers</definition>
        <argsstring>()</argsstring>
        <name>getPlayers</name>
        <briefdescription>
<para>Returns a vector of pointers to players in the game. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to players. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="711" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="122" bodyend="124"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1adac095bade2743a916480efc934911d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Player &gt; &gt; MonopolyGameEngine::getPlayersResult</definition>
        <argsstring>()</argsstring>
        <name>getPlayersResult</name>
        <briefdescription>
<para>Returns a vector of pointers to players based on game result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Vector of pointers to players. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="717" column="13" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="126" bodyend="128"/>
        <referencedby refid="class_game_screen_1a954ec5b6fb0da4ff4d6d3feccea9d4b5" compoundref="_game_screen_8cc" startline="307" endline="309">GameScreen::getPlayersResult</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ad6860ebdf586eff99b476ff529fb4e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::setplayer_index_turn</definition>
        <argsstring>(unsigned int indx)</argsstring>
        <name>setplayer_index_turn</name>
        <param>
          <type>unsigned int</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
<para>Sets the index of the player whose turn it is. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the player. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="723" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="130" bodyend="134"/>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a3eb8af1a66fd12f93da8072c3a2edfa8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="main_8h_1a1fbb23a4b2427b486453417312008cfb" kindref="member">TurnState</ref></type>
        <definition>TurnState MonopolyGameEngine::getTurnState</definition>
        <argsstring>() const</argsstring>
        <name>getTurnState</name>
        <briefdescription>
<para>Gets the current turn state. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current turn state. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="729" column="11" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="167" bodyend="169"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aa95963ea9455d6ac635d27eab779b6ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::setAuctionState</definition>
        <argsstring>(AuctionState new_state)</argsstring>
        <name>setAuctionState</name>
        <param>
          <type><ref refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3" kindref="member">AuctionState</ref></type>
          <declname>new_state</declname>
        </param>
        <briefdescription>
<para>Sets the state of the auction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_state</parametername>
</parameternamelist>
<parameterdescription>
<para>New state of the auction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="735" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="171" bodyend="173"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aa95037b493d8fb2294404944a14dcca4" compoundref="_monopoly_game_engine_8cc" startline="219" endline="374">performAuction</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac157740551b8c65aefd2f1563305406a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3" kindref="member">AuctionState</ref></type>
        <definition>AuctionState MonopolyGameEngine::getAuctionState</definition>
        <argsstring>()</argsstring>
        <name>getAuctionState</name>
        <briefdescription>
<para>Gets the current state of the auction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Current state of the auction. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="741" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="175" bodyend="177"/>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aa95037b493d8fb2294404944a14dcca4" compoundref="_monopoly_game_engine_8cc" startline="219" endline="374">performAuction</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ae2a4e228360bfceb91c7a5cd6803b0fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::getHouseCount</definition>
        <argsstring>()</argsstring>
        <name>getHouseCount</name>
        <briefdescription>
<para>Gets the count of houses available for purchase. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Count of houses. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="747" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="187" bodyend="189"/>
        <referencedby refid="class_monopoly_game_engine_1ac8629f2abd1bf12cfc0af747d16c867f" compoundref="_monopoly_game_engine_8cc" startline="1895" endline="1909">createAvailableHousesHotelText</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aaf7f625f32dc53f7413236a79afaf6d5" compoundref="_monopoly_game_engine_8cc" startline="398" endline="415">isBuildingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac01307d6ae292277aa3caf5855955a8c" compoundref="_monopoly_game_engine_8cc" startline="452" endline="465">isHotelDestroyingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ae9a8bf736199ef2e643f750be08b1bed" compoundref="_monopoly_game_engine_8cc" startline="1890" endline="1893">updateAvailableHousesHotelText</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a13906373d7ee42cd405154047d76b281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::getHotelCount</definition>
        <argsstring>()</argsstring>
        <name>getHotelCount</name>
        <briefdescription>
<para>Gets the count of hotels available for purchase. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Count of hotels. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="753" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="191" bodyend="193"/>
        <referencedby refid="class_monopoly_game_engine_1ac8629f2abd1bf12cfc0af747d16c867f" compoundref="_monopoly_game_engine_8cc" startline="1895" endline="1909">createAvailableHousesHotelText</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a34646774679d5ef5e9bbc6317953c7fa" compoundref="_monopoly_game_engine_8cc" startline="433" endline="450">isHotelBuildingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ae9a8bf736199ef2e643f750be08b1bed" compoundref="_monopoly_game_engine_8cc" startline="1890" endline="1893">updateAvailableHousesHotelText</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac85b2577a665a2510cbd65226d4ae790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::setHouseCount</definition>
        <argsstring>(unsigned int new_count)</argsstring>
        <name>setHouseCount</name>
        <param>
          <type>unsigned int</type>
          <declname>new_count</declname>
        </param>
        <briefdescription>
<para>Sets the count of houses available for purchase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_count</parametername>
</parameternamelist>
<parameterdescription>
<para>New count of houses. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="759" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="195" bodyend="197"/>
        <referencedby refid="class_monopoly_game_engine_1a398cb3a8d88d5cbec47ec7230408a59f" compoundref="_monopoly_game_engine_8cc" startline="203" endline="205">addHouses</referencedby>
        <referencedby refid="class_monopoly_game_engine_1afa5bca69b0ead2b54879815f37f06a1f" compoundref="_monopoly_game_engine_8cc" startline="207" endline="209">substractHouses</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aa705a9f340c99ddf656caec00e2ae107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::setHotelCount</definition>
        <argsstring>(unsigned int new_count)</argsstring>
        <name>setHotelCount</name>
        <param>
          <type>unsigned int</type>
          <declname>new_count</declname>
        </param>
        <briefdescription>
<para>Sets the count of hotels available for purchase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_count</parametername>
</parameternamelist>
<parameterdescription>
<para>New count of hotels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="765" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="199" bodyend="201"/>
        <referencedby refid="class_monopoly_game_engine_1a48c42eb3f7bdd1a2758f196d83f83cdd" compoundref="_monopoly_game_engine_8cc" startline="211" endline="213">addHotels</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aff717ed99341b6d5ead0f68553803738" compoundref="_monopoly_game_engine_8cc" startline="215" endline="217">substractHotels</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a398cb3a8d88d5cbec47ec7230408a59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::addHouses</definition>
        <argsstring>(unsigned int added_amount)</argsstring>
        <name>addHouses</name>
        <param>
          <type>unsigned int</type>
          <declname>added_amount</declname>
        </param>
        <briefdescription>
<para>Adds houses to the available count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>added_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="771" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="203" bodyend="205"/>
        <references refid="class_monopoly_game_engine_1ac85b2577a665a2510cbd65226d4ae790" compoundref="_monopoly_game_engine_8cc" startline="195" endline="197">setHouseCount</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1afa5bca69b0ead2b54879815f37f06a1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::substractHouses</definition>
        <argsstring>(unsigned int substracted_amount)</argsstring>
        <name>substractHouses</name>
        <param>
          <type>unsigned int</type>
          <declname>substracted_amount</declname>
        </param>
        <briefdescription>
<para>Subtracts houses from the available count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>substracted_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount to be subtracted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="777" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="207" bodyend="209"/>
        <references refid="class_monopoly_game_engine_1ac85b2577a665a2510cbd65226d4ae790" compoundref="_monopoly_game_engine_8cc" startline="195" endline="197">setHouseCount</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a48c42eb3f7bdd1a2758f196d83f83cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::addHotels</definition>
        <argsstring>(unsigned int added_amount)</argsstring>
        <name>addHotels</name>
        <param>
          <type>unsigned int</type>
          <declname>added_amount</declname>
        </param>
        <briefdescription>
<para>Adds hotels to the available count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>added_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="783" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="211" bodyend="213"/>
        <references refid="class_monopoly_game_engine_1aa705a9f340c99ddf656caec00e2ae107" compoundref="_monopoly_game_engine_8cc" startline="199" endline="201">setHotelCount</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aff717ed99341b6d5ead0f68553803738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::substractHotels</definition>
        <argsstring>(unsigned int substracted_amount)</argsstring>
        <name>substractHotels</name>
        <param>
          <type>unsigned int</type>
          <declname>substracted_amount</declname>
        </param>
        <briefdescription>
<para>Subtracts hotels from the available count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>substracted_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount to be subtracted. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="789" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="215" bodyend="217"/>
        <references refid="class_monopoly_game_engine_1aa705a9f340c99ddf656caec00e2ae107" compoundref="_monopoly_game_engine_8cc" startline="199" endline="201">setHotelCount</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aa95037b493d8fb2294404944a14dcca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::performAuction</definition>
        <argsstring>()</argsstring>
        <name>performAuction</name>
        <briefdescription>
<para>Performs the auction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="794" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="219" bodyend="374"/>
        <references refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3a1c0f067e43e3fe18cbcd1073bcd0848b" compoundref="_monopoly_game_engine_8h" startline="31">BIDDING</references>
        <references refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3aca114391980a4b8e57873b25c0e16b75" compoundref="_monopoly_game_engine_8h" startline="31">ENDING</references>
        <references refid="class_monopoly_game_engine_1ac157740551b8c65aefd2f1563305406a" compoundref="_monopoly_game_engine_8cc" startline="175" endline="177">getAuctionState</references>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_property_field_1aafcf4b8fd5fb49a727cb564c0c99a3eb" compoundref="_field_8cc" startline="138" endline="140">PropertyField::getPrice</references>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3a3f68f09b467e0062fc47370c7e961578" compoundref="_monopoly_game_engine_8h" startline="31">INITIALIZATION</references>
        <references refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3aace6aedb9800fa923394608e2fd6e511" compoundref="_monopoly_game_engine_8h" startline="31">NO_AUCTION</references>
        <references refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3a013bcca5bdca5ab04d8cc6f7b91cda21" compoundref="_monopoly_game_engine_8h" startline="31">PASS_BIDDING_TURN</references>
        <references refid="class_monopoly_game_engine_1aa95963ea9455d6ac635d27eab779b6ce" compoundref="_monopoly_game_engine_8cc" startline="171" endline="173">setAuctionState</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" compoundref="main_8h" startline="132">UTILITY</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1af6b0a0923148f7dc901195dccfdc7952" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::calculateGroupFieldsOwned</definition>
        <argsstring>(std::vector&lt; unsigned int &gt; player_fields, PropertyField &amp;field) const</argsstring>
        <name>calculateGroupFieldsOwned</name>
        <param>
          <type>std::vector&lt; unsigned int &gt;</type>
          <declname>player_fields</declname>
        </param>
        <param>
          <type><ref refid="class_property_field" kindref="compound">PropertyField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Calculates the number of group fields owned by a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player_fields</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of field positions owned by the player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Property field to check for group completion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of group fields owned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="802" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="386" bodyend="396"/>
        <references refid="class_property_field_1a676180ae8ad98644572c47787ea0a01f" compoundref="_field_8cc" startline="142" endline="144">PropertyField::getGroupMembers</references>
        <referencedby refid="class_monopoly_game_engine_1a2af1706f23548c8ad118133badfc0160" compoundref="_monopoly_game_engine_8cc" startline="487" endline="535">calculateRent</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::groupCompleted</definition>
        <argsstring>(std::vector&lt; unsigned int &gt; player_fields, PropertyField &amp;field) const</argsstring>
        <name>groupCompleted</name>
        <param>
          <type>std::vector&lt; unsigned int &gt;</type>
          <declname>player_fields</declname>
        </param>
        <param>
          <type><ref refid="class_property_field" kindref="compound">PropertyField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks if a group of properties is completed by a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>player_fields</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of field positions owned by the player. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Property field to check for group completion. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the group is completed, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="810" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="376" bodyend="384"/>
        <references refid="class_property_field_1a676180ae8ad98644572c47787ea0a01f" compoundref="_field_8cc" startline="142" endline="144">PropertyField::getGroupMembers</references>
        <referencedby refid="class_monopoly_game_engine_1a2af1706f23548c8ad118133badfc0160" compoundref="_monopoly_game_engine_8cc" startline="487" endline="535">calculateRent</referencedby>
        <referencedby refid="class_monopoly_game_engine_1afd604c9fd373fa220ebe04ff9d5f191b" compoundref="_monopoly_game_engine_8cc" startline="467" endline="485">colorGroupEmpty</referencedby>
        <referencedby refid="class_monopoly_game_engine_1aaf7f625f32dc53f7413236a79afaf6d5" compoundref="_monopoly_game_engine_8cc" startline="398" endline="415">isBuildingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1afaf31ce9d8aaef4b36bbefe9b4b72f78" compoundref="_monopoly_game_engine_8cc" startline="417" endline="431">isDestroyingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a34646774679d5ef5e9bbc6317953c7fa" compoundref="_monopoly_game_engine_8cc" startline="433" endline="450">isHotelBuildingLegal</referencedby>
        <referencedby refid="class_monopoly_game_engine_1ac01307d6ae292277aa3caf5855955a8c" compoundref="_monopoly_game_engine_8cc" startline="452" endline="465">isHotelDestroyingLegal</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1aaf7f625f32dc53f7413236a79afaf6d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::isBuildingLegal</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; builder, StreetField field)</argsstring>
        <name>isBuildingLegal</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type><ref refid="class_street_field" kindref="compound">StreetField</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks if building houses on a street is legal for a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_player" kindref="compound">Player</ref> attempting to build houses. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Street field to build houses on. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if building is legal, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="818" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="398" bodyend="415"/>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_property_field_1a676180ae8ad98644572c47787ea0a01f" compoundref="_field_8cc" startline="142" endline="144">PropertyField::getGroupMembers</references>
        <references refid="class_monopoly_game_engine_1ae2a4e228360bfceb91c7a5cd6803b0fd" compoundref="_monopoly_game_engine_8cc" startline="187" endline="189">getHouseCount</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_street_field_1a812b99b2c3dc615a26f81756fa41aa51" compoundref="_field_8cc" startline="227" endline="229">StreetField::getHousePrice</references>
        <references refid="class_property_field_1ac52da7b908a73ce329c1aff55f971bed" compoundref="_field_8cc" startline="150" endline="152">PropertyField::getIsMortgaged</references>
        <references refid="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" compoundref="_monopoly_game_engine_8cc" startline="376" endline="384">groupCompleted</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1afaf31ce9d8aaef4b36bbefe9b4b72f78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::isDestroyingLegal</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; builder, StreetField field)</argsstring>
        <name>isDestroyingLegal</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type><ref refid="class_street_field" kindref="compound">StreetField</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks if destroying houses on a street is legal for a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_player" kindref="compound">Player</ref> attempting to destroy houses. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Street field to destroy houses on. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if destroying is legal, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="826" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="417" bodyend="431"/>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_property_field_1a676180ae8ad98644572c47787ea0a01f" compoundref="_field_8cc" startline="142" endline="144">PropertyField::getGroupMembers</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_property_field_1ac52da7b908a73ce329c1aff55f971bed" compoundref="_field_8cc" startline="150" endline="152">PropertyField::getIsMortgaged</references>
        <references refid="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" compoundref="_monopoly_game_engine_8cc" startline="376" endline="384">groupCompleted</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a34646774679d5ef5e9bbc6317953c7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::isHotelBuildingLegal</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; builder, StreetField &amp;field)</argsstring>
        <name>isHotelBuildingLegal</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type><ref refid="class_street_field" kindref="compound">StreetField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks if building a hotel on a street is legal for a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_player" kindref="compound">Player</ref> attempting to build a hotel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Street field to build a hotel on. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if building a hotel is legal, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="834" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="433" bodyend="450"/>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_property_field_1a676180ae8ad98644572c47787ea0a01f" compoundref="_field_8cc" startline="142" endline="144">PropertyField::getGroupMembers</references>
        <references refid="class_monopoly_game_engine_1a13906373d7ee42cd405154047d76b281" compoundref="_monopoly_game_engine_8cc" startline="191" endline="193">getHotelCount</references>
        <references refid="class_street_field_1a51d31e674e5526536210d24ed5bdc2c2" compoundref="_field_8cc" startline="231" endline="233">StreetField::getHotelPrice</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_street_field_1a79785c76389d7bf9171797b9d1a16ebd" compoundref="_field_8cc" startline="239" endline="241">StreetField::getIsHotel</references>
        <references refid="class_property_field_1ac52da7b908a73ce329c1aff55f971bed" compoundref="_field_8cc" startline="150" endline="152">PropertyField::getIsMortgaged</references>
        <references refid="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" compoundref="_monopoly_game_engine_8cc" startline="376" endline="384">groupCompleted</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac01307d6ae292277aa3caf5855955a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::isHotelDestroyingLegal</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; builder, StreetField &amp;field)</argsstring>
        <name>isHotelDestroyingLegal</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>builder</declname>
        </param>
        <param>
          <type><ref refid="class_street_field" kindref="compound">StreetField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks if destroying a hotel on a street is legal for a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>builder</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_player" kindref="compound">Player</ref> attempting to destroy a hotel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Street field to destroy a hotel on. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if destroying a hotel is legal, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="842" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="452" bodyend="465"/>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_property_field_1a676180ae8ad98644572c47787ea0a01f" compoundref="_field_8cc" startline="142" endline="144">PropertyField::getGroupMembers</references>
        <references refid="class_monopoly_game_engine_1ae2a4e228360bfceb91c7a5cd6803b0fd" compoundref="_monopoly_game_engine_8cc" startline="187" endline="189">getHouseCount</references>
        <references refid="class_street_field_1a79785c76389d7bf9171797b9d1a16ebd" compoundref="_field_8cc" startline="239" endline="241">StreetField::getIsHotel</references>
        <references refid="class_property_field_1ac52da7b908a73ce329c1aff55f971bed" compoundref="_field_8cc" startline="150" endline="152">PropertyField::getIsMortgaged</references>
        <references refid="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" compoundref="_monopoly_game_engine_8cc" startline="376" endline="384">groupCompleted</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1afd604c9fd373fa220ebe04ff9d5f191b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::colorGroupEmpty</definition>
        <argsstring>(std::shared_ptr&lt; Player &gt; mortgaging, StreetField &amp;field)</argsstring>
        <name>colorGroupEmpty</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_player" kindref="compound">Player</ref> &gt;</type>
          <declname>mortgaging</declname>
        </param>
        <param>
          <type><ref refid="class_street_field" kindref="compound">StreetField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks if a color group is empty (no properties owned) for a player. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mortgaging</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_player" kindref="compound">Player</ref> attempting to mortgage properties. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Street field to check for a color group. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the color group is empty, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="850" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="467" bodyend="485"/>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_property_field_1a676180ae8ad98644572c47787ea0a01f" compoundref="_field_8cc" startline="142" endline="144">PropertyField::getGroupMembers</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" compoundref="_monopoly_game_engine_8cc" startline="376" endline="384">groupCompleted</references>
        <referencedby refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a64330a6b6eea093a923675e749c00807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite</type>
        <definition>sf::Sprite MonopolyGameEngine::getHouseSprite</definition>
        <argsstring>(StreetField &amp;field, unsigned int houses_number)</argsstring>
        <name>getHouseSprite</name>
        <param>
          <type><ref refid="class_street_field" kindref="compound">StreetField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>houses_number</declname>
        </param>
        <briefdescription>
<para>Gets the sprite for a house on a street. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Street field to get the house sprite for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>houses_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of houses on the street. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sprite of the house. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="858" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3223" bodyend="3265"/>
        <references refid="class_monopoly_game_engine_1ad0390270b455b07db016a389c89df8ea" compoundref="_monopoly_game_engine_8cc" startline="3219" endline="3221">getHouseSize</references>
        <references refid="class_monopoly_game_engine_1ab55601ce0bb0b73719a5376723daa774" compoundref="_monopoly_game_engine_8cc" startline="3211" endline="3213">getHouseTexture</references>
        <references refid="class_field_1a8b6e4fc0827f44e90449d6ad9a62dafd" compoundref="_field_8cc" startline="88" endline="90">Field::getPosition</references>
        <references refid="class_field_1a646e28cf7899eb73bd120e7e7f936633" compoundref="_field_8cc" startline="72" endline="74">Field::getRotation</references>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a2831ee2158d97ff536fd0fee57e338e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Sprite</type>
        <definition>sf::Sprite MonopolyGameEngine::getHotelSprite</definition>
        <argsstring>(StreetField &amp;field)</argsstring>
        <name>getHotelSprite</name>
        <param>
          <type><ref refid="class_street_field" kindref="compound">StreetField</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the sprite for a hotel on a street. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>Street field to get the hotel sprite for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sprite of the hotel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="865" column="12" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3267" bodyend="3296"/>
        <references refid="class_monopoly_game_engine_1ad0390270b455b07db016a389c89df8ea" compoundref="_monopoly_game_engine_8cc" startline="3219" endline="3221">getHouseSize</references>
        <references refid="class_monopoly_game_engine_1ab55601ce0bb0b73719a5376723daa774" compoundref="_monopoly_game_engine_8cc" startline="3211" endline="3213">getHouseTexture</references>
        <references refid="class_field_1a8b6e4fc0827f44e90449d6ad9a62dafd" compoundref="_field_8cc" startline="88" endline="90">Field::getPosition</references>
        <references refid="class_field_1a646e28cf7899eb73bd120e7e7f936633" compoundref="_field_8cc" startline="72" endline="74">Field::getRotation</references>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ac8629f2abd1bf12cfc0af747d16c867f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createAvailableHousesHotelText</definition>
        <argsstring>()</argsstring>
        <name>createAvailableHousesHotelText</name>
        <briefdescription>
<para>Creates text displaying the available count of houses and hotels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="870" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1895" bodyend="1909"/>
        <references refid="class_monopoly_game_engine_1a8a92e457e602fcf6a0e1dbd2dbccc856" compoundref="_monopoly_game_engine_8cc" startline="1950" endline="1953">addText</references>
        <references refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" compoundref="_monopoly_game_engine_8cc" startline="1941" endline="1943">getFont</references>
        <references refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" compoundref="_monopoly_game_engine_8cc" startline="179" endline="181">getFontSize</references>
        <references refid="class_monopoly_game_engine_1a13906373d7ee42cd405154047d76b281" compoundref="_monopoly_game_engine_8cc" startline="191" endline="193">getHotelCount</references>
        <references refid="class_monopoly_game_engine_1ae2a4e228360bfceb91c7a5cd6803b0fd" compoundref="_monopoly_game_engine_8cc" startline="187" endline="189">getHouseCount</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ae9a8bf736199ef2e643f750be08b1bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::updateAvailableHousesHotelText</definition>
        <argsstring>()</argsstring>
        <name>updateAvailableHousesHotelText</name>
        <briefdescription>
<para>Updates the text displaying the available count of houses and hotels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="875" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1890" bodyend="1893"/>
        <references refid="class_monopoly_game_engine_1a13906373d7ee42cd405154047d76b281" compoundref="_monopoly_game_engine_8cc" startline="191" endline="193">getHotelCount</references>
        <references refid="class_monopoly_game_engine_1ae2a4e228360bfceb91c7a5cd6803b0fd" compoundref="_monopoly_game_engine_8cc" startline="187" endline="189">getHouseCount</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a2af1706f23548c8ad118133badfc0160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int MonopolyGameEngine::calculateRent</definition>
        <argsstring>(unsigned int rolled_val, int pos)</argsstring>
        <name>calculateRent</name>
        <param>
          <type>unsigned int</type>
          <declname>rolled_val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Calculates the rent to be paid based on the rolled dice value and property position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rolled_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Rolled dice value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Property position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Calculated rent amount. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="883" column="14" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="487" bodyend="535"/>
        <references refid="class_monopoly_game_engine_1af6b0a0923148f7dc901195dccfdc7952" compoundref="_monopoly_game_engine_8cc" startline="386" endline="396">calculateGroupFieldsOwned</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a1721e377912232cb891c4f9d8b96a59a" compoundref="main_8h" startline="138">FOUR_HOUSES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594beaf5d374fd66e430d41b08642d1197a585" compoundref="main_8h" startline="144">FOUR_STATIONS</references>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_street_field_1a79785c76389d7bf9171797b9d1a16ebd" compoundref="_field_8cc" startline="239" endline="241">StreetField::getIsHotel</references>
        <references refid="class_property_field_1ac52da7b908a73ce329c1aff55f971bed" compoundref="_field_8cc" startline="150" endline="152">PropertyField::getIsMortgaged</references>
        <references refid="class_property_field_1a4e8d167377c43ea54f32d355d8d07993" compoundref="_field_8cc" startline="158" endline="160">PropertyField::getOwner</references>
        <references refid="class_utility_field_1a5476d4355c82780f3ec8d173513590ae" compoundref="_field_8cc" startline="274" endline="276">UtilityField::getRentMultipliers</references>
        <references refid="class_street_field_1af6ffa6777200808afa686a07a1be6e9a" compoundref="_field_8cc" startline="223" endline="225">StreetField::getRentValues</references>
        <references refid="class_station_field_1ae23e828cefa568b38ff525cd9db3b511" compoundref="_field_8cc" startline="266" endline="268">StationField::getRentValues</references>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" compoundref="_monopoly_game_engine_8cc" startline="376" endline="384">groupCompleted</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a9d02c50113762d50ac07c31528974579" compoundref="main_8h" startline="138">HOTEL</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3afbe39846abf8d0ca655daa4c5e6675f6" compoundref="main_8h" startline="138">NO_HOUSES</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3ae9309352dfb1c2542328bf77b979b796" compoundref="main_8h" startline="138">ONE_HOUSE</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea5abd12f5714ad8a5c78fbcfdd13d8363" compoundref="main_8h" startline="144">ONE_STATION</references>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113ae71bdf2240af02a5ef8ded8c01a8a692" compoundref="main_8h" startline="150">ONE_UTILITY</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a3cfedac7ca093a36b14fd248a3b8a5b4" compoundref="main_8h" startline="138">THREE_HOUSES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea4ee7c40343f7fc51e168ebb665d4865d" compoundref="main_8h" startline="144">THREE_STATIONS</references>
        <references refid="main_8h_1a98ed7cda9a98a2bc7217b41be46badc3a0ab6dd54fe0c67ece897f56705db3e3f" compoundref="main_8h" startline="138">TWO_HOUESES</references>
        <references refid="main_8h_1a5557e51432d2a191244125a3af3594bea324e5b4c78cf4a0c67ef4164dc635dc2" compoundref="main_8h" startline="144">TWO_STATIONS</references>
        <references refid="main_8h_1adcf7f1dbe13f702c7153ae56f085a113afd679c479954ac2c4c7143bc5e45cb6d" compoundref="main_8h" startline="150">TWO_UTILITIES</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" compoundref="main_8h" startline="132">UTILITY</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::buildingsManagingWorker</definition>
        <argsstring>()</argsstring>
        <name>buildingsManagingWorker</name>
        <briefdescription>
<para>Worker method for managing building and destroying houses/hotels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="888" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="600" bodyend="741"/>
        <references refid="class_monopoly_game_engine_1a48c42eb3f7bdd1a2758f196d83f83cdd" compoundref="_monopoly_game_engine_8cc" startline="211" endline="213">addHotels</references>
        <references refid="class_monopoly_game_engine_1a398cb3a8d88d5cbec47ec7230408a59f" compoundref="_monopoly_game_engine_8cc" startline="203" endline="205">addHouses</references>
        <references refid="class_monopoly_game_engine_1afd604c9fd373fa220ebe04ff9d5f191b" compoundref="_monopoly_game_engine_8cc" startline="467" endline="485">colorGroupEmpty</references>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_street_field_1a51d31e674e5526536210d24ed5bdc2c2" compoundref="_field_8cc" startline="231" endline="233">StreetField::getHotelPrice</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_street_field_1a812b99b2c3dc615a26f81756fa41aa51" compoundref="_field_8cc" startline="227" endline="229">StreetField::getHousePrice</references>
        <references refid="class_property_field_1ac52da7b908a73ce329c1aff55f971bed" compoundref="_field_8cc" startline="150" endline="152">PropertyField::getIsMortgaged</references>
        <references refid="class_property_field_1a118e8dac5640ec978cbd14519e0880fe" compoundref="_field_8cc" startline="146" endline="148">PropertyField::getMortgage</references>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <references refid="class_property_field_1a4e8d167377c43ea54f32d355d8d07993" compoundref="_field_8cc" startline="158" endline="160">PropertyField::getOwner</references>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="class_property_field_1aa323b39c72226b6d81782fb9f8b5ffd7" compoundref="_field_8cc" startline="154" endline="156">PropertyField::getUnmortgageValue</references>
        <references refid="class_monopoly_game_engine_1aaf7f625f32dc53f7413236a79afaf6d5" compoundref="_monopoly_game_engine_8cc" startline="398" endline="415">isBuildingLegal</references>
        <references refid="class_monopoly_game_engine_1afaf31ce9d8aaef4b36bbefe9b4b72f78" compoundref="_monopoly_game_engine_8cc" startline="417" endline="431">isDestroyingLegal</references>
        <references refid="class_monopoly_game_engine_1a34646774679d5ef5e9bbc6317953c7fa" compoundref="_monopoly_game_engine_8cc" startline="433" endline="450">isHotelBuildingLegal</references>
        <references refid="class_monopoly_game_engine_1ac01307d6ae292277aa3caf5855955a8c" compoundref="_monopoly_game_engine_8cc" startline="452" endline="465">isHotelDestroyingLegal</references>
        <references refid="class_street_field_1a9cdeb6a4610eed4f47e20d2cdebbe3a1" compoundref="_field_8cc" startline="243" endline="249">StreetField::setHouseNumber</references>
        <references refid="class_street_field_1aa50b622f5cc3dfa6ee3d00aa1a24bd14" compoundref="_field_8cc" startline="251" endline="253">StreetField::setIsHotel</references>
        <references refid="class_property_field_1a8ed81fa863c3d443a69141445d66616e" compoundref="_field_8cc" startline="166" endline="168">PropertyField::setIsMortgaged</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="class_monopoly_game_engine_1aff717ed99341b6d5ead0f68553803738" compoundref="_monopoly_game_engine_8cc" startline="215" endline="217">substractHotels</references>
        <references refid="class_monopoly_game_engine_1afa5bca69b0ead2b54879815f37f06a1f" compoundref="_monopoly_game_engine_8cc" startline="207" endline="209">substractHouses</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" compoundref="main_8h" startline="132">UTILITY</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::aiBuildingsMangingWorker</definition>
        <argsstring>()</argsstring>
        <name>aiBuildingsMangingWorker</name>
        <briefdescription>
<para>AI worker method for managing building and destroying houses/hotels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="893" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="743" bodyend="987"/>
        <references refid="class_monopoly_game_engine_1a48c42eb3f7bdd1a2758f196d83f83cdd" compoundref="_monopoly_game_engine_8cc" startline="211" endline="213">addHotels</references>
        <references refid="class_monopoly_game_engine_1a398cb3a8d88d5cbec47ec7230408a59f" compoundref="_monopoly_game_engine_8cc" startline="203" endline="205">addHouses</references>
        <references refid="class_monopoly_game_engine_1afd604c9fd373fa220ebe04ff9d5f191b" compoundref="_monopoly_game_engine_8cc" startline="467" endline="485">colorGroupEmpty</references>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_street_field_1a51d31e674e5526536210d24ed5bdc2c2" compoundref="_field_8cc" startline="231" endline="233">StreetField::getHotelPrice</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_street_field_1a812b99b2c3dc615a26f81756fa41aa51" compoundref="_field_8cc" startline="227" endline="229">StreetField::getHousePrice</references>
        <references refid="class_field_1aa3ea436b800a8078f04be2678c42f7c0" compoundref="_field_8cc" startline="48" endline="50">Field::getId</references>
        <references refid="class_street_field_1a79785c76389d7bf9171797b9d1a16ebd" compoundref="_field_8cc" startline="239" endline="241">StreetField::getIsHotel</references>
        <references refid="class_property_field_1ac52da7b908a73ce329c1aff55f971bed" compoundref="_field_8cc" startline="150" endline="152">PropertyField::getIsMortgaged</references>
        <references refid="class_property_field_1a118e8dac5640ec978cbd14519e0880fe" compoundref="_field_8cc" startline="146" endline="148">PropertyField::getMortgage</references>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="class_property_field_1aa323b39c72226b6d81782fb9f8b5ffd7" compoundref="_field_8cc" startline="154" endline="156">PropertyField::getUnmortgageValue</references>
        <references refid="class_monopoly_game_engine_1aaf7f625f32dc53f7413236a79afaf6d5" compoundref="_monopoly_game_engine_8cc" startline="398" endline="415">isBuildingLegal</references>
        <references refid="class_monopoly_game_engine_1afaf31ce9d8aaef4b36bbefe9b4b72f78" compoundref="_monopoly_game_engine_8cc" startline="417" endline="431">isDestroyingLegal</references>
        <references refid="class_monopoly_game_engine_1a34646774679d5ef5e9bbc6317953c7fa" compoundref="_monopoly_game_engine_8cc" startline="433" endline="450">isHotelBuildingLegal</references>
        <references refid="class_monopoly_game_engine_1ac01307d6ae292277aa3caf5855955a8c" compoundref="_monopoly_game_engine_8cc" startline="452" endline="465">isHotelDestroyingLegal</references>
        <references refid="class_street_field_1a9cdeb6a4610eed4f47e20d2cdebbe3a1" compoundref="_field_8cc" startline="243" endline="249">StreetField::setHouseNumber</references>
        <references refid="class_street_field_1aa50b622f5cc3dfa6ee3d00aa1a24bd14" compoundref="_field_8cc" startline="251" endline="253">StreetField::setIsHotel</references>
        <references refid="class_property_field_1a8ed81fa863c3d443a69141445d66616e" compoundref="_field_8cc" startline="166" endline="168">PropertyField::setIsMortgaged</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="class_monopoly_game_engine_1aff717ed99341b6d5ead0f68553803738" compoundref="_monopoly_game_engine_8cc" startline="215" endline="217">substractHotels</references>
        <references refid="class_monopoly_game_engine_1afa5bca69b0ead2b54879815f37f06a1f" compoundref="_monopoly_game_engine_8cc" startline="207" endline="209">substractHouses</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" compoundref="main_8h" startline="132">UTILITY</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca99f136a862ba5c7d16967231c29f09d6" compoundref="main_8h" startline="156">YES</references>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonopolyGameEngine::monopolyGameWorker</definition>
        <argsstring>()</argsstring>
        <name>monopolyGameWorker</name>
        <briefdescription>
<para>Main Worker method for whole monopoly game engine. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="898" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="1214" bodyend="1888"/>
        <references refid="class_withdraw_1a8573a264b72dddafdf68ba509f3fc752" compoundref="_withdraw_8cc" startline="1158" endline="1220">Withdraw::addPropertyPlayerShowed</references>
        <references refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" compoundref="_monopoly_game_engine_8cc" startline="743" endline="987">aiBuildingsMangingWorker</references>
        <references refid="main_8h_1a816a6251d75e4dcd37d944ca68752095ad1d2481f8e5c8b3feb0e8e1e10d2605d" compoundref="main_8h" startline="82">AUCTION</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8adba348bd899d580b26fd03130ce990e5" compoundref="_chance_8h" startline="26">BANK_PAYS_YOU</references>
        <references refid="main_8h_1a816a6251d75e4dcd37d944ca68752095a346a9950c4deb7434599827156fb0a5d" compoundref="main_8h" startline="82">BOARDGAME</references>
        <references refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" compoundref="_monopoly_game_engine_8cc" startline="600" endline="741">buildingsManagingWorker</references>
        <references refid="main_8h_1a8a2b1218113cc3385a8aaf1870e4a007a63bd0e8187aecf59420bcdb967a523ab" compoundref="main_8h" startline="158">BUY</references>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfbaadfb6dd0e03e15e442580ace912d1b71" compoundref="main_8h" startline="70">BUY_ACTION</references>
        <references refid="class_monopoly_game_engine_1a2af1706f23548c8ad118133badfc0160" compoundref="_monopoly_game_engine_8cc" startline="487" endline="535">calculateRent</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa81d2bb6df05f24d8afc01889a493875c" compoundref="main_8h" startline="132">CHANCE</references>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfbabb5f67832e200b08e5e2a19bf32e1d3d" compoundref="main_8h" startline="69">FIELD_ACTION</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a36b866fb0ef0a43e97d45afd676331db" compoundref="_chance_8h" startline="27">GET_OUT_OF_JAIL_CARD</references>
        <references refid="class_monopoly_game_engine_1ac157740551b8c65aefd2f1563305406a" compoundref="_monopoly_game_engine_8cc" startline="175" endline="177">getAuctionState</references>
        <references refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" compoundref="_monopoly_game_engine_8cc" startline="118" endline="120">getBoard</references>
        <references refid="class_street_field_1aaee4c344c359e9762653472f7f2e5df0" compoundref="_field_8cc" startline="235" endline="237">StreetField::getHouseNumber</references>
        <references refid="class_street_field_1a79785c76389d7bf9171797b9d1a16ebd" compoundref="_field_8cc" startline="239" endline="241">StreetField::getIsHotel</references>
        <references refid="class_field_1ad2e239a719acc3285a9b11b3aef6808c" compoundref="_field_8cc" startline="56" endline="58">Field::getName</references>
        <references refid="class_property_field_1a4e8d167377c43ea54f32d355d8d07993" compoundref="_field_8cc" startline="158" endline="160">PropertyField::getOwner</references>
        <references refid="class_monopoly_game_engine_1ab1be3d89016a48d4df0f8440a254e4d1" compoundref="_monopoly_game_engine_8cc" startline="122" endline="124">getPlayers</references>
        <references refid="class_monopoly_game_engine_1a5a7f70b3a7d70f563daf7426772590b4" compoundref="_monopoly_game_engine_8cc" startline="34" endline="36">getScreenType</references>
        <references refid="class_tax_field_1ac1ed0a0b9fa1c10a67f9759bb6a0f3d9" compoundref="_field_8cc" startline="282" endline="284">TaxField::getTaxValue</references>
        <references refid="class_chance_card_1a3f54572894e5259f3f4ed887b6ca3e5d" compoundref="_chance_8cc" startline="48" endline="50">ChanceCard::getText</references>
        <references refid="class_monopoly_game_engine_1a3eb8af1a66fd12f93da8072c3a2edfa8" compoundref="_monopoly_game_engine_8cc" startline="167" endline="169">getTurnState</references>
        <references refid="class_chance_card_1a9a328e8b7d8630469f0c114dbb3f947f" compoundref="_chance_8cc" startline="44" endline="46">ChanceCard::getType</references>
        <references refid="class_field_1a3c5261dc7fc032dd06268d3c94028d73" compoundref="_field_8cc" startline="52" endline="54">Field::getType</references>
        <references refid="class_chance_card_1a648076fb0cbccc144fc76f241cc892ec" compoundref="_chance_8cc" startline="40" endline="42">ChanceCard::getValue</references>
        <references refid="class_monopoly_game_engine_1a7a4c2e5ec5a548c44d2dca59438453b5" compoundref="_monopoly_game_engine_8cc" startline="3298" endline="3300">getWithdraw</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4c8584e93a1064fe61e904f19722d2d3" compoundref="main_8h" startline="132">GO_TO_JAIL</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a91bf8067739ba90229c9778cc2e8fc5b" compoundref="_chance_8h" startline="29">GO_TO_JAIL_CARD</references>
        <references refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3a3f68f09b467e0062fc47370c7e961578" compoundref="_monopoly_game_engine_8h" startline="31">INITIALIZATION</references>
        <references refid="class_withdraw_1a19f82027534a13d80536846c5af25829" compoundref="_withdraw_8cc" startline="1333" endline="1396">Withdraw::makeWithdraw</references>
        <references refid="class_withdraw_1a90b6611bc2eeec22d3b562fd183bf81e" compoundref="_withdraw_8cc" startline="708" endline="713">Withdraw::moneyTextUpdate</references>
        <references refid="class_withdraw_1ad2d77a9938893978c4a83432d51b67f9" compoundref="_withdraw_8cc" startline="688" endline="706">Withdraw::moneyTransferIndex</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a801c173bca36ec416f11048e1b2c6f47" compoundref="_chance_8h" startline="28">MOVEMENT_SPACES</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8aa6abdb82a1c36610b878bca693dadba4" compoundref="_chance_8h" startline="24">MOVEMENT_TO_PROPERTY</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca0d077f5b932ce05e5b9f30c6087a2f31" compoundref="main_8h" startline="156">NO</references>
        <references refid="_monopoly_game_engine_8h_1a7a1cb6d43fe517095daf4aa86259b5e3aace6aedb9800fa923394608e2fd6e511" compoundref="_monopoly_game_engine_8h" startline="31">NO_AUCTION</references>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfba3f8787368a9aa87f0bde02c09574a1df" compoundref="main_8h" startline="75">NO_TURN</references>
        <references refid="main_8h_1ab6ecd1223ac100310bac8f0f0131eb4aa4ec59db2fdb4c4c9a2cbef2d790131f5" compoundref="main_8h" startline="157">PAY</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a9e8cedcbf09748fa4a4cd4501eed3d3f" compoundref="_chance_8h" startline="30">PAY_FOR_HOUSE_HOTEL</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a970e023f8dba8b70f2496f9b712e6d95" compoundref="_chance_8h" startline="32">PAY_PLAYERS</references>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfba4e193c6e86daebec935247df1bdefe81" compoundref="main_8h" startline="71">PAY_RENT</references>
        <references refid="class_monopoly_game_engine_1aa95037b493d8fb2294404944a14dcca4" compoundref="_monopoly_game_engine_8cc" startline="219" endline="374">performAuction</references>
        <references refid="class_withdraw_1a24f1c04617ff3aa4de94c1648360f7c4" compoundref="_withdraw_8cc" startline="1222" endline="1323">Withdraw::propertyPlayerMoveIndex</references>
        <references refid="main_8h_1a8a2b1218113cc3385a8aaf1870e4a007a528042e12195bec7e89166ebb030caf7" compoundref="main_8h" startline="158">RESIGN</references>
        <references refid="main_8h_1a816a6251d75e4dcd37d944ca68752095a7186ecefe792fdae9fec0a42f105ad6b" compoundref="main_8h" startline="82">RESULT</references>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfba099a1107d491216f971a9f58e08abdd5" compoundref="main_8h" startline="68">ROLL_DICE</references>
        <references refid="class_monopoly_game_engine_1aa95963ea9455d6ac635d27eab779b6ce" compoundref="_monopoly_game_engine_8cc" startline="171" endline="173">setAuctionState</references>
        <references refid="class_withdraw_1a06d1cefc0b0fcf141a9a5c7ee0084a34" compoundref="_withdraw_8cc" startline="22" endline="33">Withdraw::setChooseScreenVisible</references>
        <references refid="class_withdraw_1a554845d087366abdc2672a7b6224ff68" compoundref="_withdraw_8cc" startline="142" endline="204">Withdraw::setDecisionScreenVisible</references>
        <references refid="class_withdraw_1aed1f0d13e5f3ce83500ec90b9338796a" compoundref="_withdraw_8cc" startline="584" endline="586">Withdraw::setPlayer2ToWithdraw</references>
        <references refid="class_monopoly_game_engine_1a1687a15b6b383199232fa95b947a4b6f" compoundref="_monopoly_game_engine_8cc" startline="30" endline="32">setScreenType</references>
        <references refid="class_withdraw_1acfbbad2752cb193ca17e8f2ab3ce9b1a" compoundref="_withdraw_8cc" startline="51" endline="140">Withdraw::setValueScreenVisible</references>
        <references refid="class_withdraw_1ab7bdb73ec95d72b844d65de653cb4214" compoundref="_withdraw_8cc" startline="715" endline="1108">Withdraw::showProperty</references>
        <references refid="class_monopoly_game_engine_1a2056b74cb9e17d045b01b7e49db82afe" compoundref="_monopoly_game_engine_8cc" startline="2714" endline="3063">showPropertyData</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daabe1ce018b886341a69d81ead8cffc786" compoundref="main_8h" startline="132">STATION</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa4bcaa53ccaacd4fb0a09eda9b8666ec8" compoundref="main_8h" startline="132">STREET</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daa30e59148af45aa6e6ab6bf5250a83f95" compoundref="main_8h" startline="132">TAX</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a074dbd69a3e9903629893556d8b1a350" compoundref="_chance_8h" startline="31">TAX_CARD</references>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfba3d215bd2cb3f68104967d4a5706dfa66" compoundref="main_8h" startline="72">TURN_END</references>
        <references refid="class_monopoly_game_engine_1a73ae5aa5598545a9b12264072a087364" compoundref="_monopoly_game_engine_8cc" startline="183" endline="185">turnInfoTextShow</references>
        <references refid="class_monopoly_game_engine_1ae9a8bf736199ef2e643f750be08b1bed" compoundref="_monopoly_game_engine_8cc" startline="1890" endline="1893">updateAvailableHousesHotelText</references>
        <references refid="class_monopoly_game_engine_1abdc99bcb328742800042bcbbfe1bc3f7" compoundref="_monopoly_game_engine_8cc" startline="2639" endline="2662">updateResultScreenStuff</references>
        <references refid="class_monopoly_game_engine_1a153294a850e9c8d42d35e95eec1de17e" compoundref="_monopoly_game_engine_8cc" startline="2090" endline="2113">updateTextPlayersInfo</references>
        <references refid="main_8h_1aa01498a3ceb2fa74dc9536c16caef1daaf91e6d92929883d407d0e190c4f45ad5" compoundref="main_8h" startline="132">UTILITY</references>
        <references refid="main_8h_1a816a6251d75e4dcd37d944ca68752095a676348a9c84d4798693550bfe5abefb4" compoundref="main_8h" startline="82">WITHDRAW_ADD_VALUE</references>
        <references refid="main_8h_1a816a6251d75e4dcd37d944ca68752095a101eeb39bd34a660642f0049a15b9a00" compoundref="main_8h" startline="82">WITHDRAW_CHOOSE_PLAYER</references>
        <references refid="main_8h_1a816a6251d75e4dcd37d944ca68752095a54a1652cbf634efed1a32b13ce600121" compoundref="main_8h" startline="82">WITHDRAW_DECISION</references>
        <references refid="main_8h_1a1fbb23a4b2427b486453417312008cfbab4ed9978f386ea18f050801b0ac02379" compoundref="main_8h" startline="73">WITHDRAW_ONGOING</references>
        <references refid="main_8h_1a45e4fd10ecc28edb6f4e3084b50ccb9ca99f136a862ba5c7d16967231c29f09d6" compoundref="main_8h" startline="156">YES</references>
        <referencedby refid="class_game_screen_1a140fce95914abbf9efac4ad6bb0c98dc" compoundref="_game_screen_8cc" startline="68" endline="98">GameScreen::worker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a7a4c2e5ec5a548c44d2dca59438453b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_withdraw" kindref="compound">Withdraw</ref> &amp;</type>
        <definition>Withdraw &amp; MonopolyGameEngine::getWithdraw</definition>
        <argsstring>()</argsstring>
        <name>getWithdraw</name>
        <briefdescription>
<para>Returns a reference to the <ref refid="class_withdraw" kindref="compound">Withdraw</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class_withdraw" kindref="compound">Withdraw</ref>&amp; Reference to the <ref refid="class_withdraw" kindref="compound">Withdraw</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="905" column="10" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3298" bodyend="3300"/>
        <referencedby refid="class_game_screen_1a0608fef110d89dab557fd0bac6950b77" compoundref="_game_screen_8cc" startline="100" endline="305">GameScreen::draw</referencedby>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
        <referencedby refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" compoundref="_monopoly_game_engine_8cc" startline="1214" endline="1888">monopolyGameWorker</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a3e16a285485813a9e4a121a198739176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::createChanceCards</definition>
        <argsstring>()</argsstring>
        <name>createChanceCards</name>
        <briefdescription>
<para>Creates the chance cards for the game. </para>
        </briefdescription>
        <detaileddescription>
<para>This method initializes and populates the collection of <ref refid="class_chance_card" kindref="compound">ChanceCard</ref> objects used in the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="913" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3302" bodyend="3329"/>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8adba348bd899d580b26fd03130ce990e5" compoundref="_chance_8h" startline="26">BANK_PAYS_YOU</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a36b866fb0ef0a43e97d45afd676331db" compoundref="_chance_8h" startline="27">GET_OUT_OF_JAIL_CARD</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a91bf8067739ba90229c9778cc2e8fc5b" compoundref="_chance_8h" startline="29">GO_TO_JAIL_CARD</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a801c173bca36ec416f11048e1b2c6f47" compoundref="_chance_8h" startline="28">MOVEMENT_SPACES</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8aa6abdb82a1c36610b878bca693dadba4" compoundref="_chance_8h" startline="24">MOVEMENT_TO_PROPERTY</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a34f8758edb9d9a4750a3adff079468ce" compoundref="_chance_8h" startline="25">MOVEMENT_WITH_BUY_OR_PAY</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a9e8cedcbf09748fa4a4cd4501eed3d3f" compoundref="_chance_8h" startline="30">PAY_FOR_HOUSE_HOTEL</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a970e023f8dba8b70f2496f9b712e6d95" compoundref="_chance_8h" startline="32">PAY_PLAYERS</references>
        <references refid="class_monopoly_game_engine_1a198a2731eb63d6c0a57bd0411bad89e9" compoundref="_monopoly_game_engine_8cc" startline="3331" endline="3335">shuffleChanceCards</references>
        <references refid="_chance_8h_1a5c239f5706ef4b178a48d01f1f8736c8a074dbd69a3e9903629893556d8b1a350" compoundref="_chance_8h" startline="31">TAX_CARD</references>
        <referencedby refid="class_game_screen_1a3866912fd5861b29c9ad3c08ea67fd16" compoundref="_game_screen_8cc" startline="17" endline="66">GameScreen::GameScreen</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monopoly_game_engine_1a198a2731eb63d6c0a57bd0411bad89e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonopolyGameEngine::shuffleChanceCards</definition>
        <argsstring>()</argsstring>
        <name>shuffleChanceCards</name>
        <briefdescription>
<para>Shuffles the chance cards. </para>
        </briefdescription>
        <detaileddescription>
<para>This method shuffles the collection of <ref refid="class_chance_card" kindref="compound">ChanceCard</ref> objects to randomize the order in which they will be drawn during the game. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="921" column="6" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.cc" bodystart="3331" bodyend="3335"/>
        <referencedby refid="class_monopoly_game_engine_1a3e16a285485813a9e4a121a198739176" compoundref="_monopoly_game_engine_8cc" startline="3302" endline="3329">createChanceCards</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class representing the main game engine for the Monopoly game. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_monopoly_game_engine" kindref="compound">MonopolyGameEngine</ref> class handles the overall game flow, including player turns, actions, and interactions with the game board. It also manages the graphical user interface (GUI) components. </para>
    </detaileddescription>
    <location file="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" line="40" column="1" bodyfile="/home/kamil/zpr/Monopoly/MonopolyGameEngine.h" bodystart="40" bodyend="922"/>
    <listofallmembers>
      <member refid="class_monopoly_game_engine_1a4ebb8f34bae663114ab0dbd073a5b593" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>ADD_100_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1afcd7efeec8c85fe2269240600ee9f824" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>add_100_to_offer_button_</name></member>
      <member refid="class_monopoly_game_engine_1a610120b3b6e52520e9e3bb8a6db76eab" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>ADD_10_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1ab70452b3bc96b10509ad2419539cc714" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>add_10_to_offer_button_</name></member>
      <member refid="class_monopoly_game_engine_1a6aed9c2621c4ad4a6c1a34e482544ec7" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>ADD_1_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a8bdda24f24b8c663728fb7d9a7af6309" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>add_1_to_offer_button_</name></member>
      <member refid="class_monopoly_game_engine_1a653ae4bf65d14a524938058081a2f12d" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>addAuctionButton</name></member>
      <member refid="class_monopoly_game_engine_1ac523b02a2ad163063c25e7019f57774c" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>addAuctionText</name></member>
      <member refid="class_monopoly_game_engine_1adf5644d237334e6749252420d80fac32" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>addButton</name></member>
      <member refid="class_monopoly_game_engine_1a48c42eb3f7bdd1a2758f196d83f83cdd" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>addHotels</name></member>
      <member refid="class_monopoly_game_engine_1a398cb3a8d88d5cbec47ec7230408a59f" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>addHouses</name></member>
      <member refid="class_monopoly_game_engine_1af1d8a552b14696fd038940ea7d8afb99" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>addOwnerToPropertyField</name></member>
      <member refid="class_monopoly_game_engine_1a8a92e457e602fcf6a0e1dbd2dbccc856" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>addText</name></member>
      <member refid="class_monopoly_game_engine_1ad9478380894898178164adc82c2fabeb" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>aiBuildingsMangingWorker</name></member>
      <member refid="class_monopoly_game_engine_1af7a4fd53b9fb6f680b9e6440268ce75c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>aiWithdrawWorker</name></member>
      <member refid="class_monopoly_game_engine_1a261d3695f1efa5fb90e409bfe79677dc" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>ALL_PROPERTY_DATA_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a3cfaae1ef10e66823ef20f619053bdcd" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>all_property_data_sprite_</name></member>
      <member refid="class_monopoly_game_engine_1a39b62c7dadf03e687a0a988b5e144047" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>all_property_data_texts_</name></member>
      <member refid="class_monopoly_game_engine_1a035ef41bb4a18a7017f0c41a383ca929" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>all_property_data_texture_</name></member>
      <member refid="class_monopoly_game_engine_1a822e589eb6b025c9e621fb9432f5fd00" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>auction_bid_button_</name></member>
      <member refid="class_monopoly_game_engine_1a7e0e12b28660580298384ba2824ead66" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>AUCTION_BID_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1aac729cf116c24a15267f747da73c9124" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>auction_buttons_</name></member>
      <member refid="class_monopoly_game_engine_1a88ea8e262a52769243b57feff22fcd13" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>auction_resign_button_</name></member>
      <member refid="class_monopoly_game_engine_1adc9f2bf911097ac081a42eb00374db3e" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>AUCTION_RESIGN_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1af3b75d0048ec6b54fd27ab28b65c1cad" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>auction_state_</name></member>
      <member refid="class_monopoly_game_engine_1adccb352c049c6adce664c6d9c056fdc3" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>auction_texts_</name></member>
      <member refid="class_monopoly_game_engine_1a4a65fcf2a17517c6c895e204ea5904b1" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>AVAILABLE_HOUSE_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1aaa203d2969f5238e01073fe535d247cc" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>available_houses_text_</name></member>
      <member refid="class_monopoly_game_engine_1a4123befa34c1a734e6a5ea3b561aba04" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>availableH_hotels_text_</name></member>
      <member refid="class_monopoly_game_engine_1a60ce3ef33166a617aaf330fd7b4076cb" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>bankrupt_button_</name></member>
      <member refid="class_monopoly_game_engine_1aeba85691830151cafcc5ef90d441bebf" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>BANKRUPT_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a9d48d9cfad4cc77c5c767314b79d2827" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>bidded_property_text_</name></member>
      <member refid="class_monopoly_game_engine_1aad070780d61f7512dcd14cd5f50e9fe7" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>BIDDED_PROPERTY_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a0edd7a58bece2709aca23a64453b04b3" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>bidder_info_text_</name></member>
      <member refid="class_monopoly_game_engine_1acd4bab4635fbf30f22a9bdfd1dfcd514" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>BIDDER_INFO_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1ad229895480ce122bb0d6df65f19b2e5f" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>boardToAuctionSwitchHandler</name></member>
      <member refid="class_monopoly_game_engine_1a6f09145fdc73c99a2fdf64c53ee1713a" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>buildingsManagingWorker</name></member>
      <member refid="class_monopoly_game_engine_1a65c884f9298540a51588577aed66eda5" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>buttons_</name></member>
      <member refid="class_monopoly_game_engine_1a0b2429a6389698793d2ccee3250ba74b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>buttonsWorker</name></member>
      <member refid="class_monopoly_game_engine_1a4424fdfb5c4c7c2ad9b0bd23c30bbcb4" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>BUY_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a3313c3e476a1855fb69697acb17cd659" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>buy_field_button_</name></member>
      <member refid="class_monopoly_game_engine_1a7694b67fa197f9a7afda96d951a97f30" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>buy_hotel_button_</name></member>
      <member refid="class_monopoly_game_engine_1a2d459c7773d852bf557ba029db828514" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>BUY_HOTEL_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1ae1f73832d0517c9b8c5c5a0d9ec749b2" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>buy_house_button_</name></member>
      <member refid="class_monopoly_game_engine_1a40c0ab74076203a39ddb2de447798d54" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>BUY_HOUSE_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1af6b0a0923148f7dc901195dccfdc7952" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>calculateGroupFieldsOwned</name></member>
      <member refid="class_monopoly_game_engine_1a2af1706f23548c8ad118133badfc0160" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>calculateRent</name></member>
      <member refid="class_monopoly_game_engine_1a3f0b7be16919b8fcc576b4b676764798" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>chance_card_current_</name></member>
      <member refid="class_monopoly_game_engine_1a489f0e3c67afc8d24e717d5f51970027" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>chance_cards_</name></member>
      <member refid="class_monopoly_game_engine_1a045486dbdf7cdbca414497de0c5bf9f0" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>CHANCE_FILE_PATH_</name></member>
      <member refid="class_monopoly_game_engine_1aca3157b9d922346e32ba8777f0b439e0" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>clearBoard</name></member>
      <member refid="class_monopoly_game_engine_1ac6f1dd50f3c5eecc6ba2872a1b895fd9" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>clearPlayers</name></member>
      <member refid="class_monopoly_game_engine_1a2187e2296efeaddb0a2c9468a6b5e70c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>clearPropertyData</name></member>
      <member refid="class_monopoly_game_engine_1afd604c9fd373fa220ebe04ff9d5f191b" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>colorGroupEmpty</name></member>
      <member refid="class_monopoly_game_engine_1a8237eb4fd279a8f4b094c14987ea37a1" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createAuctionBidButton</name></member>
      <member refid="class_monopoly_game_engine_1a41effaad0143e79955701cff92b2620f" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createAuctionOfferButtons</name></member>
      <member refid="class_monopoly_game_engine_1a3fc21384392435cdfcab356f98d5a838" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createAuctionResignButton</name></member>
      <member refid="class_monopoly_game_engine_1ac8629f2abd1bf12cfc0af747d16c867f" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createAvailableHousesHotelText</name></member>
      <member refid="class_monopoly_game_engine_1a01c8f3df78160a7b8719e1ad06d9c239" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createBoard</name></member>
      <member refid="class_monopoly_game_engine_1a742de8013c1466a6913bb5f5eceafeb4" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonBuyResign</name></member>
      <member refid="class_monopoly_game_engine_1a6a7786536439ae5af3c53d896b0a9a71" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonNextProperty</name></member>
      <member refid="class_monopoly_game_engine_1aa54fdcd0727761f010c096435dd40999" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonPerviousProperty</name></member>
      <member refid="class_monopoly_game_engine_1ab7c6acc2b155fbdc1952280c494a05fe" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonRollDice</name></member>
      <member refid="class_monopoly_game_engine_1af7a1b759d097257097926ed7fd60da14" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonsBankrupt</name></member>
      <member refid="class_monopoly_game_engine_1abbda29a495969e795d71c3a5d215b547" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonsBuySellHouseHotel</name></member>
      <member refid="class_monopoly_game_engine_1ae9772861221c6ce195b7b63122bf5523" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonsJailPay</name></member>
      <member refid="class_monopoly_game_engine_1a525ceed24c6db4fd8823fb1af27ba24b" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonsNextTurn</name></member>
      <member refid="class_monopoly_game_engine_1a59d448ed643e21447ac85cdfeea1fa1b" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createButtonWithdraw</name></member>
      <member refid="class_monopoly_game_engine_1a3e16a285485813a9e4a121a198739176" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createChanceCards</name></member>
      <member refid="class_monopoly_game_engine_1a555cc64819179c99afb2b39b58599074" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createCurrentOfferBidderInfo</name></member>
      <member refid="class_monopoly_game_engine_1a2cab04b721a44b8585b1af322afa2971" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createDefaultButton</name></member>
      <member refid="class_monopoly_game_engine_1af61f87c35e7969f4665091d80007a8dd" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createMortagingButton</name></member>
      <member refid="class_monopoly_game_engine_1abc237772db36ef7096d874ac7bf15076" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createPlayers</name></member>
      <member refid="class_monopoly_game_engine_1a746b88ee3a606c98cfa368192c1a34e9" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createResultScreenStuff</name></member>
      <member refid="class_monopoly_game_engine_1a9655bc29084d61fe0503ec16272630e6" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createTextBiddedProperty</name></member>
      <member refid="class_monopoly_game_engine_1a932aa1b22c5b339c568f8ea34749b1fb" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createTextBidderInfo</name></member>
      <member refid="class_monopoly_game_engine_1a04528f2dbaa4725b4430bdef63b2d9d0" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createTextHighestBidInfo</name></member>
      <member refid="class_monopoly_game_engine_1ac4396e37a67a062d796345afc0642af2" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createTextLeadingBidderInfo</name></member>
      <member refid="class_monopoly_game_engine_1a32c0ecaa71c51cdaae65178836af75b0" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createTextPlayersInfo</name></member>
      <member refid="class_monopoly_game_engine_1a73d985dc04d394ec469ee5d01e6b9a89" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createTextrolled_value</name></member>
      <member refid="class_monopoly_game_engine_1a7b07579e424f37298496eefaae2390e1" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>createTextTurnInfo</name></member>
      <member refid="class_monopoly_game_engine_1a3ffed7c02b2aea4dcc6cf9205de2eacf" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>current_offer_info_text_</name></member>
      <member refid="class_monopoly_game_engine_1aa0fe06bf4d0ae28a33fe7d4778412db5" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>CURRENT_OFFER_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a820014a0c8dfeaf5100ae75c0254cf6e" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>current_property_showed_</name></member>
      <member refid="class_monopoly_game_engine_1a1b5cce6ed1d1872bad8d464beb796aee" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>file_logger</name></member>
      <member refid="class_monopoly_game_engine_1add53615a57f6037ee8ad8a2c8620be4d" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>FILE_LOGGER_PATH</name></member>
      <member refid="class_monopoly_game_engine_1a11dd937360b5d9fec92f3a5363184095" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>fileLoggerClose</name></member>
      <member refid="class_monopoly_game_engine_1a6e9276ebf5df0db40a58448294ecbced" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>fileLoggerOpen</name></member>
      <member refid="class_monopoly_game_engine_1ad85138e0ceaa47eaa95f9fbc6fd80d7c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>fileLoggerWrite</name></member>
      <member refid="class_monopoly_game_engine_1a4e06372082bd466115d9395d4b248fa4" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>font_</name></member>
      <member refid="class_monopoly_game_engine_1a57cdf629f772934861b45098cc35d5b1" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>FONT_SIZE</name></member>
      <member refid="class_monopoly_game_engine_1a183c01e6f24af7c2e59f11ac834e6d9b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>game_turn_by_player_done_</name></member>
      <member refid="class_monopoly_game_engine_1a4d62ea58a2d905342a71e63994d59828" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>game_turns_globally_done_</name></member>
      <member refid="class_monopoly_game_engine_1ae10d7c9ffbd0400750804dfec0494ff3" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>GAME_TURNS_MAX</name></member>
      <member refid="class_monopoly_game_engine_1a6e35d107038b90c2f3fff72b02de83b6" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>gameboard_</name></member>
      <member refid="class_monopoly_game_engine_1a95655b450206eca8756798276ea491be" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>GAMEBOARD_FILE_PATH_</name></member>
      <member refid="class_monopoly_game_engine_1a7e4308182539fb942f984d2baf72d207" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>gameFinishedCheckDraw</name></member>
      <member refid="class_monopoly_game_engine_1a42fa6ce1eecca8bdd2f8289c115e0a70" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>gameFinishedCheckWinner</name></member>
      <member refid="class_monopoly_game_engine_1af9b05925192360013ec9a98f26bffb66" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>gameTurnsCounterHandle</name></member>
      <member refid="class_monopoly_game_engine_1ac21527f42cd63f19528e7ab3f51363db" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getAllPropertyDataSprite</name></member>
      <member refid="class_monopoly_game_engine_1aaf046cdf2a5b7bd05e1f8272b510de0f" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getAllPropertyDataTexts</name></member>
      <member refid="class_monopoly_game_engine_1afe06604028fa9abf53bae7fc6a909ae7" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getAuctionButtons</name></member>
      <member refid="class_monopoly_game_engine_1ac157740551b8c65aefd2f1563305406a" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getAuctionState</name></member>
      <member refid="class_monopoly_game_engine_1accb94fe0ad5bc9ce44f3dda3c91a4ce7" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getAuctionTexts</name></member>
      <member refid="class_monopoly_game_engine_1a30c9e966d81c055c15cc5576243a83a2" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getBoard</name></member>
      <member refid="class_monopoly_game_engine_1a2b1fb71410fb88b1cde5077f62fb82fd" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getButtons</name></member>
      <member refid="class_monopoly_game_engine_1ac59664c0ef86f9acd1b5984081318b25" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getChanceCard</name></member>
      <member refid="class_monopoly_game_engine_1a866494e803d5d76bb64f119fbfe26f05" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getFieldPriceByPosition</name></member>
      <member refid="class_monopoly_game_engine_1acaf81e835720ba22173b0dd6a0a87bf9" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getFont</name></member>
      <member refid="class_monopoly_game_engine_1af3f9a189ddaca72b5eb57b72bc4fbbe4" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getFontSize</name></member>
      <member refid="class_monopoly_game_engine_1a13906373d7ee42cd405154047d76b281" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getHotelCount</name></member>
      <member refid="class_monopoly_game_engine_1a2831ee2158d97ff536fd0fee57e338e2" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getHotelSprite</name></member>
      <member refid="class_monopoly_game_engine_1a56b2b17c31119dac5b1933571bac35f6" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getHotelTexture</name></member>
      <member refid="class_monopoly_game_engine_1ae2a4e228360bfceb91c7a5cd6803b0fd" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getHouseCount</name></member>
      <member refid="class_monopoly_game_engine_1ad0390270b455b07db016a389c89df8ea" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getHouseSize</name></member>
      <member refid="class_monopoly_game_engine_1a64330a6b6eea093a923675e749c00807" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getHouseSprite</name></member>
      <member refid="class_monopoly_game_engine_1ab55601ce0bb0b73719a5376723daa774" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getHouseTexture</name></member>
      <member refid="class_monopoly_game_engine_1a19263d676193f65b54209020dfdb928e" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getNotificationsWall</name></member>
      <member refid="class_monopoly_game_engine_1a298da9aa86d8b0381c244b629b8d771e" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getplayer_index_turn</name></member>
      <member refid="class_monopoly_game_engine_1ab1be3d89016a48d4df0f8440a254e4d1" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getPlayers</name></member>
      <member refid="class_monopoly_game_engine_1adac095bade2743a916480efc934911d5" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getPlayersResult</name></member>
      <member refid="class_monopoly_game_engine_1a98b4a5fdbf5e68ab062cd677ccb24f74" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getPropertyDataSprite</name></member>
      <member refid="class_monopoly_game_engine_1ac70b0b504fb2271353038a59c6604691" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getPropertyDataTexts</name></member>
      <member refid="class_monopoly_game_engine_1a838f18e88cd79f8cce47dd0dbb42ae3e" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getPropertyNameToDraw</name></member>
      <member refid="class_monopoly_game_engine_1af7cde31ae39d022e3d5f8be45d235ded" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getResultTexts</name></member>
      <member refid="class_monopoly_game_engine_1a5a7f70b3a7d70f563daf7426772590b4" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getScreenType</name></member>
      <member refid="class_monopoly_game_engine_1a3c28362ff3b68d93dec6dae6c0304641" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getTexts</name></member>
      <member refid="class_monopoly_game_engine_1a3eb8af1a66fd12f93da8072c3a2edfa8" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getTurnState</name></member>
      <member refid="class_monopoly_game_engine_1a10b63dc1c727575ef141a1cd36c9f282" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getUpdatePlayerSpritePosition</name></member>
      <member refid="class_monopoly_game_engine_1a7a4c2e5ec5a548c44d2dca59438453b5" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>getWithdraw</name></member>
      <member refid="class_monopoly_game_engine_1aa486edceb7c305c2f24785a6ee8ca2fc" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>groupCompleted</name></member>
      <member refid="class_monopoly_game_engine_1adb93bf0ef4eab1d2e1d5679a1541b345" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>handlePassingStart</name></member>
      <member refid="class_monopoly_game_engine_1a2f383163df9ca41bf411a5e04a17b74c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>highest_bid_info_text_</name></member>
      <member refid="class_monopoly_game_engine_1a3e96417432c22f899efa0125e5b96025" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>HIGHEST_BID_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a87fccd70763bd62a653a59eb26a46fab" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>hotel_count_</name></member>
      <member refid="class_monopoly_game_engine_1a224f0d805f88441bbbefc6648bedc97b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>hotel_text_</name></member>
      <member refid="class_monopoly_game_engine_1a13b9fcb0052ac65695f628462671d81d" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>HOTEL_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1aa46f5b9ba191f8c619ef140af54dd4db" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>hotel_texture_</name></member>
      <member refid="class_monopoly_game_engine_1acbe207f18c66e73b6c8f7730d197ac81" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>house_count_</name></member>
      <member refid="class_monopoly_game_engine_1af545a01a6875353bda7eafa212445fb1" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>house_size_</name></member>
      <member refid="class_monopoly_game_engine_1ad4c6ae46c9fdddc03a3f9e279e5229f2" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>house_text_</name></member>
      <member refid="class_monopoly_game_engine_1afe55cf703bf9572843cd44a9970dbd5b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>HOUSE_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a480c2f33efafecb3ddb5a7c3f47cb6ee" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>house_texture_</name></member>
      <member refid="class_monopoly_game_engine_1ae8b7454f40ae0bf9d8f4dde4bbc0e8ec" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>incplayer_index_turn</name></member>
      <member refid="class_monopoly_game_engine_1a494ff8130ecb1f10ce052cb5e22709e0" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>is_ai_game_only_</name></member>
      <member refid="class_monopoly_game_engine_1aaf7f625f32dc53f7413236a79afaf6d5" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>isBuildingLegal</name></member>
      <member refid="class_monopoly_game_engine_1a03209f8cf8c96fa21b53a4b31f5cb074" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>isButtonClicked</name></member>
      <member refid="class_monopoly_game_engine_1afaf31ce9d8aaef4b36bbefe9b4b72f78" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>isDestroyingLegal</name></member>
      <member refid="class_monopoly_game_engine_1a34646774679d5ef5e9bbc6317953c7fa" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>isHotelBuildingLegal</name></member>
      <member refid="class_monopoly_game_engine_1ac01307d6ae292277aa3caf5855955a8c" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>isHotelDestroyingLegal</name></member>
      <member refid="class_monopoly_game_engine_1a709874b75ec2a4c3d81ac0c1f5048000" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>jail_pay_button_</name></member>
      <member refid="class_monopoly_game_engine_1a90350a9cca29f342d41effd8a589d4b5" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>JAIL_PAY_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1aeda0fc9cc291e0180b8283c7000ac00b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>JAIL_PAY_MONEY</name></member>
      <member refid="class_monopoly_game_engine_1a0e379687b53634f70b7349b36a8cee9b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>leading_bidder_info_text_</name></member>
      <member refid="class_monopoly_game_engine_1ab5caa27a6a120513dbc7be20acf5b05c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>LEADING_BIDDER_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a1e415bb8dc59b8f765750f7690bacff8" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>makePlayerBankrupt</name></member>
      <member refid="class_monopoly_game_engine_1a0145e733b4897ca398f0d0505a58be6c" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>MonopolyGameEngine</name></member>
      <member refid="class_monopoly_game_engine_1a01eac196ca3a5c26194165c9efd470da" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>monopolyGameWorker</name></member>
      <member refid="class_monopoly_game_engine_1a19fe10bcfe3b3b26297909619e55cabe" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>mortgage_button_</name></member>
      <member refid="class_monopoly_game_engine_1ab8933db11e93ae9bae17248b1aba8167" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>MORTGAGE_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1ad67e9088e1bbcb34576af4e94250fec4" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>movePlayer</name></member>
      <member refid="class_monopoly_game_engine_1a9ea36f2999543f8f84b5c9507925c7e5" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>next_property_button_</name></member>
      <member refid="class_monopoly_game_engine_1a5407142f5b062e60417b372f6188c6fe" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>NEXT_PROPERTY_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a6bc3b17ccd8b916667e47d3ce7987959" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>next_turn_button_</name></member>
      <member refid="class_monopoly_game_engine_1a741bde89a158a4c6f1c2b78811f1fddd" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>NEXT_TURN_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a9675fd456131f0a0b0a58c23ef642b1c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>notificationAdd</name></member>
      <member refid="class_monopoly_game_engine_1aa14e2aa91b55e7266e153ae4d17fad7e" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>notifications_wall_</name></member>
      <member refid="class_monopoly_game_engine_1aa95037b493d8fb2294404944a14dcca4" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>performAuction</name></member>
      <member refid="class_monopoly_game_engine_1ad076c4861c72327eca718f1be106065b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>player_index_turn_</name></member>
      <member refid="class_monopoly_game_engine_1a69aa14776e25e418a733c3d2bfcacc08" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>player_info_text_</name></member>
      <member refid="class_monopoly_game_engine_1ad4914cdee7ee3da616d4515d2a607c99" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PLAYER_MONEY_DEFAULT_</name></member>
      <member refid="class_monopoly_game_engine_1a033c484200ad58af5de10ded3b2e67f6" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>players_</name></member>
      <member refid="class_monopoly_game_engine_1a0157f8dae264da57bd478db50415b462" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>players_bankrupted_</name></member>
      <member refid="class_monopoly_game_engine_1adb55d1cbb5d8213d12db6389bb46eea1" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PLAYERS_INFO_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a0af60128bdaaee0e65a3e232d701ce05" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PLAYERS_MAX_</name></member>
      <member refid="class_monopoly_game_engine_1ae7cedb1d37c121f7e639ecc3d7f603ab" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PLAYERS_MIN_</name></member>
      <member refid="class_monopoly_game_engine_1a0ad58bd68d3822e1a3d323b88f912c29" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>players_starting_amount_</name></member>
      <member refid="class_monopoly_game_engine_1acfe4d4fb23848827564aa0166928d9be" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>players_starting_Ids_</name></member>
      <member refid="class_monopoly_game_engine_1aceb27c0e85dd61797aebee6181a688d1" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>previous_property_button_</name></member>
      <member refid="class_monopoly_game_engine_1a3e451882b810c187eb5dd329e7a57d16" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PREVIOUS_PROPERTY_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1af82d873155e9fda69153df42774156be" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PROPERTY_DATA_AUCTION_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a9dc5ce205e5b4730d7b2abb579d841e7" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PROPERTY_DATA_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a403a30bca02ea5767895c1f9320a3c34" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>PROPERTY_DATA_SCALE</name></member>
      <member refid="class_monopoly_game_engine_1a037204989955e173a933f8f5272e138d" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>property_data_sprite_</name></member>
      <member refid="class_monopoly_game_engine_1ae46c3ae6692c4853b431c80b64d2638a" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>property_data_texts_</name></member>
      <member refid="class_monopoly_game_engine_1acd478cc44e0d32931d14dcef15af6920" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>property_data_texture_</name></member>
      <member refid="class_monopoly_game_engine_1a27ef4da5008a397f8efb95377c63f075" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>removePlayerFromGame</name></member>
      <member refid="class_monopoly_game_engine_1acefe55868a5b3103c779eb640d1ee1bd" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>resign_buy_field_button_</name></member>
      <member refid="class_monopoly_game_engine_1ac96403cf94e61065874cb8ab29161996" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>RESULT_DATA_Y</name></member>
      <member refid="class_monopoly_game_engine_1aa20b976c76e7d4a9a402b395e42e1b5e" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>result_players_places_</name></member>
      <member refid="class_monopoly_game_engine_1a6ace82395d0f33d948c657c59e3ec993" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>return_to_main_menu_button_</name></member>
      <member refid="class_monopoly_game_engine_1a37270af06e84a4edaf2043653803377e" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>roll_dice_button_</name></member>
      <member refid="class_monopoly_game_engine_1aa81c6a3eaaebbff2a479c63d3fed27c5" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>ROLL_DICE_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1ae8fb00612730f3abdab39eb6502498e4" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>rollDice</name></member>
      <member refid="class_monopoly_game_engine_1ab750ff8b2429188e28d8fadefdc99934" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>rolled_value_text_</name></member>
      <member refid="class_monopoly_game_engine_1aa43241c3174889271961d3bff819d771" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>ROLLED_VALUE_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a8a14d9c74c1b8f8b3932e00878c31f5a" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>screen_type_</name></member>
      <member refid="class_monopoly_game_engine_1abc2db5daa96ed76040de7a6c5ab7b567" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>sell_hotel_button_</name></member>
      <member refid="class_monopoly_game_engine_1a36a11e6b65fa798230ff24b7ac3edbc2" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>SELL_HOTEL_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a15dc3deb5841e3c3e3be2c8c392e7327" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>sell_house_button_</name></member>
      <member refid="class_monopoly_game_engine_1a11ddfcd8f1d533527871c03a64964ad6" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>SELL_HOUSE_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1ab23f6ebae01d423fdc7c4b0f997da5ba" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>sendToJail</name></member>
      <member refid="class_monopoly_game_engine_1aa95963ea9455d6ac635d27eab779b6ce" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>setAuctionState</name></member>
      <member refid="class_monopoly_game_engine_1a034d5e74627aa03da60bbcc92d671a61" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>setFont</name></member>
      <member refid="class_monopoly_game_engine_1aa705a9f340c99ddf656caec00e2ae107" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>setHotelCount</name></member>
      <member refid="class_monopoly_game_engine_1ac85b2577a665a2510cbd65226d4ae790" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>setHouseCount</name></member>
      <member refid="class_monopoly_game_engine_1ad6860ebdf586eff99b476ff529fb4e96" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>setplayer_index_turn</name></member>
      <member refid="class_monopoly_game_engine_1a1687a15b6b383199232fa95b947a4b6f" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>setScreenType</name></member>
      <member refid="class_monopoly_game_engine_1aa581d80172ed4ad5c5cc72ddb1a7195f" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>setTurnState</name></member>
      <member refid="class_monopoly_game_engine_1a0a1f5f698aac49a37c31960abab3fdff" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>showAllPropertiesWorker</name></member>
      <member refid="class_monopoly_game_engine_1a2056b74cb9e17d045b01b7e49db82afe" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>showPropertyData</name></member>
      <member refid="class_monopoly_game_engine_1a198a2731eb63d6c0a57bd0411bad89e9" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>shuffleChanceCards</name></member>
      <member refid="class_monopoly_game_engine_1a3b2fade1e72d3c05aef69e40f494c28c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>START_PASSING_MONEY_</name></member>
      <member refid="class_monopoly_game_engine_1a876f992f4f14768ebe44597e3e42afa7" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>SUBSTRACT_100_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a1755a232ea4a99c6fec34119de433178" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>substract_100_from_offer_button_</name></member>
      <member refid="class_monopoly_game_engine_1a778d68961dde4f52f6202c41abcfa0b8" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>SUBSTRACT_10_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a3f56ac00037ac3247c6d491f282f4eae" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>substract_10_from_offer_button_</name></member>
      <member refid="class_monopoly_game_engine_1a76c0ce8611233197f17c660ba7a2f7bf" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>SUBSTRACT_1_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a08799d8bf9a99b6c61d170fc8ddf5f86" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>substract_1_from_offer_button_</name></member>
      <member refid="class_monopoly_game_engine_1aff717ed99341b6d5ead0f68553803738" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>substractHotels</name></member>
      <member refid="class_monopoly_game_engine_1afa5bca69b0ead2b54879815f37f06a1f" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>substractHouses</name></member>
      <member refid="class_monopoly_game_engine_1ab30197b6e5fd252ea076ebbc4cfa517c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>Text100_</name></member>
      <member refid="class_monopoly_game_engine_1abc76a0c234b0688333e37c39ca1eb116" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>Text10_</name></member>
      <member refid="class_monopoly_game_engine_1a4503877876fb8db370b9a79656e1c8d6" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>Text1_</name></member>
      <member refid="class_monopoly_game_engine_1a3e9f2747b5c0ca0e2aad913111e07400" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>TEXT_100_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1af509613cec92b430d4e74b5eb68f1199" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>TEXT_10_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a5e90e55640d74bc840b03735f97b7238" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>TEXT_1_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a5cab4cf93b08c388c134ac0921a7dbfb" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>texts_</name></member>
      <member refid="class_monopoly_game_engine_1a9e6e10c6fce519ea2cafe69d6df1146c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>turn_info_text_</name></member>
      <member refid="class_monopoly_game_engine_1a9d9dbe864cfd6485edabca639cfeab54" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>TURN_INFO_TEXT_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a6e51bc7bcc8d43d4cb87bfbebe3f9dc6" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>turn_state_</name></member>
      <member refid="class_monopoly_game_engine_1a73ae5aa5598545a9b12264072a087364" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>turnInfoTextShow</name></member>
      <member refid="class_monopoly_game_engine_1ac503a4257e690e2f7e28a355964b6397" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>unmortgage_button_</name></member>
      <member refid="class_monopoly_game_engine_1aa146defe83e11b197f0ca21fcce7152d" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>UNMORTGAGE_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1ae9a8bf736199ef2e643f750be08b1bed" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>updateAvailableHousesHotelText</name></member>
      <member refid="class_monopoly_game_engine_1abd7f69a649532f12aa338a9b7707ace7" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>updateChanceCard</name></member>
      <member refid="class_monopoly_game_engine_1abdc99bcb328742800042bcbbfe1bc3f7" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>updateResultScreenStuff</name></member>
      <member refid="class_monopoly_game_engine_1a153294a850e9c8d42d35e95eec1de17e" prot="public" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>updateTextPlayersInfo</name></member>
      <member refid="class_monopoly_game_engine_1a06273e0bce92ea43a0ee99b7abe594c0" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>withdraw_</name></member>
      <member refid="class_monopoly_game_engine_1a8833d457b97c29fd8e2b4dce9c9ed59c" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>withdraw_button_</name></member>
      <member refid="class_monopoly_game_engine_1a9761b16485d0b391050a082f7332eeec" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>WITHDRAW_BUTTON_POSITION</name></member>
      <member refid="class_monopoly_game_engine_1a1d4c26553a5e77f4d004a9b287b1307b" prot="private" virt="non-virtual"><scope>MonopolyGameEngine</scope><name>withdrawWorker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_button" xml:lang="en-US">
<title>Button Class Reference</title>
<indexterm><primary>Button</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_button_1aeef559a4dc6afe4b7992f4cc6200e992"/><emphasis role="strong">Button</emphasis> (ScreenEventType type, sf::String btnText, sf::Vector2f buttonSize, int charSize)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1adf65892636ea303a84e1391106ea7cb0"/>void <emphasis role="strong">draw</emphasis> (sf::RenderWindow &amp;window)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a34779d5dfdc96291a25454975c14e2b2"/>bool <emphasis role="strong">isMouseOver</emphasis> (sf::RenderWindow &amp;window)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1af56e575bb7162c0fd8d4957ba7d034d6"/>virtual void <emphasis role="strong">mouseIsOver</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a570ca8dd513b159a2175df0aa9ea7c54"/>virtual void <emphasis role="strong">mouseIsNotOver</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a7087e218c95541abab91adba42ff5e5b"/>ScreenEventType <emphasis role="strong">getEventType</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a570723c1f92f01ef1ef2998338f215a4"/>void <emphasis role="strong">setEventType</emphasis> (ScreenEventType event)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a25a860f1b3490fe1346d36337a759b75"/>void <emphasis role="strong">setFont</emphasis> (sf::Font &amp;fonts)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a465bc046f013a24af6679fb9b7cad2b6"/>void <emphasis role="strong">setPosition</emphasis> (sf::Vector2f point)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a3c9c6168241bdfdc16dfc69848482599"/>void <emphasis role="strong">setIsClicked</emphasis> (bool state)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a2219d51c220740b01c352974882af574"/>bool <emphasis role="strong">getIsClicked</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a0860c867e652f08390c05929d6837c13"/>sf::Vector2f <emphasis role="strong">getSize</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1ad0c17a851c583752826018170c9fe980"/>void <emphasis role="strong">setIsVisible</emphasis> (bool state)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1af9c1d05c1ff0eba579db538f82eaf055"/>bool <emphasis role="strong">getIsVisible</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1aa1c40b1e9d6721bce0200c5136cc0d84"/>void <emphasis role="strong">setIsActive</emphasis> (bool state)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a782dba13361565b4c616f45af799b0b8"/>bool <emphasis role="strong">getIsActive</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1ae84c0d3f2c6f047455de3ff91f1322d9"/>void <emphasis role="strong">setIsFocus</emphasis> (bool state)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1ae0b1c8827cf3297a99fed32a79e63314"/>bool <emphasis role="strong">getIsFocus</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a1c2e473eb65a51608a75b77419404d7c"/>void <emphasis role="strong">setWasReleased</emphasis> (bool state)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a8c9bc47f5182ab1bafa899eadac2f394"/>bool <emphasis role="strong">getWasReleased</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1aba461925dd4989abca1262c2295a9902"/>sf::Text &amp; <emphasis role="strong">getText</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a71f7c59ef8030cbbbc71986ebb825742"/>void <emphasis role="strong">setActiveBackColor</emphasis> (sf::Color color)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1aa364c0369ab38c93d16942a70b4d4241"/>void <emphasis role="strong">setActiveTextColor</emphasis> (sf::Color color)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1ac5161631eb39913b5890fde4879c32b1"/>void <emphasis role="strong">setInactiveBackColor</emphasis> (sf::Color color)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a327b1692fa110c1668eded2bdf9ba98c"/>void <emphasis role="strong">setInactiveTextColor</emphasis> (sf::Color color)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a14094ee107d9e3bc3575431329a428a8"/>void <emphasis role="strong">setFocusBackColor</emphasis> (sf::Color color)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a26d258df4b6f383de921fb717618d896"/>void <emphasis role="strong">setFocusTextColor</emphasis> (sf::Color color)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1ae553fa694c6ce78568f846ddd791e6a2"/>void <emphasis role="strong">setButtonFocus</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1a8e4070b3ea3e499e805c03c2a9d0713d"/>void <emphasis role="strong">setButtonUnfocus</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_button_1ade4c79b172fadf65cd127816ab75cc32"/>void <emphasis role="strong">updateColors</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following files:</para>
/home/kamil/zpr/Monopoly/<link linkend="__button_8h">Button.h</link>/home/kamil/zpr/Monopoly/Button.cc</section>
